{"remainingRequest":"/home/gustavo/Documents/tese/loomio/vue/node_modules/babel-loader/lib/index.js!/home/gustavo/Documents/tese/loomio/vue/node_modules/vue-cli-plugin-coffee/node_modules/coffee-loader/dist/cjs.js!/home/gustavo/Documents/tese/loomio/vue/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!/home/gustavo/Documents/tese/loomio/vue/src/components/start_group/page.vue?vue&type=script&lang=coffee&","dependencies":[{"path":"/home/gustavo/Documents/tese/loomio/vue/src/components/start_group/page.vue","mtime":1706724415804},{"path":"/home/gustavo/Documents/tese/loomio/vue/.babelrc","mtime":1706724415792},{"path":"/home/gustavo/Documents/tese/loomio/vue/node_modules/vue-cli-plugin-coffee/node_modules/cache-loader/dist/cjs.js","mtime":1706724497848},{"path":"/home/gustavo/Documents/tese/loomio/vue/node_modules/babel-loader/lib/index.js","mtime":1706724500796},{"path":"/home/gustavo/Documents/tese/loomio/vue/node_modules/vue-cli-plugin-coffee/node_modules/coffee-loader/dist/cjs.js","mtime":1706724497848},{"path":"/home/gustavo/Documents/tese/loomio/vue/node_modules/@vue/vue-loader-v15/lib/index.js","mtime":1706724499784}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IFJlY29yZHMgZnJvbSAnQC9zaGFyZWQvc2VydmljZXMvcmVjb3Jkcyc7CmltcG9ydCBFdmVudEJ1cyBmcm9tICdAL3NoYXJlZC9zZXJ2aWNlcy9ldmVudF9idXMnOwppbXBvcnQgTG1vVXJsU2VydmljZSBmcm9tICdAL3NoYXJlZC9zZXJ2aWNlcy9sbW9fdXJsX3NlcnZpY2UnOwppbXBvcnQgQXV0aE1vZGFsTWl4aW4gZnJvbSAnQC9taXhpbnMvYXV0aF9tb2RhbCc7CmltcG9ydCBTZXNzaW9uIGZyb20gJ0Avc2hhcmVkL3NlcnZpY2VzL3Nlc3Npb24nOwppbXBvcnQgX2lzRW1wdHkgZnJvbSAnbG9kYXNoL2lzRW1wdHknOwpleHBvcnQgZGVmYXVsdCB7CiAgbWl4aW5zOiBbQXV0aE1vZGFsTWl4aW5dLAogIGRhdGE6IGZ1bmN0aW9uICgpIHsKICAgIHJldHVybiB7CiAgICAgIGdyb3VwOiBSZWNvcmRzLmdyb3Vwcy5idWlsZCgpCiAgICB9OwogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gKCkgewogICAgaWYgKCFTZXNzaW9uLmlzU2lnbmVkSW4oKSkgewogICAgICByZXR1cm4gdGhpcy5vcGVuQXV0aE1vZGFsKCk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["/home/gustavo/Documents/tese/loomio/vue/src/components/start_group/page.vue"],"names":[],"mappings":"AACA,OAAA,OAAA,MAAA,2BAAA;AACA,OAAA,QAAA,MAAA,6BAAA;AACA,OAAA,aAAA,MAAA,mCAAA;AACA,OAAA,cAAA,MAAA,qBAAA;AACA,OAAA,OAAA,MAAA,2BAAA;AAEA,OAAA,QAAA,MAAA,gBAAA;AAEA,eACE;AAAA,EAAA,MAAA,EAAQ,CAAR,cAAQ,CAAR;AACA,EAAA,IAAA,EAAM,YAAA;WACJ;AAAA,MAAA,KAAA,EAAO,OAAO,CAAC,MAAR,CAAA,KAAA;AAAP,K;AAFF,GAAA;AAGA,EAAA,OAAA,EAAS,YAAA;AACP,QAAA,CAAwB,OAAO,CAA/B,UAAwB,EAAxB,EAAA;aAAA,KAAA,aAAA,E;;AADO;AAHT,CADF","sourcesContent":["\nimport Records       from '@/shared/services/records'\nimport EventBus      from '@/shared/services/event_bus'\nimport LmoUrlService from '@/shared/services/lmo_url_service'\nimport AuthModalMixin  from '@/mixins/auth_modal'\nimport Session from '@/shared/services/session'\n\nimport _isEmpty     from 'lodash/isEmpty'\n\nexport default\n  mixins: [AuthModalMixin]\n  data: ->\n    group: Records.groups.build()\n  mounted: ->\n    @openAuthModal() unless Session.isSignedIn()\n"],"sourceRoot":""}]}