{"remainingRequest":"/home/gustavo/Documents/tese/loomio/vue/node_modules/babel-loader/lib/index.js!/home/gustavo/Documents/tese/loomio/vue/node_modules/vue-cli-plugin-coffee/node_modules/coffee-loader/dist/cjs.js!/home/gustavo/Documents/tese/loomio/vue/src/shared/interfaces/membership_records_interface.coffee","dependencies":[{"path":"/home/gustavo/Documents/tese/loomio/vue/src/shared/interfaces/membership_records_interface.coffee","mtime":1706724415808},{"path":"/home/gustavo/Documents/tese/loomio/vue/.babelrc","mtime":1706724415792},{"path":"/home/gustavo/Documents/tese/loomio/vue/node_modules/vue-cli-plugin-coffee/node_modules/cache-loader/dist/cjs.js","mtime":1706724497848},{"path":"/home/gustavo/Documents/tese/loomio/vue/node_modules/babel-loader/lib/index.js","mtime":1706724500796},{"path":"/home/gustavo/Documents/tese/loomio/vue/node_modules/vue-cli-plugin-coffee/node_modules/coffee-loader/dist/cjs.js","mtime":1706724497848}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIE1lbWJlcmhpcFJlY29yZHNJbnRlcmZhY2UsCiAgICBib3VuZE1ldGhvZENoZWNrID0gZnVuY3Rpb24gKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgewogIGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7CiAgICB0aHJvdyBuZXcgRXJyb3IoJ0JvdW5kIGluc3RhbmNlIG1ldGhvZCBhY2Nlc3NlZCBiZWZvcmUgYmluZGluZycpOwogIH0KfTsKCmltcG9ydCBCYXNlUmVjb3Jkc0ludGVyZmFjZSBmcm9tICdAL3NoYXJlZC9yZWNvcmRfc3RvcmUvYmFzZV9yZWNvcmRzX2ludGVyZmFjZSc7CmltcG9ydCBNZW1iZXJoaXBNb2RlbCBmcm9tICdAL3NoYXJlZC9tb2RlbHMvbWVtYmVyc2hpcF9tb2RlbCc7CmV4cG9ydCBkZWZhdWx0IE1lbWJlcmhpcFJlY29yZHNJbnRlcmZhY2UgPSBmdW5jdGlvbiAoKSB7CiAgY2xhc3MgTWVtYmVyaGlwUmVjb3Jkc0ludGVyZmFjZSBleHRlbmRzIEJhc2VSZWNvcmRzSW50ZXJmYWNlIHsKICAgIGNvbnN0cnVjdG9yKCkgewogICAgICBzdXBlciguLi5hcmd1bWVudHMpOwogICAgICB0aGlzLnNhdmVFeHBlcmllbmNlID0gdGhpcy5zYXZlRXhwZXJpZW5jZS5iaW5kKHRoaXMpOwogICAgfQoKICAgIGZvclVzZXIodXNlcikgewogICAgICByZXR1cm4gdGhpcy5jb2xsZWN0aW9uLmZpbmQoewogICAgICAgIHVzZXJJZDogdXNlci5pZAogICAgICB9KTsKICAgIH0KCiAgICBmb3JNb2RlbChtb2RlbCkgewogICAgICByZXR1cm4gdGhpcy5jb2xsZWN0aW9uLmZpbmQoewogICAgICAgIGdyb3VwSWQ6IHsKICAgICAgICAgICRpbjogbW9kZWwuZ3JvdXBJZHMoKQogICAgICAgIH0KICAgICAgfSk7CiAgICB9CgogICAgZm9yR3JvdXAoZ3JvdXApIHsKICAgICAgcmV0dXJuIHRoaXMuY29sbGVjdGlvbi5maW5kKHsKICAgICAgICBncm91cElkOiBncm91cC5pZAogICAgICB9KTsKICAgIH0KCiAgICBqb2luR3JvdXAoZ3JvdXApIHsKICAgICAgcmV0dXJuIHRoaXMucmVtb3RlLnBvc3QoJ2pvaW5fZ3JvdXAnLCB7CiAgICAgICAgZ3JvdXBfaWQ6IGdyb3VwLmlkCiAgICAgIH0pOwogICAgfQoKICAgIGZldGNoTXlNZW1iZXJzaGlwcygpIHsKICAgICAgcmV0dXJuIHRoaXMuZmV0Y2goewogICAgICAgIHBhdGg6ICdteV9tZW1iZXJzaGlwcycKICAgICAgfSk7CiAgICB9IC8vIFRoZXJlJ3MgYSBwYXR0ZXJuIGVtZXJnaW5nIGZvciBzZWFyY2hpbmcgYnkgZnJhZ21lbnQuLi4KCgogICAgZmV0Y2hCeU5hbWVGcmFnbWVudChmcmFnbWVudCwgZ3JvdXBLZXkpIHsKICAgICAgbGV0IGxpbWl0ID0gYXJndW1lbnRzLmxlbmd0aCA+IDIgJiYgYXJndW1lbnRzWzJdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMl0gOiA1OwogICAgICByZXR1cm4gdGhpcy5mZXRjaCh7CiAgICAgICAgcGF0aDogJ2F1dG9jb21wbGV0ZScsCiAgICAgICAgcGFyYW1zOiB7CiAgICAgICAgICBxOiBmcmFnbWVudCwKICAgICAgICAgIGdyb3VwX2tleTogZ3JvdXBLZXksCiAgICAgICAgICBwZXI6IGxpbWl0CiAgICAgICAgfQogICAgICB9KTsKICAgIH0gLy8gZmV0Y2hCeUdyb3VwOiAoZ3JvdXBLZXksIG9wdGlvbnMgPSB7fSkgLT4KICAgIC8vICAgQGZldGNoCiAgICAvLyAgICAgcGFyYW1zOgogICAgLy8gICAgICAgZ3JvdXBfa2V5OiBncm91cEtleQogICAgLy8gICAgICAgcGVyOiBvcHRpb25zWydwZXInXSBvciAzMAoKCiAgICBmZXRjaEJ5VXNlcih1c2VyKSB7CiAgICAgIGxldCBvcHRpb25zID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiB7fTsKICAgICAgcmV0dXJuIHRoaXMuZmV0Y2goewogICAgICAgIHBhdGg6ICdmb3JfdXNlcicsCiAgICAgICAgcGFyYW1zOiB7CiAgICAgICAgICB1c2VyX2lkOiB1c2VyLmlkLAogICAgICAgICAgcGVyOiBvcHRpb25zWydwZXInXSB8fCAzMAogICAgICAgIH0KICAgICAgfSk7CiAgICB9CgogICAgbWFrZUFkbWluKG1lbWJlcnNoaXApIHsKICAgICAgcmV0dXJuIHRoaXMucmVtb3RlLnBvc3RNZW1iZXIobWVtYmVyc2hpcC5pZCwgIm1ha2VfYWRtaW4iKTsKICAgIH0KCiAgICByZW1vdmVBZG1pbihtZW1iZXJzaGlwKSB7CiAgICAgIHJldHVybiB0aGlzLnJlbW90ZS5wb3N0TWVtYmVyKG1lbWJlcnNoaXAuaWQsICJyZW1vdmVfYWRtaW4iKTsKICAgIH0KCiAgICBzYXZlRXhwZXJpZW5jZShleHBlcmllbmNlLCBtZW1iZXJzaGlwKSB7CiAgICAgIGJvdW5kTWV0aG9kQ2hlY2sodGhpcywgTWVtYmVyaGlwUmVjb3Jkc0ludGVyZmFjZSk7CiAgICAgIHJldHVybiB0aGlzLnJlbW90ZS5wb3N0TWVtYmVyKG1lbWJlcnNoaXAuaWQsICJzYXZlX2V4cGVyaWVuY2UiLCB7CiAgICAgICAgZXhwZXJpZW5jZTogZXhwZXJpZW5jZQogICAgICB9KTsKICAgIH0KCiAgfQoKICA7CiAgTWVtYmVyaGlwUmVjb3Jkc0ludGVyZmFjZS5wcm90b3R5cGUubW9kZWwgPSBNZW1iZXJoaXBNb2RlbDsKICByZXR1cm4gTWVtYmVyaGlwUmVjb3Jkc0ludGVyZmFjZTsKfS5jYWxsKHRoaXMpOw=="},{"version":3,"sources":["/home/gustavo/Documents/tese/loomio/vue/src/shared/interfaces/membership_records_interface.coffee"],"names":[],"mappings":"AAAA,IAAA,yBAAA;AAAA,IAAA,gBAAA,GAAA,UAAA,QAAA,EAAA,WAAA,EAAA;AAAA,MAAA,EAAA,QAAA,YAAA,WAAA,CAAA,EAAA;AAAA,UAAA,IAAA,KAAA,CAAA,+CAAA,CAAA;AAAA;AAAA,CAAA;;AAAA,OAAA,oBAAA,MAAA,8CAAA;AACA,OAAA,cAAA,MAAA,kCAAA;AAGA,eAAqB,yBAAA,GAAA,YAAA;AAAN,QAAA,yBAAA,SAAwC,oBAAxC,CAAA;;;AA4Cb,WAAA,cAAA,GAAA,KAAA,cAAA,CAAA,IAAA,CAAA,IAAA,CAAA;;;AAzCA,IAAA,OAAS,CAAA,IAAA,EAAA;aACP,KAAC,UAAD,CAAA,IAAA,CAAiB;AAAA,QAAA,MAAA,EAAQ,IAAI,CAAC;AAAb,OAAjB,C;AADO;;AAGT,IAAA,QAAU,CAAA,KAAA,EAAA;aACR,KAAC,UAAD,CAAA,IAAA,CAAiB;AAAA,QAAA,OAAA,EAAS;AAAC,UAAA,GAAA,EAAK,KAAK,CAAL,QAAA;AAAN;AAAT,OAAjB,C;AADQ;;AAGV,IAAA,QAAU,CAAA,KAAA,EAAA;aACR,KAAC,UAAD,CAAA,IAAA,CAAiB;AAAA,QAAA,OAAA,EAAS,KAAK,CAAC;AAAf,OAAjB,C;AADQ;;AAGV,IAAA,SAAW,CAAA,KAAA,EAAA;aACT,KAAC,MAAD,CAAA,IAAA,CAAA,YAAA,EAA2B;AAAA,QAAA,QAAA,EAAU,KAAK,CAAC;AAAhB,OAA3B,C;AADS;;AAGX,IAAA,kBAAoB,GAAA;aAClB,KAAA,KAAA,CACE;AAAA,QAAA,IAAA,EAAM;AAAN,OADF,C;AAfJ,KADe,C;;;AAoBb,IAAA,mBAAqB,CAAA,QAAA,EAAA,QAAA,EAAA;AAAA,UAAqB,KAArB,uEAAA,CAAA;aACnB,KAAA,KAAA,CACE;AAAA,QAAA,IAAA,EAAA,cAAA;AACA,QAAA,MAAA,EAAQ;AAAE,UAAA,CAAA,EAAF,QAAA;AAAe,UAAA,SAAA,EAAf,QAAA;AAAoC,UAAA,GAAA,EAAK;AAAzC;AADR,OADF,C;AApBJ,KADe,C;;;;;;;AA+Bb,IAAA,WAAa,CAAA,IAAA,EAAA;AAAA,UAAO,OAAP,uEAAA,EAAA;aACX,KAAA,KAAA,CACE;AAAA,QAAA,IAAA,EAAA,UAAA;AACA,QAAA,MAAA,EACE;AAAA,UAAA,OAAA,EAAS,IAAI,CAAb,EAAA;AACA,UAAA,GAAA,EAAK,OAAO,CAAP,KAAO,CAAP,IAAkB;AADvB;AAFF,OADF,C;AADW;;AAOb,IAAA,SAAW,CAAA,UAAA,EAAA;aACT,KAAC,MAAD,CAAA,UAAA,CAAmB,UAAU,CAA7B,EAAA,EAAA,YAAA,C;AADS;;AAGX,IAAA,WAAa,CAAA,UAAA,EAAA;aACX,KAAC,MAAD,CAAA,UAAA,CAAmB,UAAU,CAA7B,EAAA,EAAA,cAAA,C;AADW;;AAGb,IAAA,cAAgB,CAAA,UAAA,EAAA,UAAA,EAAA;6BA5CG,yB;aA6CjB,KAAC,MAAD,CAAA,UAAA,CAAmB,UAAU,CAA7B,EAAA,EAAA,iBAAA,EAAqD;AAAA,QAAA,UAAA,EAAY;AAAZ,OAArD,C;AADc;;AA5CH;;AAAA;sCACb,K,GAAO,c;;CADY,C,IAAA,C,IAAA,CAArB","sourcesContent":["import BaseRecordsInterface from '@/shared/record_store/base_records_interface'\nimport MemberhipModel       from '@/shared/models/membership_model'\nimport {includes} from 'lodash'\n\nexport default class MemberhipRecordsInterface extends BaseRecordsInterface\n  model: MemberhipModel\n\n  forUser: (user) ->\n    @collection.find(userId: user.id)\n\n  forModel: (model) ->\n    @collection.find(groupId: {$in: model.groupIds()})\n\n  forGroup: (group) ->\n    @collection.find(groupId: group.id)\n\n  joinGroup: (group) ->\n    @remote.post 'join_group', group_id: group.id\n\n  fetchMyMemberships: ->\n    @fetch\n      path: 'my_memberships'\n\n  # There's a pattern emerging for searching by fragment...\n  fetchByNameFragment: (fragment, groupKey, limit = 5) ->\n    @fetch\n      path: 'autocomplete'\n      params: { q: fragment, group_key: groupKey, per: limit }\n\n  # fetchByGroup: (groupKey, options = {}) ->\n  #   @fetch\n  #     params:\n  #       group_key: groupKey\n  #       per: options['per'] or 30\n\n  fetchByUser: (user, options = {}) ->\n    @fetch\n      path: 'for_user'\n      params:\n        user_id: user.id\n        per: options['per'] or 30\n\n  makeAdmin: (membership) ->\n    @remote.postMember membership.id, \"make_admin\"\n\n  removeAdmin: (membership) ->\n    @remote.postMember membership.id, \"remove_admin\"\n\n  saveExperience: (experience, membership) =>\n    @remote.postMember(membership.id, \"save_experience\", experience: experience)\n"],"sourceRoot":""}]}