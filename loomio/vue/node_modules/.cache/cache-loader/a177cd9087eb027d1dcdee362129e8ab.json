{"remainingRequest":"/home/gustavo/Documents/tese/loomio/vue/node_modules/babel-loader/lib/index.js!/home/gustavo/Documents/tese/loomio/vue/node_modules/vue-cli-plugin-coffee/node_modules/coffee-loader/dist/cjs.js!/home/gustavo/Documents/tese/loomio/vue/src/mixins/watch_records.coffee","dependencies":[{"path":"/home/gustavo/Documents/tese/loomio/vue/src/mixins/watch_records.coffee","mtime":1706724415808},{"path":"/home/gustavo/Documents/tese/loomio/vue/.babelrc","mtime":1706724415792},{"path":"/home/gustavo/Documents/tese/loomio/vue/node_modules/vue-cli-plugin-coffee/node_modules/cache-loader/dist/cjs.js","mtime":1706724497848},{"path":"/home/gustavo/Documents/tese/loomio/vue/node_modules/babel-loader/lib/index.js","mtime":1706724500796},{"path":"/home/gustavo/Documents/tese/loomio/vue/node_modules/vue-cli-plugin-coffee/node_modules/coffee-loader/dist/cjs.js","mtime":1706724497848}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IFJlY29yZHMgZnJvbSAnQC9zaGFyZWQvc2VydmljZXMvcmVjb3Jkcyc7CmV4cG9ydCBkZWZhdWx0IHsKICBkYXRhOiBmdW5jdGlvbiAoKSB7CiAgICByZXR1cm4gewogICAgICB3YXRjaGVkUmVjb3JkczogW10KICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICB3YXRjaFJlY29yZHM6IGZ1bmN0aW9uIChfcmVmKSB7CiAgICAgIGxldCB7CiAgICAgICAgY29sbGVjdGlvbnMsCiAgICAgICAgcXVlcnksCiAgICAgICAga2V5ID0gJycKICAgICAgfSA9IF9yZWY7CiAgICAgIHZhciBuYW1lOwogICAgICBuYW1lID0gYCR7Y29sbGVjdGlvbnMuam9pbignXycpfV8ke3RoaXMuX3VpZH1fJHtrZXl9YDsKICAgICAgdGhpcy53YXRjaGVkUmVjb3Jkcy5wdXNoKG5hbWUpOwogICAgICByZXR1cm4gUmVjb3Jkcy52aWV3KHsKICAgICAgICBuYW1lOiBuYW1lLAogICAgICAgIGNvbGxlY3Rpb25zOiBjb2xsZWN0aW9ucywKICAgICAgICBxdWVyeTogcXVlcnkKICAgICAgfSk7CiAgICB9CiAgfSwKICBiZWZvcmVEZXN0cm95OiBmdW5jdGlvbiAoKSB7CiAgICByZXR1cm4gdGhpcy53YXRjaGVkUmVjb3Jkcy5mb3JFYWNoKGZ1bmN0aW9uIChuYW1lKSB7CiAgICAgIHJldHVybiBkZWxldGUgUmVjb3Jkcy52aWV3c1tuYW1lXTsKICAgIH0pOwogIH0KfTs="},{"version":3,"sources":["/home/gustavo/Documents/tese/loomio/vue/src/mixins/watch_records.coffee"],"names":[],"mappings":"AAAA,OAAA,OAAA,MAAA,2BAAA;AAEA,eACE;AAAA,EAAA,IAAA,EAAM,YAAA;WACJ;AAAA,MAAA,cAAA,EAAgB;AAAhB,K;AADF,GAAA;AAGA,EAAA,OAAA,EACE;AAAA,IAAA,YAAA,EAAc,gBAAA;AAAA,UAAC;AAAA,QAAA,WAAA;AAAA,QAAA,KAAA;AAAqB,QAAA,GAAA,GAAtB;AAAC,OAAD;AAClB,UAAA,IAAA;AAAM,MAAA,IAAA,GAAO,GAAG,WAAW,CAAX,IAAA,CAAH,GAAG,CAAH,IAA4B,KAA5B,IAAA,IAAA,GAAA,EAAP;AACA,WAAC,cAAD,CAAA,IAAA,CAAA,IAAA;aACA,OAAO,CAAP,IAAA,CACE;AAAA,QAAA,IAAA,EAAA,IAAA;AACA,QAAA,WAAA,EADA,WAAA;AAEA,QAAA,KAAA,EAAO;AAFP,OADF,C;AAHY;AAAd,GAJF;AAYA,EAAA,aAAA,EAAe,YAAA;WACb,KAAC,cAAD,CAAA,OAAA,CAAwB,UAAA,IAAA,EAAA;aAAU,OAAO,OAAO,CAAC,KAAR,CAAa,IAAb,C;AAAzC,KAAA,C;AADa;AAZf,CADF","sourcesContent":["import Records from '@/shared/services/records'\n\nexport default\n  data: ->\n    watchedRecords: []\n\n  methods:\n    watchRecords: ({collections, query, key = ''}) ->\n      name = \"#{collections.join('_')}_#{@_uid}_#{key}\"\n      @watchedRecords.push name\n      Records.view\n        name: name\n        collections: collections\n        query: query\n\n  beforeDestroy: ->\n    @watchedRecords.forEach (name) -> delete Records.views[name]\n"],"sourceRoot":""}]}