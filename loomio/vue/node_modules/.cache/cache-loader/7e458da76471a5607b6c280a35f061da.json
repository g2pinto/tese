{"remainingRequest":"/home/gustavo/Documents/tese/loomio/vue/node_modules/babel-loader/lib/index.js!/home/gustavo/Documents/tese/loomio/vue/node_modules/vue-cli-plugin-coffee/node_modules/coffee-loader/dist/cjs.js!/home/gustavo/Documents/tese/loomio/vue/src/shared/models/stance_model.coffee","dependencies":[{"path":"/home/gustavo/Documents/tese/loomio/vue/src/shared/models/stance_model.coffee","mtime":1706724415808},{"path":"/home/gustavo/Documents/tese/loomio/vue/.babelrc","mtime":1706724415792},{"path":"/home/gustavo/Documents/tese/loomio/vue/node_modules/vue-cli-plugin-coffee/node_modules/cache-loader/dist/cjs.js","mtime":1706724497848},{"path":"/home/gustavo/Documents/tese/loomio/vue/node_modules/babel-loader/lib/index.js","mtime":1706724500796},{"path":"/home/gustavo/Documents/tese/loomio/vue/node_modules/vue-cli-plugin-coffee/node_modules/coffee-loader/dist/cjs.js","mtime":1706724497848}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9wYXJzZUludCBmcm9tICJsb2Rhc2gvcGFyc2VJbnQiOwppbXBvcnQgX3NvcnRCeSBmcm9tICJsb2Rhc2gvc29ydEJ5IjsKaW1wb3J0IF9pbmNsdWRlcyBmcm9tICJsb2Rhc2gvaW5jbHVkZXMiOwppbXBvcnQgX2ZsYXR0ZW4gZnJvbSAibG9kYXNoL2ZsYXR0ZW4iOwppbXBvcnQgX2NvbXBhY3QgZnJvbSAibG9kYXNoL2NvbXBhY3QiOwppbXBvcnQgX2hlYWQgZnJvbSAibG9kYXNoL2hlYWQiOwppbXBvcnQgX21hcCBmcm9tICJsb2Rhc2gvbWFwIjsKaW1wb3J0IF9zdW1CeSBmcm9tICJsb2Rhc2gvc3VtQnkiOwp2YXIgU3RhbmNlTW9kZWwsIHN0YW5jZXNCZWNhbWVVcGRhdGFibGU7CmltcG9ydCBCYXNlTW9kZWwgZnJvbSAnQC9zaGFyZWQvcmVjb3JkX3N0b3JlL2Jhc2VfbW9kZWwnOwppbXBvcnQgQXBwQ29uZmlnIGZyb20gJ0Avc2hhcmVkL3NlcnZpY2VzL2FwcF9jb25maWcnOwppbXBvcnQgSGFzVHJhbnNsYXRpb25zIGZyb20gJ0Avc2hhcmVkL21peGlucy9oYXNfdHJhbnNsYXRpb25zJzsKaW1wb3J0IEFub255bW91c1VzZXJNb2RlbCBmcm9tICdAL3NoYXJlZC9tb2RlbHMvYW5vbnltb3VzX3VzZXJfbW9kZWwnOwppbXBvcnQgaTE4biBmcm9tICdAL2kxOG4uY29mZmVlJzsKc3RhbmNlc0JlY2FtZVVwZGF0YWJsZSA9IG5ldyBEYXRlKCIyMDIwLTA4LTExIik7CmV4cG9ydCBkZWZhdWx0IFN0YW5jZU1vZGVsID0gZnVuY3Rpb24gKCkgewogIGNsYXNzIFN0YW5jZU1vZGVsIGV4dGVuZHMgQmFzZU1vZGVsIHsKICAgIGFmdGVyQ29uc3RydWN0aW9uKCkgewogICAgICByZXR1cm4gSGFzVHJhbnNsYXRpb25zLmFwcGx5KHRoaXMpOwogICAgfQoKICAgIGRlZmF1bHRWYWx1ZXMoKSB7CiAgICAgIHJldHVybiB7CiAgICAgICAgcmVhc29uOiAnJywKICAgICAgICByZWFzb25Gb3JtYXQ6ICdodG1sJywKICAgICAgICBmaWxlczogW10sCiAgICAgICAgaW1hZ2VGaWxlczogW10sCiAgICAgICAgYXR0YWNobWVudHM6IFtdLAogICAgICAgIGxpbmtQcmV2aWV3czogW10sCiAgICAgICAgcmV2b2tlZEF0OiBudWxsLAogICAgICAgIHBhcnRpY2lwYW50SWQ6IG51bGwsCiAgICAgICAgcG9sbElkOiBudWxsLAogICAgICAgIG9wdGlvblNjb3Jlczoge30sCiAgICAgICAgY2FzdEF0OiBudWxsCiAgICAgIH07CiAgICB9CgogICAgcmVsYXRpb25zaGlwcygpIHsKICAgICAgdGhpcy5iZWxvbmdzVG8oJ3BvbGwnKTsKICAgICAgcmV0dXJuIHRoaXMuYmVsb25nc1RvKCdwYXJ0aWNpcGFudCcsIHsKICAgICAgICBmcm9tOiAndXNlcnMnCiAgICAgIH0pOwogICAgfQoKICAgIGVkaXRlZCgpIHsKICAgICAgaWYgKHRoaXMuY3JlYXRlZEF0ID4gc3RhbmNlc0JlY2FtZVVwZGF0YWJsZSkgewogICAgICAgIHJldHVybiB0aGlzLnZlcnNpb25zQ291bnQgPiAyOwogICAgICB9IGVsc2UgewogICAgICAgIHJldHVybiB0aGlzLnZlcnNpb25zQ291bnQgPiAxOwogICAgICB9CiAgICB9CgogICAgZGlzY3Vzc2lvbigpIHsKICAgICAgcmV0dXJuIHRoaXMucG9sbCgpLmRpc2N1c3Npb24oKTsKICAgIH0KCiAgICBwYXJ0aWNpcGFudE5hbWUoKSB7CiAgICAgIGlmICh0aGlzLnBhcnRpY2lwYW50KCkpIHsKICAgICAgICByZXR1cm4gdGhpcy5wYXJ0aWNpcGFudCgpLm5hbWVXaXRoVGl0bGUodGhpcy5wb2xsKCkuZ3JvdXAoKSk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgcmV0dXJuIGkxOG4udCgnY29tbW9uLmFub255bW91cycpOwogICAgICB9CiAgICB9CgogICAgcmVhY3Rpb25zKCkgewogICAgICByZXR1cm4gdGhpcy5yZWNvcmRTdG9yZS5yZWFjdGlvbnMuZmluZCh7CiAgICAgICAgcmVhY3RhYmxlSWQ6IHRoaXMuaWQsCiAgICAgICAgcmVhY3RhYmxlVHlwZTogIlN0YW5jZSIKICAgICAgfSk7CiAgICB9CgogICAgc2luZ2xlQ2hvaWNlKCkgewogICAgICByZXR1cm4gdGhpcy5wb2xsKCkuc2luZ2xlQ2hvaWNlKCk7CiAgICB9CgogICAgaGFzT3B0aW9uSWNvbigpIHsKICAgICAgcmV0dXJuIHRoaXMucG9sbCgpLmNvbmZpZygpLmhhc19vcHRpb25faWNvbjsKICAgIH0KCiAgICBwYXJ0aWNpcGFudElkcygpIHsKICAgICAgcmV0dXJuIHRoaXMucG9sbCgpLnBhcnRpY2lwYW50SWRzKCk7CiAgICB9CgogICAgbWVtYmVySWRzKCkgewogICAgICByZXR1cm4gdGhpcy5wb2xsKCkubWVtYmVySWRzKCk7CiAgICB9CgogICAgZ3JvdXAoKSB7CiAgICAgIHJldHVybiB0aGlzLnBvbGwoKS5ncm91cCgpOwogICAgfQoKICAgIGlzQmxhbmsoKSB7CiAgICAgIHJldHVybiB0aGlzLnJlYXNvbiA9PT0gJycgfHwgdGhpcy5yZWFzb24gPT09IG51bGwgfHwgdGhpcy5yZWFzb24gPT09ICc8cD48L3A+JzsKICAgIH0KCiAgICBhdXRob3IoKSB7CiAgICAgIHJldHVybiB0aGlzLnBhcnRpY2lwYW50KCk7CiAgICB9CgogICAgc3RhbmNlQ2hvaWNlKCkgewogICAgICByZXR1cm4gX2hlYWQodGhpcy5zb3J0ZWRDaG9pY2VzKCkpOwogICAgfQoKICAgIHBvbGxPcHRpb24oKSB7CiAgICAgIGlmICh0aGlzLnBvbGxPcHRpb25JZCgpKSB7CiAgICAgICAgcmV0dXJuIHRoaXMucmVjb3JkU3RvcmUucG9sbE9wdGlvbnMuZmluZCh0aGlzLnBvbGxPcHRpb25JZCgpKTsKICAgICAgfQogICAgfQoKICAgIHBvbGxPcHRpb25JZCgpIHsKICAgICAgcmV0dXJuIHRoaXMucG9sbE9wdGlvbklkcygpWzBdOwogICAgfQoKICAgIHBvbGxPcHRpb25JZHMoKSB7CiAgICAgIHJldHVybiBfbWFwKE9iamVjdC5rZXlzKHRoaXMub3B0aW9uU2NvcmVzKSwgX3BhcnNlSW50KTsKICAgIH0KCiAgICBwb2xsT3B0aW9ucygpIHsKICAgICAgcmV0dXJuIHRoaXMucmVjb3JkU3RvcmUucG9sbE9wdGlvbnMuZmluZCh0aGlzLnBvbGxPcHRpb25JZHMoKSk7CiAgICB9CgogICAgY2hvb3NlKG9wdGlvbklkcykgewogICAgICB0aGlzLm9wdGlvblNjb3JlcyA9IHt9OwoKICAgICAgX2NvbXBhY3QoX2ZsYXR0ZW4oW29wdGlvbklkc10pKS5mb3JFYWNoKGZ1bmN0aW9uIChpZCkgewogICAgICAgIHJldHVybiB0aGlzLm9wdGlvblNjb3Jlc1tpZF0gPSAxOwogICAgICB9KTsKCiAgICAgIHJldHVybiB0aGlzOwogICAgfQoKICAgIHNvcnRlZENob2ljZXMoKSB7CiAgICAgIHZhciBjaG9pY2VzLCBvcHRpb25zQnlJZCwgcG9sbDsKICAgICAgb3B0aW9uc0J5SWQgPSB7fTsKICAgICAgdGhpcy5wb2xsT3B0aW9ucygpLmZvckVhY2goZnVuY3Rpb24gKG8pIHsKICAgICAgICByZXR1cm4gb3B0aW9uc0J5SWRbby5pZF0gPSBvOwogICAgICB9KTsKICAgICAgcG9sbCA9IHRoaXMucG9sbCgpOwogICAgICBjaG9pY2VzID0gX21hcCh0aGlzLm9wdGlvblNjb3JlcywgKHNjb3JlLCBwb2xsT3B0aW9uSWQpID0+IHsKICAgICAgICByZXR1cm4gewogICAgICAgICAgc2NvcmU6IHNjb3JlLAogICAgICAgICAgcmFuazogcG9sbC5wb2xsVHlwZSA9PT0gJ3JhbmtlZF9jaG9pY2UnICYmIHBvbGwubWluaW11bVN0YW5jZUNob2ljZXMgLSBzY29yZSArIDEsCiAgICAgICAgICBzaG93OiBzY29yZSA+IDAgfHwgcG9sbC5wb2xsVHlwZSA9PT0gInNjb3JlIiwKICAgICAgICAgIHBvbGxPcHRpb246IG9wdGlvbnNCeUlkW3BvbGxPcHRpb25JZF0KICAgICAgICB9OwogICAgICB9KTsKICAgICAgY2hvaWNlcyA9IGNob2ljZXMuZmlsdGVyKGZ1bmN0aW9uIChjKSB7CiAgICAgICAgcmV0dXJuIGMucG9sbE9wdGlvbjsKICAgICAgfSk7CgogICAgICBpZiAocG9sbC5wb2xsVHlwZSA9PT0gJ21lZXRpbmcnKSB7CiAgICAgICAgcmV0dXJuIF9zb3J0QnkoY2hvaWNlcywgZnVuY3Rpb24gKGMpIHsKICAgICAgICAgIHJldHVybiBjLnBvbGxPcHRpb24ucHJpb3JpdHk7CiAgICAgICAgfSk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgcmV0dXJuIF9zb3J0QnkoY2hvaWNlcywgJy1zY29yZScpOwogICAgICB9CiAgICB9CgogICAgdm90ZWRGb3Iob3B0aW9uKSB7CiAgICAgIHJldHVybiBfaW5jbHVkZXMoX21hcCh0aGlzLnBvbGxPcHRpb25zKCksICdpZCcpLCBvcHRpb24uaWQpOwogICAgfQoKICAgIHNjb3JlRm9yKG9wdGlvbikgewogICAgICByZXR1cm4gdGhpcy5vcHRpb25TY29yZXNbb3B0aW9uLmlkXSB8fCAwOwogICAgfQoKICAgIHRvdGFsU2NvcmUoKSB7CiAgICAgIHJldHVybiBfc3VtQnkodGhpcy5zb3J0ZWRDaG9pY2VzKCksICdzY29yZScpOwogICAgfQoKICB9CgogIDsKICBTdGFuY2VNb2RlbC5zaW5ndWxhciA9ICdzdGFuY2UnOwogIFN0YW5jZU1vZGVsLnBsdXJhbCA9ICdzdGFuY2VzJzsKICBTdGFuY2VNb2RlbC5pbmRpY2VzID0gWydwb2xsSWQnLCAnbGF0ZXN0JywgJ3BhcnRpY2lwYW50SWQnXTsKICBTdGFuY2VNb2RlbC51bmlxdWVJbmRpY2VzID0gWydpZCddOwogIHJldHVybiBTdGFuY2VNb2RlbDsKfS5jYWxsKHRoaXMpOw=="},{"version":3,"sources":["/home/gustavo/Documents/tese/loomio/vue/src/shared/models/stance_model.coffee"],"names":[],"mappings":"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","sourcesContent":["import BaseModel       from '@/shared/record_store/base_model'\nimport AppConfig       from '@/shared/services/app_config'\nimport HasTranslations from '@/shared/mixins/has_translations'\nimport AnonymousUserModel   from '@/shared/models/anonymous_user_model'\nimport i18n from '@/i18n.coffee'\nimport { sumBy, map, head, each, compact, flatten, includes, find, sortBy, parseInt } from 'lodash'\n\nstancesBecameUpdatable = new Date(\"2020-08-11\")\n\nexport default class StanceModel extends BaseModel\n  @singular: 'stance'\n  @plural: 'stances'\n  @indices: ['pollId', 'latest', 'participantId']\n  @uniqueIndices: ['id']\n\n  afterConstruction: ->\n    HasTranslations.apply @\n\n  defaultValues: ->\n    reason: ''\n    reasonFormat: 'html'\n    files: []\n    imageFiles: []\n    attachments: []\n    linkPreviews: []\n    revokedAt: null\n    participantId: null\n    pollId: null\n    optionScores: {}\n    castAt: null\n\n  relationships: ->\n    @belongsTo 'poll'\n    @belongsTo 'participant', from: 'users'\n\n  edited: ->\n    if @createdAt > stancesBecameUpdatable\n      @versionsCount > 2\n    else\n      @versionsCount > 1\n\n  discussion: -> @poll().discussion()\n  participantName: ->\n    if @participant()\n      @participant().nameWithTitle(@poll().group())\n    else\n      i18n.t('common.anonymous')\n\n  reactions: ->\n    @recordStore.reactions.find(reactableId: @id, reactableType: \"Stance\")\n\n  singleChoice: -> @poll().singleChoice()\n  hasOptionIcon: -> @poll().config().has_option_icon\n\n  participantIds: ->\n    @poll().participantIds()\n\n  memberIds: ->\n    @poll().memberIds()\n\n  group: ->\n    @poll().group()\n\n  isBlank: ->\n    @reason == '' or @reason == null or @reason == '<p></p>'\n\n  author: ->\n    @participant()\n\n  stanceChoice: ->\n    head @sortedChoices()\n\n  pollOption: ->\n    @recordStore.pollOptions.find(@pollOptionId()) if @pollOptionId()\n\n  pollOptionId: ->\n    @pollOptionIds()[0]\n\n  pollOptionIds: ->\n    map Object.keys(@optionScores), parseInt\n\n  pollOptions: ->\n    @recordStore.pollOptions.find(@pollOptionIds())\n\n  choose: (optionIds) ->\n    @optionScores = {}\n    compact(flatten([optionIds])).forEach (id) ->\n      @optionScores[id] = 1\n    @\n\n  sortedChoices: ->\n    optionsById = {}\n    @pollOptions().forEach (o) -> optionsById[o.id] = o\n    poll = @poll()\n\n    choices = map @optionScores, (score, pollOptionId) =>\n      {\n        score: score,\n        rank: (poll.pollType == 'ranked_choice') && (poll.minimumStanceChoices - score + 1),\n        show: (score > 0) || poll.pollType == \"score\",\n        pollOption: optionsById[pollOptionId]\n      }\n\n    choices = choices.filter (c) -> c.pollOption\n\n    if poll.pollType == 'meeting'\n      sortBy choices, (c) -> c.pollOption.priority\n    else\n      sortBy choices, '-score'\n\n  votedFor: (option) ->\n    includes map(@pollOptions(), 'id'), option.id\n\n  scoreFor: (option) ->\n    @optionScores[option.id] || 0\n\n  totalScore: ->\n    sumBy(@sortedChoices(), 'score')\n"],"sourceRoot":""}]}