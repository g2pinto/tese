{"remainingRequest":"/home/gustavo/Documents/tese/loomio/vue/node_modules/babel-loader/lib/index.js!/home/gustavo/Documents/tese/loomio/vue/node_modules/vue-cli-plugin-coffee/node_modules/coffee-loader/dist/cjs.js!/home/gustavo/Documents/tese/loomio/vue/src/shared/mixins/has_translations.coffee","dependencies":[{"path":"/home/gustavo/Documents/tese/loomio/vue/src/shared/mixins/has_translations.coffee","mtime":1706724415808},{"path":"/home/gustavo/Documents/tese/loomio/vue/.babelrc","mtime":1706724415792},{"path":"/home/gustavo/Documents/tese/loomio/vue/node_modules/vue-cli-plugin-coffee/node_modules/cache-loader/dist/cjs.js","mtime":1706724497848},{"path":"/home/gustavo/Documents/tese/loomio/vue/node_modules/babel-loader/lib/index.js","mtime":1706724500796},{"path":"/home/gustavo/Documents/tese/loomio/vue/node_modules/vue-cli-plugin-coffee/node_modules/coffee-loader/dist/cjs.js","mtime":1706724497848}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIEhhc1RyYW5zbGF0aW9uczsKZXhwb3J0IGRlZmF1bHQgbmV3IChIYXNUcmFuc2xhdGlvbnMgPSBjbGFzcyBIYXNUcmFuc2xhdGlvbnMgewogIGFwcGx5KG1vZGVsKSB7CiAgICBtb2RlbC50cmFuc2xhdGUgPSBmdW5jdGlvbiAobG9jYWxlKSB7CiAgICAgIHJldHVybiBtb2RlbC5yZWNvcmRTdG9yZS50cmFuc2xhdGlvbnMuZmV0Y2hUcmFuc2xhdGlvbihtb2RlbCwgbG9jYWxlKS50aGVuKGZ1bmN0aW9uIChkYXRhKSB7CiAgICAgICAgcmV0dXJuIG1vZGVsLnRyYW5zbGF0aW9uID0gZGF0YS50cmFuc2xhdGlvbnNbMF0uZmllbGRzOwogICAgICB9KTsKICAgIH07CgogICAgcmV0dXJuIG1vZGVsLnRyYW5zbGF0aW9uID0ge307CiAgfQoKfSkoKTs="},{"version":3,"sources":["/home/gustavo/Documents/tese/loomio/vue/src/shared/mixins/has_translations.coffee"],"names":[],"mappings":"AAAA,IAAA,eAAA;AAAA,eAAe,KAAU,eAAA,GAAN,MAAA,eAAA,CAAA;AACjB,EAAA,KAAO,CAAA,KAAA,EAAA;AACL,IAAA,KAAK,CAAL,SAAA,GAAkB,UAAA,MAAA,EAAA;aAChB,KAAK,CAAC,WAAN,CAAkB,YAAlB,CAAA,gBAAA,CAAA,KAAA,EAAA,MAAA,EAAA,IAAA,CAAoE,UAAA,IAAA,EAAA;eAClE,KAAK,CAAL,WAAA,GAAoB,IAAI,CAAC,YAAL,CAAiB,CAAjB,EAAqB,M;AAD3C,OAAA,C;AADgB,KAAlB;;WAIA,KAAK,CAAL,WAAA,GAAoB,E;AALf;;AADU,CAAJ,GAAf","sourcesContent":["export default new class HasTranslations\n  apply: (model) ->\n    model.translate = (locale) ->\n      model.recordStore.translations.fetchTranslation(model, locale).then (data) ->\n        model.translation = data.translations[0].fields\n\n    model.translation = {}\n"],"sourceRoot":""}]}