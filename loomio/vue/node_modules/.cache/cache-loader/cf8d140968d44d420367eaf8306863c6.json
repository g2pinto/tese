{"remainingRequest":"/home/gustavo/Documents/tese/loomio/vue/node_modules/babel-loader/lib/index.js!/home/gustavo/Documents/tese/loomio/vue/node_modules/vue-cli-plugin-coffee/node_modules/coffee-loader/dist/cjs.js!/home/gustavo/Documents/tese/loomio/vue/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!/home/gustavo/Documents/tese/loomio/vue/src/components/group/files_panel.vue?vue&type=script&lang=coffee&","dependencies":[{"path":"/home/gustavo/Documents/tese/loomio/vue/src/components/group/files_panel.vue","mtime":1706724415800},{"path":"/home/gustavo/Documents/tese/loomio/vue/.babelrc","mtime":1706724415792},{"path":"/home/gustavo/Documents/tese/loomio/vue/node_modules/vue-cli-plugin-coffee/node_modules/cache-loader/dist/cjs.js","mtime":1706724497848},{"path":"/home/gustavo/Documents/tese/loomio/vue/node_modules/babel-loader/lib/index.js","mtime":1706724500796},{"path":"/home/gustavo/Documents/tese/loomio/vue/node_modules/vue-cli-plugin-coffee/node_modules/coffee-loader/dist/cjs.js","mtime":1706724497848},{"path":"/home/gustavo/Documents/tese/loomio/vue/node_modules/@vue/vue-loader-v15/lib/index.js","mtime":1706724499784}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF91bmlxIGZyb20gImxvZGFzaC91bmlxIjsKaW1wb3J0IF9vcmRlckJ5IGZyb20gImxvZGFzaC9vcmRlckJ5IjsKaW1wb3J0IF9kZWJvdW5jZSBmcm9tICJsb2Rhc2gvZGVib3VuY2UiOwppbXBvcnQgX2ludGVyc2VjdGlvbiBmcm9tICJsb2Rhc2gvaW50ZXJzZWN0aW9uIjsKaW1wb3J0IFJlY29yZHMgZnJvbSAnQC9zaGFyZWQvc2VydmljZXMvcmVjb3Jkcyc7CmltcG9ydCBSZWNvcmRMb2FkZXIgZnJvbSAnQC9zaGFyZWQvc2VydmljZXMvcmVjb3JkX2xvYWRlcic7CmltcG9ydCBFdmVudEJ1cyBmcm9tICdAL3NoYXJlZC9zZXJ2aWNlcy9ldmVudF9idXMnOwppbXBvcnQgQWJpbGl0eVNlcnZpY2UgZnJvbSAnQC9zaGFyZWQvc2VydmljZXMvYWJpbGl0eV9zZXJ2aWNlJzsKaW1wb3J0IFNlc3Npb24gZnJvbSAnQC9zaGFyZWQvc2VydmljZXMvc2Vzc2lvbic7CmltcG9ydCBBdHRhY2htZW50U2VydmljZSBmcm9tICdAL3NoYXJlZC9zZXJ2aWNlcy9hdHRhY2htZW50X3NlcnZpY2UnOwpleHBvcnQgZGVmYXVsdCB7CiAgZGF0YTogZnVuY3Rpb24gKCkgewogICAgcmV0dXJuIHsKICAgICAgZ3JvdXA6IG51bGwsCiAgICAgIGxvYWRlcjogbnVsbCwKICAgICAgYXR0YWNobWVudExvYWRlcjogbnVsbCwKICAgICAgc2VhcmNoUXVlcnk6ICcnLAogICAgICBpdGVtczogW10sCiAgICAgIHN1Ymdyb3VwczogJ21pbmUnLAogICAgICBhdHRhY2htZW50SWRzOiBbXSwKICAgICAgcGVyOiAyNSwKICAgICAgZnJvbTogMAogICAgfTsKICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uICgpIHsKICAgIHRoaXMub25RdWVyeUlucHV0ID0gX2RlYm91bmNlKHZhbCA9PiB7CiAgICAgIHJldHVybiB0aGlzLiRyb3V0ZXIucmVwbGFjZSh7CiAgICAgICAgcXVlcnk6IHsKICAgICAgICAgIHE6IHZhbAogICAgICAgIH0KICAgICAgfSk7CiAgICB9LCA0MDApOwogICAgdGhpcy5ncm91cCA9IFJlY29yZHMuZ3JvdXBzLmZ1enp5RmluZCh0aGlzLiRyb3V0ZS5wYXJhbXMua2V5KTsKICAgIEV2ZW50QnVzLiRlbWl0KCdjdXJyZW50Q29tcG9uZW50JywgewogICAgICBwYWdlOiAnZ3JvdXBQYWdlJywKICAgICAgdGl0bGU6IHRoaXMuZ3JvdXAubmFtZSwKICAgICAgZ3JvdXA6IHRoaXMuZ3JvdXAsCiAgICAgIHNlYXJjaDogewogICAgICAgIHBsYWNlaG9sZGVyOiB0aGlzLiR0KCduYXZiYXIuc2VhcmNoX2ZpbGVzJywgewogICAgICAgICAgbmFtZTogdGhpcy5ncm91cC5wYXJlbnRPclNlbGYoKS5uYW1lCiAgICAgICAgfSkKICAgICAgfQogICAgfSk7CiAgICB0aGlzLmxvYWRlciA9IG5ldyBSZWNvcmRMb2FkZXIoewogICAgICBjb2xsZWN0aW9uOiAnZG9jdW1lbnRzJywKICAgICAgcGF0aDogJ2Zvcl9ncm91cCcsCiAgICAgIHBhcmFtczogewogICAgICAgIGdyb3VwX2lkOiB0aGlzLmdyb3VwLmlkLAogICAgICAgIHBlcjogdGhpcy5wZXIsCiAgICAgICAgc3ViZ3JvdXBzOiB0aGlzLnN1Ymdyb3VwcywKICAgICAgICBmcm9tOiB0aGlzLmZyb20KICAgICAgfQogICAgfSk7CiAgICB0aGlzLmF0dGFjaG1lbnRMb2FkZXIgPSBuZXcgUmVjb3JkTG9hZGVyKHsKICAgICAgY29sbGVjdGlvbjogJ2F0dGFjaG1lbnRzJywKICAgICAgcGFyYW1zOiB7CiAgICAgICAgZ3JvdXBfaWQ6IHRoaXMuZ3JvdXAuaWQsCiAgICAgICAgcGVyOiB0aGlzLnBlciwKICAgICAgICBzdWJncm91cHM6IHRoaXMuc3ViZ3JvdXBzLAogICAgICAgIGZyb206IHRoaXMuZnJvbQogICAgICB9CiAgICB9KTsKICAgIHRoaXMud2F0Y2hSZWNvcmRzKHsKICAgICAgY29sbGVjdGlvbnM6IFsnZG9jdW1lbnRzJywgJ2F0dGFjaG1lbnRzJ10sCiAgICAgIHF1ZXJ5OiAoKSA9PiB7CiAgICAgICAgcmV0dXJuIHRoaXMucXVlcnkoKTsKICAgICAgfQogICAgfSk7CiAgICB0aGlzLnNlYXJjaFF1ZXJ5ID0gdGhpcy4kcm91dGUucXVlcnkucSB8fCAnJzsKICAgIHJldHVybiB0aGlzLmZldGNoKCk7CiAgfSwKICB3YXRjaDogewogICAgJyRyb3V0ZS5xdWVyeS5xJzogZnVuY3Rpb24gKHZhbCkgewogICAgICB0aGlzLnNlYXJjaFF1ZXJ5ID0gdmFsIHx8ICcnOwogICAgICB0aGlzLmZldGNoKCk7CiAgICAgIHJldHVybiB0aGlzLnF1ZXJ5KCk7CiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICBxdWVyeTogZnVuY3Rpb24gKCkgewogICAgICB2YXIgYXR0YWNobWVudHMsIGRvY3VtZW50cywgZ3JvdXBJZHM7CgogICAgICBncm91cElkcyA9IGZ1bmN0aW9uICgpIHsKICAgICAgICBzd2l0Y2ggKHRoaXMuc3ViZ3JvdXBzKSB7CiAgICAgICAgICBjYXNlICdub25lJzoKICAgICAgICAgICAgcmV0dXJuIFt0aGlzLmdyb3VwLmlkXTsKCiAgICAgICAgICBjYXNlICdtaW5lJzoKICAgICAgICAgICAgcmV0dXJuIF9pbnRlcnNlY3Rpb24odGhpcy5ncm91cC5vcmdhbmlzYXRpb25JZHMoKSwgU2Vzc2lvbi51c2VyKCkuZ3JvdXBJZHMoKSk7CgogICAgICAgICAgY2FzZSAnYWxsJzoKICAgICAgICAgICAgcmV0dXJuIHRoaXMuZ3JvdXAub3JnYW5pc2F0aW9uSWRzKCk7CiAgICAgICAgfQogICAgICB9LmNhbGwodGhpcyk7CgogICAgICBkb2N1bWVudHMgPSBSZWNvcmRzLmRvY3VtZW50cy5jb2xsZWN0aW9uLmNoYWluKCkuZmluZCh7CiAgICAgICAgZ3JvdXBJZDogewogICAgICAgICAgJGluOiBncm91cElkcwogICAgICAgIH0KICAgICAgfSkuZmluZCh7CiAgICAgICAgdGl0bGU6IHsKICAgICAgICAgICRyZWdleDogUmVnRXhwKGAke3RoaXMuc2VhcmNoUXVlcnl9YCwgImkiKQogICAgICAgIH0KICAgICAgfSkuZGF0YSgpOwogICAgICBhdHRhY2htZW50cyA9IFJlY29yZHMuYXR0YWNobWVudHMuY29sbGVjdGlvbi5jaGFpbigpLmZpbmQoewogICAgICAgIGlkOiB7CiAgICAgICAgICAkaW46IHRoaXMuYXR0YWNobWVudElkcwogICAgICAgIH0KICAgICAgfSkuZmluZCh7CiAgICAgICAgZmlsZW5hbWU6IHsKICAgICAgICAgICRyZWdleDogUmVnRXhwKGAke3RoaXMuc2VhcmNoUXVlcnl9YCwgImkiKQogICAgICAgIH0KICAgICAgfSkuZGF0YSgpOwogICAgICByZXR1cm4gdGhpcy5pdGVtcyA9IF9vcmRlckJ5KGRvY3VtZW50cy5jb25jYXQoYXR0YWNobWVudHMpLCAnY3JlYXRlZEF0JywgJ2Rlc2MnKTsKICAgIH0sCiAgICBmZXRjaDogZnVuY3Rpb24gKCkgewogICAgICB0aGlzLmxvYWRlci5mZXRjaFJlY29yZHMoewogICAgICAgIHE6IHRoaXMuc2VhcmNoUXVlcnkKICAgICAgfSk7CiAgICAgIHJldHVybiB0aGlzLmF0dGFjaG1lbnRMb2FkZXIuZmV0Y2hSZWNvcmRzKHsKICAgICAgICBxOiB0aGlzLnNlYXJjaFF1ZXJ5CiAgICAgIH0pLnRoZW4oZGF0YSA9PiB7CiAgICAgICAgcmV0dXJuIHRoaXMuYXR0YWNobWVudElkcyA9IF91bmlxKHRoaXMuYXR0YWNobWVudElkcy5jb25jYXQoKGRhdGEuYXR0YWNobWVudHMgfHwgW10pLm1hcChmdW5jdGlvbiAoYSkgewogICAgICAgICAgcmV0dXJuIGEuaWQ7CiAgICAgICAgfSkpKTsKICAgICAgfSkudGhlbigoKSA9PiB7CiAgICAgICAgcmV0dXJuIHRoaXMucXVlcnkoKTsKICAgICAgfSk7CiAgICB9LAogICAgYWN0aW9uc0ZvcjogZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgcmV0dXJuIEF0dGFjaG1lbnRTZXJ2aWNlLmFjdGlvbnMoaXRlbSk7CiAgICB9CiAgfSwKICBjb21wdXRlZDogewogICAgc2hvd0xvYWRNb3JlOiBmdW5jdGlvbiAoKSB7CiAgICAgIHJldHVybiAhdGhpcy5sb2FkZXIuZXhoYXVzdGVkICYmICF0aGlzLmF0dGFjaG1lbnRMb2FkZXIuZXhoYXVzdGVkOwogICAgfSwKICAgIGxvYWRpbmc6IGZ1bmN0aW9uICgpIHsKICAgICAgcmV0dXJuIHRoaXMubG9hZGVyLmxvYWRpbmcgfHwgdGhpcy5hdHRhY2htZW50TG9hZGVyLmxvYWRpbmc7CiAgICB9LAogICAgY2FuQWRtaW5pc3RlcjogZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gQWJpbGl0eVNlcnZpY2UuY2FuQWRtaW5pc3Rlcih0aGlzLmdyb3VwKTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["/home/gustavo/Documents/tese/loomio/vue/src/components/group/files_panel.vue"],"names":[],"mappings":"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","sourcesContent":["\nimport Records           from '@/shared/services/records'\nimport RecordLoader      from '@/shared/services/record_loader'\nimport EventBus          from '@/shared/services/event_bus'\nimport AbilityService    from '@/shared/services/ability_service'\nimport Session           from '@/shared/services/session'\nimport AttachmentService from '@/shared/services/attachment_service'\n\nimport { isEmpty, intersection, debounce, filter, some, orderBy, uniq } from 'lodash'\n\nexport default\n  data: ->\n    group: null\n    loader: null\n    attachmentLoader: null\n    searchQuery: ''\n    items: []\n    subgroups: 'mine'\n    attachmentIds: []\n    per: 25\n    from: 0\n\n  created: ->\n    @onQueryInput = debounce (val) =>\n      @$router.replace({ query: { q: val } })\n    , 400\n\n    @group = Records.groups.fuzzyFind(@$route.params.key)\n\n    EventBus.$emit 'currentComponent',\n      page: 'groupPage'\n      title: @group.name\n      group: @group\n      search:\n        placeholder: @$t('navbar.search_files', name: @group.parentOrSelf().name)\n\n    @loader = new RecordLoader\n      collection: 'documents'\n      path: 'for_group'\n      params:\n        group_id: @group.id\n        per: @per\n        subgroups: @subgroups\n        from: @from\n\n    @attachmentLoader = new RecordLoader\n      collection: 'attachments'\n      params:\n        group_id: @group.id\n        per: @per\n        subgroups: @subgroups\n        from: @from\n\n    @watchRecords\n      collections: ['documents', 'attachments']\n      query: => @query()\n\n    @searchQuery = @$route.query.q || ''\n    @fetch()\n\n  watch:\n    '$route.query.q': (val) ->\n      @searchQuery = val || ''\n      @fetch()\n      @query()\n\n  methods:\n    query: ->\n      groupIds = switch @subgroups\n        when 'none' then [@group.id]\n        when 'mine' then intersection(@group.organisationIds(), Session.user().groupIds())\n        when 'all' then @group.organisationIds()\n\n      documents = Records.documents.collection.chain().\n                     find(groupId: {$in: groupIds}).\n                     find(title: {$regex: ///#{@searchQuery}///i}).\n                     data()\n\n      attachments = Records.attachments.collection.chain().\n                     find(id: {$in: @attachmentIds}).\n                     find(filename: {$regex: ///#{@searchQuery}///i}).\n                     data()\n\n      @items = orderBy(documents.concat(attachments), 'createdAt', 'desc')\n\n    fetch: ->\n      @loader.fetchRecords\n        q: @searchQuery\n\n      @attachmentLoader.fetchRecords(q: @searchQuery).then (data) =>\n        @attachmentIds = uniq @attachmentIds.concat((data.attachments || []).map (a) -> a.id)\n      .then => @query()\n\n    actionsFor: (item) ->\n      AttachmentService.actions(item)\n\n  computed:\n    showLoadMore: -> !@loader.exhausted && !@attachmentLoader.exhausted\n    loading: -> @loader.loading || @attachmentLoader.loading\n    canAdminister: -> AbilityService.canAdminister(@group)\n\n"],"sourceRoot":""}]}