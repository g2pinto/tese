{"remainingRequest":"/home/gustavo/Documents/tese/loomio/vue/node_modules/babel-loader/lib/index.js!/home/gustavo/Documents/tese/loomio/vue/node_modules/vue-cli-plugin-coffee/node_modules/coffee-loader/dist/cjs.js!/home/gustavo/Documents/tese/loomio/vue/src/shared/models/event_model.coffee","dependencies":[{"path":"/home/gustavo/Documents/tese/loomio/vue/src/shared/models/event_model.coffee","mtime":1706724415808},{"path":"/home/gustavo/Documents/tese/loomio/vue/.babelrc","mtime":1706724415792},{"path":"/home/gustavo/Documents/tese/loomio/vue/node_modules/vue-cli-plugin-coffee/node_modules/cache-loader/dist/cjs.js","mtime":1706724497848},{"path":"/home/gustavo/Documents/tese/loomio/vue/node_modules/babel-loader/lib/index.js","mtime":1706724500796},{"path":"/home/gustavo/Documents/tese/loomio/vue/node_modules/vue-cli-plugin-coffee/node_modules/coffee-loader/dist/cjs.js","mtime":1706724497848}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF93aXRob3V0IGZyb20gImxvZGFzaC93aXRob3V0IjsKaW1wb3J0IF9pbnZva2VNYXAgZnJvbSAibG9kYXNoL2ludm9rZU1hcCI7Cgp2YXIgRXZlbnRNb2RlbCwKICAgIGJvdW5kTWV0aG9kQ2hlY2sgPSBmdW5jdGlvbiAoaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7CiAgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsKICAgIHRocm93IG5ldyBFcnJvcignQm91bmQgaW5zdGFuY2UgbWV0aG9kIGFjY2Vzc2VkIGJlZm9yZSBiaW5kaW5nJyk7CiAgfQp9OwoKaW1wb3J0IEJhc2VNb2RlbCBmcm9tICdAL3NoYXJlZC9yZWNvcmRfc3RvcmUvYmFzZV9tb2RlbCc7CmltcG9ydCBpMThuIGZyb20gJ0AvaTE4bi5jb2ZmZWUnOwpleHBvcnQgZGVmYXVsdCBFdmVudE1vZGVsID0gZnVuY3Rpb24gKCkgewogIGNsYXNzIEV2ZW50TW9kZWwgZXh0ZW5kcyBCYXNlTW9kZWwgewogICAgY29uc3RydWN0b3IoKSB7CiAgICAgIHN1cGVyKC4uLmFyZ3VtZW50cyk7CiAgICAgIHRoaXMucmVtb3ZlRnJvbVRocmVhZCA9IHRoaXMucmVtb3ZlRnJvbVRocmVhZC5iaW5kKHRoaXMpOwogICAgfQoKICAgIHJlbGF0aW9uc2hpcHMoKSB7CiAgICAgIHRoaXMuYmVsb25nc1RvKCdwYXJlbnQnLCB7CiAgICAgICAgZnJvbTogJ2V2ZW50cycKICAgICAgfSk7CiAgICAgIHRoaXMuYmVsb25nc1RvKCdhY3RvcicsIHsKICAgICAgICBmcm9tOiAndXNlcnMnCiAgICAgIH0pOwogICAgICB0aGlzLmJlbG9uZ3NUbygnZGlzY3Vzc2lvbicpOwogICAgICByZXR1cm4gdGhpcy5oYXNNYW55KCdub3RpZmljYXRpb25zJyk7CiAgICB9CgogICAgZGVmYXVsdFZhbHVlcygpIHsKICAgICAgcmV0dXJuIHsKICAgICAgICBwaW5uZWQ6IGZhbHNlLAogICAgICAgIGV2ZW50YWJsZUlkOiBudWxsLAogICAgICAgIGV2ZW50YWJsZVR5cGU6IG51bGwsCiAgICAgICAgZGlzY3Vzc2lvbklkOiBudWxsLAogICAgICAgIHNlcXVlbmNlSWQ6IG51bGwsCiAgICAgICAgcG9zaXRpdGlvbjogMCwKICAgICAgICBzaG93UmVwbHlGb3JtOiB0cnVlCiAgICAgIH07CiAgICB9CgogICAgcGFyZW50T3JTZWxmKCkgewogICAgICBpZiAodGhpcy5wYXJlbnRJZCkgewogICAgICAgIHJldHVybiB0aGlzLnBhcmVudCgpOwogICAgICB9IGVsc2UgewogICAgICAgIHJldHVybiB0aGlzOwogICAgICB9CiAgICB9CgogICAgaXNOZXN0ZWQoKSB7CiAgICAgIHJldHVybiB0aGlzLmRlcHRoID4gMTsKICAgIH0KCiAgICBpc1N1cmZhY2UoKSB7CiAgICAgIHJldHVybiB0aGlzLmRlcHRoID09PSAxOwogICAgfQoKICAgIHN1cmZhY2VPclNlbGYoKSB7CiAgICAgIGlmICh0aGlzLmlzTmVzdGVkKCkpIHsKICAgICAgICByZXR1cm4gdGhpcy5wYXJlbnQoKTsKICAgICAgfSBlbHNlIHsKICAgICAgICByZXR1cm4gdGhpczsKICAgICAgfQogICAgfQoKICAgIGNoaWxkcmVuKCkgewogICAgICByZXR1cm4gdGhpcy5yZWNvcmRTdG9yZS5ldmVudHMuZmluZCh7CiAgICAgICAgcGFyZW50SWQ6IHRoaXMuaWQKICAgICAgfSk7CiAgICB9CgogICAgZGVsZXRlKCkgewogICAgICByZXR1cm4gdGhpcy5kZWxldGVkID0gdHJ1ZTsKICAgIH0KCiAgICBhY3Rvck5hbWUoKSB7CiAgICAgIGlmICh0aGlzLmFjdG9yKCkpIHsKICAgICAgICByZXR1cm4gdGhpcy5hY3RvcigpLm5hbWVXaXRoVGl0bGUodGhpcy5kaXNjdXNzaW9uKCkuZ3JvdXAoKSk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgcmV0dXJuIGkxOG4udCgnY29tbW9uLmFub255bW91cycpOwogICAgICB9CiAgICB9CgogICAgYWN0b3JVc2VybmFtZSgpIHsKICAgICAgaWYgKHRoaXMuYWN0b3IoKSkgewogICAgICAgIHJldHVybiB0aGlzLmFjdG9yKCkudXNlcm5hbWU7CiAgICAgIH0KICAgIH0KCiAgICBtb2RlbCgpIHsKICAgICAgcmV0dXJuIHRoaXMucmVjb3JkU3RvcmVbdGhpcy5yZWNvcmRTdG9yZS5ldmVudFR5cGVNYXBbdGhpcy5ldmVudGFibGVUeXBlXV0uZmluZCh0aGlzLmV2ZW50YWJsZUlkKTsKICAgIH0KCiAgICBpc1VucmVhZCgpIHsKICAgICAgcmV0dXJuICF0aGlzLmRpc2N1c3Npb24oKS5oYXNSZWFkKHRoaXMuc2VxdWVuY2VJZCk7CiAgICB9CgogICAgbWFya0FzUmVhZCgpIHsKICAgICAgcmV0dXJuIHRoaXMuZGlzY3Vzc2lvbigpLm1hcmtBc1JlYWQodGhpcy5zZXF1ZW5jZUlkKTsKICAgIH0KCiAgICBiZWZvcmVSZW1vdmUoKSB7CiAgICAgIHJldHVybiBfaW52b2tlTWFwKHRoaXMubm90aWZpY2F0aW9ucygpLCAncmVtb3ZlJyk7CiAgICB9CgogICAgcmVtb3ZlRnJvbVRocmVhZCgpIHsKICAgICAgYm91bmRNZXRob2RDaGVjayh0aGlzLCBFdmVudE1vZGVsKTsKICAgICAgcmV0dXJuIHRoaXMucmVtb3RlLnBhdGNoTWVtYmVyKHRoaXMuaWQsICdyZW1vdmVfZnJvbV90aHJlYWQnKS50aGVuKCgpID0+IHsKICAgICAgICByZXR1cm4gdGhpcy5yZW1vdmUoKTsKICAgICAgfSk7CiAgICB9CgogICAgcGluKHRpdGxlKSB7CiAgICAgIHJldHVybiB0aGlzLnJlbW90ZS5wYXRjaE1lbWJlcih0aGlzLmlkLCAncGluJywgewogICAgICAgIHBpbm5lZF90aXRsZTogdGl0bGUKICAgICAgfSk7CiAgICB9CgogICAgZmlsbFBpbm5lZFRpdGxlKCkgewogICAgICByZXR1cm4gdGhpcy5waW5uZWRUaXRsZSA9IHRoaXMuc3VnZ2VzdGVkVGl0bGUoKTsKICAgIH0KCiAgICBzdWdnZXN0ZWRUaXRsZSgpIHsKICAgICAgdmFyIGRvYywgZWwsIG1vZGVsLCBwYXJzZXI7CiAgICAgIG1vZGVsID0gdGhpcy5tb2RlbCgpOwoKICAgICAgaWYgKCFtb2RlbCkgewogICAgICAgIHJldHVybiAnJzsKICAgICAgfQoKICAgICAgaWYgKG1vZGVsLnRpdGxlKSB7CiAgICAgICAgcmV0dXJuIG1vZGVsLnRpdGxlLnJlcGxhY2UoLzxbXj5dKj4/L2dtLCAnJyk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgcGFyc2VyID0gbmV3IERPTVBhcnNlcigpOwogICAgICAgIGRvYyA9IHBhcnNlci5wYXJzZUZyb21TdHJpbmcobW9kZWwuc3RhdGVtZW50IHx8IG1vZGVsLmJvZHksICd0ZXh0L2h0bWwnKTsKCiAgICAgICAgaWYgKGVsID0gZG9jLnF1ZXJ5U2VsZWN0b3IoJ2gxLGgyLGgzJykpIHsKICAgICAgICAgIHJldHVybiBlbC50ZXh0Q29udGVudDsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgcmV0dXJuIHRoaXMuYWN0b3IoKS5uYW1lOwogICAgICAgIH0KICAgICAgfQogICAgfQoKICAgIHVucGluKCkgewogICAgICByZXR1cm4gdGhpcy5yZW1vdGUucGF0Y2hNZW1iZXIodGhpcy5pZCwgJ3VucGluJyk7CiAgICB9CgogICAgaXNGb3JraW5nKCkgewogICAgICByZXR1cm4gdGhpcy5kaXNjdXNzaW9uKCkgJiYgKHRoaXMuZGlzY3Vzc2lvbigpLmZvcmtlZEV2ZW50SWRzLmluY2x1ZGVzKHRoaXMuaWQpIHx8IHRoaXMucGFyZW50SXNGb3JraW5nKCkpOwogICAgfQoKICAgIHBhcmVudElzRm9ya2luZygpIHsKICAgICAgcmV0dXJuIHRoaXMucGFyZW50KCkgJiYgdGhpcy5wYXJlbnQoKS5pc0ZvcmtpbmcoKTsKICAgIH0KCiAgICBmb3JraW5nRGlzYWJsZWQoKSB7CiAgICAgIHJldHVybiB0aGlzLnBhcmVudElzRm9ya2luZygpIHx8IHRoaXMucGFyZW50KCkgJiYgdGhpcy5wYXJlbnQoKS5raW5kID09PSAncG9sbF9jcmVhdGVkJzsKICAgIH0KCiAgICB0b2dnbGVGb3JraW5nKCkgewogICAgICBpZiAodGhpcy5pc0ZvcmtpbmcoKSkgewogICAgICAgIHJldHVybiB0aGlzLmRpc2N1c3Npb24oKS51cGRhdGUoewogICAgICAgICAgZm9ya2VkRXZlbnRJZHM6IF93aXRob3V0KHRoaXMuZGlzY3Vzc2lvbigpLmZvcmtlZEV2ZW50SWRzLCB0aGlzLmlkKQogICAgICAgIH0pOwogICAgICB9IGVsc2UgewogICAgICAgIHJldHVybiB0aGlzLmRpc2N1c3Npb24oKS5mb3JrZWRFdmVudElkcy5wdXNoKHRoaXMuaWQpOwogICAgICB9CiAgICB9CgogICAgbmV4dCgpIHsKICAgICAgcmV0dXJuIHRoaXMucmVjb3JkU3RvcmUuZXZlbnRzLmZpbmQoewogICAgICAgIHBhcmVudElkOiB0aGlzLnBhcmVudElkLAogICAgICAgIHBvc2l0aW9uOiB0aGlzLnBvc2l0aW9uICsgMQogICAgICB9KVswXTsKICAgIH0KCiAgICBwcmV2aW91cygpIHsKICAgICAgcmV0dXJuIHRoaXMucmVjb3JkU3RvcmUuZXZlbnRzLmZpbmQoewogICAgICAgIHBhcmVudElkOiB0aGlzLnBhcmVudElkLAogICAgICAgIHBvc2l0aW9uOiB0aGlzLnBvc2l0aW9uIC0gMQogICAgICB9KVswXTsKICAgIH0KCiAgfQoKICA7CiAgRXZlbnRNb2RlbC5zaW5ndWxhciA9ICdldmVudCc7CiAgRXZlbnRNb2RlbC5wbHVyYWwgPSAnZXZlbnRzJzsKICBFdmVudE1vZGVsLmluZGljZXMgPSBbJ2Rpc2N1c3Npb25JZCcsICdzZXF1ZW5jZUlkJywgJ3Bvc2l0aW9uJywgJ2RlcHRoJywgJ3BhcmVudElkJywgJ3Bvc2l0aW9uS2V5J107CiAgRXZlbnRNb2RlbC51bmlxdWVJbmRpY2VzID0gWydpZCddOwogIHJldHVybiBFdmVudE1vZGVsOwp9LmNhbGwodGhpcyk7"},{"version":3,"sources":["/home/gustavo/Documents/tese/loomio/vue/src/shared/models/event_model.coffee"],"names":[],"mappings":"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","sourcesContent":["import BaseModel from '@/shared/record_store/base_model'\nimport i18n from '@/i18n.coffee'\nimport {invokeMap, without} from 'lodash'\n\nexport default class EventModel extends BaseModel\n  @singular: 'event'\n  @plural: 'events'\n  @indices: ['discussionId', 'sequenceId', 'position', 'depth', 'parentId', 'positionKey']\n  @uniqueIndices: ['id']\n\n  relationships: ->\n    @belongsTo 'parent', from: 'events'\n    @belongsTo 'actor', from: 'users'\n    @belongsTo 'discussion'\n    @hasMany  'notifications'\n\n  defaultValues: ->\n    pinned: false\n    eventableId: null\n    eventableType: null\n    discussionId: null\n    sequenceId: null\n    positition: 0\n    showReplyForm: true\n\n  parentOrSelf: ->\n    if @parentId\n      @parent()\n    else\n      @\n\n  isNested: -> @depth > 1\n  isSurface: -> @depth == 1\n  surfaceOrSelf: -> if @isNested() then @parent() else @\n\n  children: ->\n    @recordStore.events.find(parentId: @id)\n\n  delete: ->\n    @deleted = true\n\n  actorName: ->\n    if @actor()\n      @actor().nameWithTitle(@discussion().group())\n    else\n      i18n.t('common.anonymous')\n\n  actorUsername: ->\n    @actor().username if @actor()\n\n  model: ->\n    @recordStore[@recordStore.eventTypeMap[@eventableType]].find(@eventableId)\n\n  isUnread: ->\n    !@discussion().hasRead(@sequenceId)\n\n  markAsRead: ->\n    @discussion().markAsRead(@sequenceId)\n\n  beforeRemove: ->\n    invokeMap(@notifications(), 'remove')\n\n  removeFromThread: =>\n    @remote.patchMember(@id, 'remove_from_thread').then => @remove()\n\n  pin: (title) ->\n    @remote.patchMember(@id, 'pin', {pinned_title: title})\n\n  fillPinnedTitle: ->\n    @pinnedTitle = @suggestedTitle()\n\n  suggestedTitle: ->\n    model = @model()\n    return '' unless model\n\n    if model.title\n      model.title.replace(///<[^>]*>?///gm, '')\n    else\n      parser = new DOMParser()\n      doc = parser.parseFromString(model.statement || model.body, 'text/html')\n      if el = doc.querySelector('h1,h2,h3')\n        el.textContent\n      else\n        @actor().name\n\n  unpin: -> @remote.patchMember(@id, 'unpin')\n\n  isForking: ->\n    @discussion() && (@discussion().forkedEventIds.includes(@id) or @parentIsForking())\n\n  parentIsForking: ->\n    @parent() && @parent().isForking()\n\n  forkingDisabled: ->\n    @parentIsForking() || (@parent() && @parent().kind == 'poll_created')\n\n  toggleForking: ->\n    if @isForking()\n      @discussion().update(forkedEventIds: without(@discussion().forkedEventIds, @id))\n    else\n      @discussion().forkedEventIds.push @id\n\n  next: ->\n    @recordStore.events.find(parentId: @parentId, position: @position + 1)[0]\n\n  previous: ->\n    @recordStore.events.find(parentId: @parentId, position: @position - 1)[0]\n"],"sourceRoot":""}]}