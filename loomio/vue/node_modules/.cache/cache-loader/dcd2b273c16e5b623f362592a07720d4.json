{"remainingRequest":"/home/gustavo/Documents/tese/loomio/vue/node_modules/babel-loader/lib/index.js!/home/gustavo/Documents/tese/loomio/vue/node_modules/vue-cli-plugin-coffee/node_modules/coffee-loader/dist/cjs.js!/home/gustavo/Documents/tese/loomio/vue/src/shared/models/poll_model.coffee","dependencies":[{"path":"/home/gustavo/Documents/tese/loomio/vue/src/shared/models/poll_model.coffee","mtime":1706724415808},{"path":"/home/gustavo/Documents/tese/loomio/vue/.babelrc","mtime":1706724415792},{"path":"/home/gustavo/Documents/tese/loomio/vue/node_modules/vue-cli-plugin-coffee/node_modules/cache-loader/dist/cjs.js","mtime":1706724497848},{"path":"/home/gustavo/Documents/tese/loomio/vue/node_modules/babel-loader/lib/index.js","mtime":1706724500796},{"path":"/home/gustavo/Documents/tese/loomio/vue/node_modules/vue-cli-plugin-coffee/node_modules/coffee-loader/dist/cjs.js","mtime":1706724497848}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9zaHVmZmxlIGZyb20gImxvZGFzaC9zaHVmZmxlIjsKaW1wb3J0IF9pc0VxdWFsIGZyb20gImxvZGFzaC9pc0VxdWFsIjsKaW1wb3J0IF91bmlxIGZyb20gImxvZGFzaC91bmlxIjsKaW1wb3J0IF9zbGljZSBmcm9tICJsb2Rhc2gvc2xpY2UiOwppbXBvcnQgX2ZsYXR0ZW4gZnJvbSAibG9kYXNoL2ZsYXR0ZW4iOwppbXBvcnQgX21hcCBmcm9tICJsb2Rhc2gvbWFwIjsKaW1wb3J0IF9zb3J0QnkgZnJvbSAibG9kYXNoL3NvcnRCeSI7CmltcG9ydCBfb3JkZXJCeSBmcm9tICJsb2Rhc2gvb3JkZXJCeSI7CmltcG9ydCBfaGVhZCBmcm9tICJsb2Rhc2gvaGVhZCI7CmltcG9ydCBfY29tcGFjdCBmcm9tICJsb2Rhc2gvY29tcGFjdCI7CmltcG9ydCBfc25ha2VDYXNlIGZyb20gImxvZGFzaC9zbmFrZUNhc2UiOwoKdmFyIFBvbGxNb2RlbCwKICAgIGJvdW5kTWV0aG9kQ2hlY2sgPSBmdW5jdGlvbiAoaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7CiAgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsKICAgIHRocm93IG5ldyBFcnJvcignQm91bmQgaW5zdGFuY2UgbWV0aG9kIGFjY2Vzc2VkIGJlZm9yZSBiaW5kaW5nJyk7CiAgfQp9OwoKaW1wb3J0IEJhc2VNb2RlbCBmcm9tICdAL3NoYXJlZC9yZWNvcmRfc3RvcmUvYmFzZV9tb2RlbCc7CmltcG9ydCBBcHBDb25maWcgZnJvbSAnQC9zaGFyZWQvc2VydmljZXMvYXBwX2NvbmZpZyc7CmltcG9ydCBTZXNzaW9uIGZyb20gJ0Avc2hhcmVkL3NlcnZpY2VzL3Nlc3Npb24nOwppbXBvcnQgSGFzRG9jdW1lbnRzIGZyb20gJ0Avc2hhcmVkL21peGlucy9oYXNfZG9jdW1lbnRzJzsKaW1wb3J0IEhhc1RyYW5zbGF0aW9ucyBmcm9tICdAL3NoYXJlZC9taXhpbnMvaGFzX3RyYW5zbGF0aW9ucyc7CmltcG9ydCBFdmVudEJ1cyBmcm9tICdAL3NoYXJlZC9zZXJ2aWNlcy9ldmVudF9idXMnOwppbXBvcnQgSTE4biBmcm9tICdAL2kxOG4nOwppbXBvcnQgTnVsbEdyb3VwTW9kZWwgZnJvbSAnQC9zaGFyZWQvbW9kZWxzL251bGxfZ3JvdXBfbW9kZWwnOwppbXBvcnQgeyBhZGREYXlzLCBzdGFydE9mSG91ciwgZGlmZmVyZW5jZUluSG91cnMsIGFkZEhvdXJzIH0gZnJvbSAnZGF0ZS1mbnMnOwpleHBvcnQgZGVmYXVsdCBQb2xsTW9kZWwgPSBmdW5jdGlvbiAoKSB7CiAgY2xhc3MgUG9sbE1vZGVsIGV4dGVuZHMgQmFzZU1vZGVsIHsKICAgIGNvbnN0cnVjdG9yKCkgewogICAgICBzdXBlciguLi5hcmd1bWVudHMpOwogICAgICB0aGlzLmNsb3NlID0gdGhpcy5jbG9zZS5iaW5kKHRoaXMpOwogICAgICB0aGlzLnJlb3BlbiA9IHRoaXMucmVvcGVuLmJpbmQodGhpcyk7CiAgICAgIHRoaXMuYWRkVG9UaHJlYWQgPSB0aGlzLmFkZFRvVGhyZWFkLmJpbmQodGhpcyk7CiAgICAgIHRoaXMuYWRkT3B0aW9uID0gdGhpcy5hZGRPcHRpb24uYmluZCh0aGlzKTsKICAgIH0KCiAgICBhZnRlckNvbnN0cnVjdGlvbigpIHsKICAgICAgSGFzRG9jdW1lbnRzLmFwcGx5KHRoaXMsIHsKICAgICAgICBzaG93VGl0bGU6IHRydWUKICAgICAgfSk7CiAgICAgIHJldHVybiBIYXNUcmFuc2xhdGlvbnMuYXBwbHkodGhpcyk7CiAgICB9CgogICAgY29uZmlnKCkgewogICAgICByZXR1cm4gQXBwQ29uZmlnLnBvbGxUeXBlc1t0aGlzLnBvbGxUeXBlXTsKICAgIH0KCiAgICBpMThuKCkgewogICAgICByZXR1cm4gQXBwQ29uZmlnLnBvbGxUeXBlc1t0aGlzLnBvbGxUeXBlXS5pMThuOwogICAgfQoKICAgIHBvbGxUeXBlS2V5KCkgewogICAgICByZXR1cm4gYHBvbGxfdHlwZXMuJHt0aGlzLnBvbGxUeXBlfWA7CiAgICB9CgogICAgcG9sbCgpIHsKICAgICAgcmV0dXJuIHRoaXM7CiAgICB9CgogICAgZGVmYXVsdFZhbHVlcygpIHsKICAgICAgcmV0dXJuIHsKICAgICAgICBkaXNjdXNzaW9uSWQ6IG51bGwsCiAgICAgICAgdGl0bGU6ICcnLAogICAgICAgIHRpdGxlUGxhY2Vob2xkZXI6IG51bGwsCiAgICAgICAgY2xvc2luZ0F0OiBudWxsLAogICAgICAgIGN1c3RvbWl6ZTogZmFsc2UsCiAgICAgICAgZGV0YWlsczogJycsCiAgICAgICAgZGV0YWlsc0Zvcm1hdDogJ2h0bWwnLAogICAgICAgIGRlY2lkZWRWb3RlcnNDb3VudDogMCwKICAgICAgICBkZWZhdWx0RHVyYXRpb25JbkRheXM6IG51bGwsCiAgICAgICAgc3BlY2lmaWVkVm90ZXJzT25seTogZmFsc2UsCiAgICAgICAgcG9sbE9wdGlvbk5hbWVzOiBbXSwKICAgICAgICBwb2xsVHlwZTogJ3Byb3Bvc2FsJywKICAgICAgICBjaGFydENvbHVtbjogbnVsbCwKICAgICAgICBjaGFydFR5cGU6IG51bGwsCiAgICAgICAgbWluU2NvcmU6IG51bGwsCiAgICAgICAgbWF4U2NvcmU6IG51bGwsCiAgICAgICAgbWluaW11bVN0YW5jZUNob2ljZXM6IG51bGwsCiAgICAgICAgbWF4aW11bVN0YW5jZUNob2ljZXM6IG51bGwsCiAgICAgICAgZG90c1BlclBlcnNvbjogbnVsbCwKICAgICAgICBjYW5SZXNwb25kTWF5YmU6IHRydWUsCiAgICAgICAgbWVldGluZ0R1cmF0aW9uOiBudWxsLAogICAgICAgIGxpbWl0UmVhc29uTGVuZ3RoOiB0cnVlLAogICAgICAgIHN0YW5jZVJlYXNvblJlcXVpcmVkOiAnb3B0aW9uYWwnLAogICAgICAgIHJlYXNvblByb21wdDogbnVsbCwKICAgICAgICBmaWxlczogW10sCiAgICAgICAgaW1hZ2VGaWxlczogW10sCiAgICAgICAgYXR0YWNobWVudHM6IFtdLAogICAgICAgIGxpbmtQcmV2aWV3czogW10sCiAgICAgICAgbm90aWZ5T25DbG9zaW5nU29vbjogJ3VuZGVjaWRlZF92b3RlcnMnLAogICAgICAgIHJlc3VsdHM6IFtdLAogICAgICAgIHBvbGxPcHRpb25JZHM6IFtdLAogICAgICAgIHBvbGxPcHRpb25OYW1lRm9ybWF0OiBudWxsLAogICAgICAgIHJlY2lwaWVudE1lc3NhZ2U6IG51bGwsCiAgICAgICAgcmVjaXBpZW50QXVkaWVuY2U6IG51bGwsCiAgICAgICAgcmVjaXBpZW50VXNlcklkczogW10sCiAgICAgICAgcmVjaXBpZW50Q2hhdGJvdElkczogW10sCiAgICAgICAgcmVjaXBpZW50RW1haWxzOiBbXSwKICAgICAgICBub3RpZnlSZWNpcGllbnRzOiB0cnVlLAogICAgICAgIHNodWZmbGVPcHRpb25zOiBmYWxzZSwKICAgICAgICB0YWdzOiBbXSwKICAgICAgICBoaWRlUmVzdWx0czogJ29mZicsCiAgICAgICAgc3RhbmNlQ291bnRzOiBbXQogICAgICB9OwogICAgfQoKICAgIGNsb25lUG9sbCgpIHsKICAgICAgdmFyIGNsb25lOwogICAgICBjbG9uZSA9IHRoaXMuY2xvbmUoKTsKICAgICAgY2xvbmUuaWQgPSBudWxsOwogICAgICBjbG9uZS5rZXkgPSBudWxsOwogICAgICBjbG9uZS5zb3VyY2VUZW1wbGF0ZUlkID0gdGhpcy5pZDsKICAgICAgY2xvbmUuYXV0aG9ySWQgPSBTZXNzaW9uLnVzZXIoKS5pZDsKICAgICAgY2xvbmUuZ3JvdXBJZCA9IG51bGw7CiAgICAgIGNsb25lLmRpc2N1c3Npb25JZCA9IG51bGw7CiAgICAgIGNsb25lLnRlbXBsYXRlID0gZmFsc2U7CiAgICAgIGNsb25lLmNsb3NpbmdBdCA9IHN0YXJ0T2ZIb3VyKGFkZERheXMobmV3IERhdGUoKSwgdGhpcy5kZWZhdWx0RHVyYXRpb25JbkRheXMgfHwgNykpOwoKICAgICAgaWYgKHRoaXMucG9sbE9wdGlvbnNBdHRyaWJ1dGVzKSB7CiAgICAgICAgY2xvbmUucG9sbE9wdGlvbnNBdHRyaWJ1dGVzID0gdGhpcy5wb2xsT3B0aW9uc0F0dHJpYnV0ZXM7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgY2xvbmUucG9sbE9wdGlvbnNBdHRyaWJ1dGVzID0gdGhpcy5wb2xsT3B0aW9ucygpLm1hcChvID0+IHsKICAgICAgICAgIHJldHVybiB7CiAgICAgICAgICAgIG5hbWU6IG8ubmFtZSwKICAgICAgICAgICAgbWVhbmluZzogby5tZWFuaW5nLAogICAgICAgICAgICBwcm9tcHQ6IG8ucHJvbXB0LAogICAgICAgICAgICBpY29uOiBvLmljb24KICAgICAgICAgIH07CiAgICAgICAgfSk7CiAgICAgIH0KCiAgICAgIGNsb25lLmNsb3NlZEF0ID0gbnVsbDsKICAgICAgY2xvbmUuY3JlYXRlZEF0ID0gbnVsbDsKICAgICAgY2xvbmUudXBkYXRlZEF0ID0gbnVsbDsKICAgICAgY2xvbmUuZGVjaWRlZFZvdGVyc0NvdW50ID0gbnVsbDsKICAgICAgY2xvbmUudW5kZWNpZGVkVm90ZXJzQ291bnQgPSBudWxsOwogICAgICByZXR1cm4gY2xvbmU7CiAgICB9CgogICAgY2xvbmVQb2xsT3B0aW9ucygpIHsKICAgICAgcmV0dXJuIHRoaXMucG9sbE9wdGlvbnMoKS5tYXAobyA9PiB7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgIGlkOiBvLmlkLAogICAgICAgICAgbmFtZTogby5uYW1lLAogICAgICAgICAgbWVhbmluZzogby5tZWFuaW5nLAogICAgICAgICAgcHJvbXB0OiBvLnByb21wdCwKICAgICAgICAgIGljb246IG8uaWNvbgogICAgICAgIH07CiAgICAgIH0pOwogICAgfQoKICAgIGRlZmF1bHRlZChhdHRyKSB7CiAgICAgIGlmICh0aGlzW2F0dHJdID09PSBudWxsKSB7CiAgICAgICAgcmV0dXJuIEFwcENvbmZpZy5wb2xsVHlwZXNbdGhpcy5wb2xsVHlwZV0uZGVmYXVsdHNbX3NuYWtlQ2FzZShhdHRyKV07CiAgICAgIH0gZWxzZSB7CiAgICAgICAgcmV0dXJuIHRoaXNbYXR0cl07CiAgICAgIH0KICAgIH0KCiAgICBhdWRpZW5jZVZhbHVlcygpIHsKICAgICAgcmV0dXJuIHsKICAgICAgICBuYW1lOiB0aGlzLmdyb3VwKCkubmFtZQogICAgICB9OwogICAgfQoKICAgIHJlbGF0aW9uc2hpcHMoKSB7CiAgICAgIHRoaXMuYmVsb25nc1RvKCdhdXRob3InLCB7CiAgICAgICAgZnJvbTogJ3VzZXJzJwogICAgICB9KTsKICAgICAgdGhpcy5iZWxvbmdzVG8oJ2Rpc2N1c3Npb24nKTsKICAgICAgdGhpcy5iZWxvbmdzVG8oJ2dyb3VwJyk7CiAgICAgIHRoaXMuaGFzTWFueSgnc3RhbmNlcycpOwogICAgICByZXR1cm4gdGhpcy5oYXNNYW55KCd2ZXJzaW9ucycpOwogICAgfQoKICAgIHBpZVNsaWNlcygpIHsKICAgICAgdmFyIGFncmVlLCBwY3QsIHNsaWNlczsKICAgICAgc2xpY2VzID0gW107CgogICAgICBpZiAodGhpcy5wb2xsVHlwZSA9PT0gJ2NvdW50JykgewogICAgICAgIGFncmVlID0gdGhpcy5yZXN1bHRzLmZpbmQociA9PiB7CiAgICAgICAgICByZXR1cm4gci5pY29uID09PSAnYWdyZWUnOwogICAgICAgIH0pOwoKICAgICAgICBpZiAoYWdyZWUuc2NvcmUgPCB0aGlzLmFncmVlVGFyZ2V0KSB7CiAgICAgICAgICBwY3QgPSBwYXJzZUZsb2F0KGFncmVlLnNjb3JlKSAvIHBhcnNlRmxvYXQodGhpcy5hZ3JlZVRhcmdldCkgKiAxMDA7CiAgICAgICAgICBzbGljZXMucHVzaCh7CiAgICAgICAgICAgIHZhbHVlOiBwY3QsCiAgICAgICAgICAgIGNvbG9yOiBhZ3JlZS5jb2xvcgogICAgICAgICAgfSk7CiAgICAgICAgICBzbGljZXMucHVzaCh7CiAgICAgICAgICAgIHZhbHVlOiAxMDAgLSBwY3QsCiAgICAgICAgICAgIGNvbG9yOiAiI2RkZCIKICAgICAgICAgIH0pOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBzbGljZXMucHVzaCh7CiAgICAgICAgICAgIHZhbHVlOiAxMDAsCiAgICAgICAgICAgIGNvbG9yOiBhZ3JlZS5jb2xvcgogICAgICAgICAgfSk7CiAgICAgICAgfQogICAgICB9IGVsc2UgewogICAgICAgIHNsaWNlcyA9IHRoaXMucmVzdWx0cy5maWx0ZXIociA9PiB7CiAgICAgICAgICByZXR1cm4gclt0aGlzLmNoYXJ0Q29sdW1uXTsKICAgICAgICB9KS5tYXAociA9PiB7CiAgICAgICAgICByZXR1cm4gewogICAgICAgICAgICB2YWx1ZTogclt0aGlzLmNoYXJ0Q29sdW1uXSwKICAgICAgICAgICAgY29sb3I6IHIuY29sb3IKICAgICAgICAgIH07CiAgICAgICAgfSk7CiAgICAgIH0KCiAgICAgIHJldHVybiBzbGljZXM7CiAgICB9CgogICAgcG9sbE9wdGlvbnMoKSB7CiAgICAgIHZhciBvcHRpb25zOwogICAgICBvcHRpb25zID0gdGhpcy5yZWNvcmRTdG9yZS5wb2xsT3B0aW9ucy5jb2xsZWN0aW9uLmNoYWluKCkuZmluZCh7CiAgICAgICAgcG9sbElkOiB0aGlzLmlkLAogICAgICAgIGlkOiB7CiAgICAgICAgICAkaW46IHRoaXMucG9sbE9wdGlvbklkcwogICAgICAgIH0KICAgICAgfSkuZGF0YSgpOwogICAgICByZXR1cm4gX29yZGVyQnkob3B0aW9ucywgJ3ByaW9yaXR5Jyk7CiAgICB9CgogICAgcG9sbE9wdGlvbnNGb3JWb3RpbmcoKSB7CiAgICAgIGlmICh0aGlzLnNodWZmbGVPcHRpb25zKSB7CiAgICAgICAgcmV0dXJuIF9zaHVmZmxlKHRoaXMucG9sbE9wdGlvbnMoKSk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgcmV0dXJuIHRoaXMucG9sbE9wdGlvbnMoKTsKICAgICAgfQogICAgfQoKICAgIGJlc3ROYW1lZElkKCkgewogICAgICByZXR1cm4gKHRoaXMuaWQgJiYgdGhpcyB8fCB0aGlzLmRpc2N1c2lvbklkICYmIHRoaXMuZGlzY3Vzc2lvbigpIHx8IHRoaXMuZ3JvdXBJZCAmJiB0aGlzLmdyb3VwKCkgfHwgewogICAgICAgIG5hbWVkSWQ6IGZ1bmN0aW9uICgpIHt9CiAgICAgIH0pLm5hbWVkSWQoKTsKICAgIH0KCiAgICB2b3RlcnMoKSB7CiAgICAgIHJldHVybiB0aGlzLmxhdGVzdFN0YW5jZXMoKS5tYXAoZnVuY3Rpb24gKHN0YW5jZSkgewogICAgICAgIHJldHVybiBzdGFuY2UucGFydGljaXBhbnQoKTsKICAgICAgfSk7CiAgICB9CgogICAgbWVtYmVycygpIHsKICAgICAgcmV0dXJuICh0aGlzLmdyb3VwKCkgJiYgdGhpcy5ncm91cCgpLm1lbWJlcnMoKSB8fCBbXSkuY29uY2F0KHRoaXMudm90ZXJzKCkpOwogICAgfQoKICAgIHBhcnRpY2lwYW50SWRzKCkgewogICAgICByZXR1cm4gX2NvbXBhY3QoX2ZsYXR0ZW4oW3RoaXMuYXV0aG9ySWRdLCBfbWFwKHRoaXMuc3RhbmNlcygpLCAncGFydGljaXBhbnRJZCcpKSk7CiAgICB9CgogICAgYWRtaW5zSW5jbHVkZSh1c2VyKSB7CiAgICAgIHZhciBzdGFuY2U7CiAgICAgIHN0YW5jZSA9IHRoaXMuc3RhbmNlRm9yKHVzZXIpOwogICAgICByZXR1cm4gdGhpcy5hdXRob3JJZCA9PT0gdXNlci5pZCAmJiAhdGhpcy5ncm91cElkIHx8IHRoaXMuYXV0aG9ySWQgPT09IHVzZXIuaWQgJiYgdGhpcy5ncm91cElkICYmIHRoaXMuZ3JvdXAoKS5tZW1iZXJzSW5jbHVkZSh1c2VyKSB8fCB0aGlzLmF1dGhvcklkID09PSB1c2VyLmlkICYmIHRoaXMuZGlzY3Vzc2lvbklkICYmIHRoaXMuZGlzY3Vzc2lvbigpLm1lbWJlcnNJbmNsdWRlKHVzZXIpIHx8IHN0YW5jZSAmJiBzdGFuY2UuYWRtaW4gfHwgdGhpcy5kaXNjdXNzaW9uSWQgJiYgdGhpcy5kaXNjdXNzaW9uKCkuYWRtaW5zSW5jbHVkZSh1c2VyKSB8fCB0aGlzLmdyb3VwKCkuYWRtaW5zSW5jbHVkZSh1c2VyKTsKICAgIH0KCiAgICB2b3RlcnNJbmNsdWRlKHVzZXIpIHsKICAgICAgaWYgKHNwZWNpZmllZFZvdGVyc09ubHkpIHsKICAgICAgICByZXR1cm4gdGhpcy5zdGFuY2VGb3IodXNlcik7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgcmV0dXJuIHRoaXMubWVtYmVyc0luY2x1ZGUodXNlcik7CiAgICAgIH0KICAgIH0KCiAgICBtZW1iZXJzSW5jbHVkZSh1c2VyKSB7CiAgICAgIHJldHVybiB0aGlzLnN0YW5jZUZvcih1c2VyKSB8fCB0aGlzLmRpc2N1c3Npb25JZCAmJiB0aGlzLmRpc2N1c3Npb24oKS5tZW1iZXJzSW5jbHVkZSh1c2VyKSB8fCB0aGlzLmdyb3VwKCkubWVtYmVyc0luY2x1ZGUodXNlcik7CiAgICB9CgogICAgc3RhbmNlRm9yKHVzZXIpIHsKICAgICAgaWYgKHVzZXIuaWQgPT09IEFwcENvbmZpZy5jdXJyZW50VXNlcklkKSB7CiAgICAgICAgcmV0dXJuIHRoaXMubXlTdGFuY2UoKTsKICAgICAgfSBlbHNlIHsKICAgICAgICByZXR1cm4gX2hlYWQoX29yZGVyQnkodGhpcy5yZWNvcmRTdG9yZS5zdGFuY2VzLmZpbmQoewogICAgICAgICAgcG9sbElkOiB0aGlzLmlkLAogICAgICAgICAgcGFydGljaXBhbnRJZDogdXNlci5pZCwKICAgICAgICAgIGxhdGVzdDogdHJ1ZSwKICAgICAgICAgIHJldm9rZWRBdDogbnVsbAogICAgICAgIH0pLCAnY3JlYXRlZEF0JywgJ2Rlc2MnKSk7CiAgICAgIH0KICAgIH0KCiAgICBteVN0YW5jZSgpIHsKICAgICAgcmV0dXJuIHRoaXMucmVjb3JkU3RvcmUuc3RhbmNlcy5maW5kKHsKICAgICAgICBpZDogdGhpcy5teVN0YW5jZUlkLAogICAgICAgIHJldm9rZWRBdDogbnVsbAogICAgICB9KVswXTsKICAgIH0KCiAgICBpSGF2ZVZvdGVkKCkgewogICAgICByZXR1cm4gdGhpcy5teVN0YW5jZUlkICYmIHRoaXMubXlTdGFuY2UoKSAmJiB0aGlzLm15U3RhbmNlKCkuY2FzdEF0OwogICAgfQoKICAgIHNob3dSZXN1bHRzKCkgewogICAgICByZXR1cm4gISF0aGlzLmNsb3NpbmdBdCAmJiBmdW5jdGlvbiAoKSB7CiAgICAgICAgc3dpdGNoICh0aGlzLmhpZGVSZXN1bHRzKSB7CiAgICAgICAgICBjYXNlICJ1bnRpbF9jbG9zZWQiOgogICAgICAgICAgICByZXR1cm4gdGhpcy5jbG9zZWRBdDsKCiAgICAgICAgICBjYXNlICJ1bnRpbF92b3RlIjoKICAgICAgICAgICAgcmV0dXJuIHRoaXMuY2xvc2VkQXQgfHwgdGhpcy5pSGF2ZVZvdGVkKCk7CgogICAgICAgICAgZGVmYXVsdDoKICAgICAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgICAgfQogICAgICB9LmNhbGwodGhpcyk7CiAgICB9CgogICAgb3B0aW9uc0RpZmZlcihvcHRpb25zKSB7CiAgICAgIHJldHVybiAhX2lzRXF1YWwoX3NvcnRCeSh0aGlzLnBvbGxPcHRpb25OYW1lcyksIF9zb3J0QnkoX21hcChvcHRpb25zLCAnbmFtZScpKSk7CiAgICB9CgogICAgaUNhblZvdGUoKSB7CiAgICAgIHJldHVybiB0aGlzLmlzVm90YWJsZSgpICYmICh0aGlzLm15U3RhbmNlKCkgfHwgIXRoaXMuc3BlY2lmaWVkVm90ZXJzT25seSAmJiB0aGlzLm1lbWJlcnNJbmNsdWRlKFNlc3Npb24udXNlcigpKSk7CiAgICB9CgogICAgaXNCbGFuaygpIHsKICAgICAgcmV0dXJuIHRoaXMuZGV0YWlscyA9PT0gJycgfHwgdGhpcy5kZXRhaWxzID09PSBudWxsIHx8IHRoaXMuZGV0YWlscyA9PT0gJzxwPjwvcD4nOwogICAgfQoKICAgIGF1dGhvck5hbWUoKSB7CiAgICAgIHJldHVybiB0aGlzLmF1dGhvcigpLm5hbWVXaXRoVGl0bGUodGhpcy5ncm91cCgpKTsKICAgIH0KCiAgICByZWFjdGlvbnMoKSB7CiAgICAgIHJldHVybiB0aGlzLnJlY29yZFN0b3JlLnJlYWN0aW9ucy5maW5kKHsKICAgICAgICByZWFjdGFibGVJZDogdGhpcy5pZCwKICAgICAgICByZWFjdGFibGVUeXBlOiAiUG9sbCIKICAgICAgfSk7CiAgICB9CgogICAgZGVjaWRlZFZvdGVySWRzKCkgewogICAgICByZXR1cm4gX3VuaXEoX2ZsYXR0ZW4odGhpcy5yZXN1bHRzLm1hcChmdW5jdGlvbiAobykgewogICAgICAgIHJldHVybiBvLnZvdGVyX2lkczsKICAgICAgfSkpKTsKICAgIH0gLy8gd2hvJ3Mgdm90ZWQ/CgoKICAgIGRlY2lkZWRWb3RlcnMoKSB7CiAgICAgIHJldHVybiB0aGlzLnJlY29yZFN0b3JlLnVzZXJzLmZpbmQodGhpcy5kZWNpZGVkVm90ZXJJZHMoKSk7CiAgICB9CgogICAgb3V0Y29tZSgpIHsKICAgICAgcmV0dXJuIHRoaXMucmVjb3JkU3RvcmUub3V0Y29tZXMuZmluZCh7CiAgICAgICAgcG9sbElkOiB0aGlzLmlkLAogICAgICAgIGxhdGVzdDogdHJ1ZQogICAgICB9KVswXTsKICAgIH0KCiAgICBjcmVhdGVkRXZlbnQoKSB7CiAgICAgIHJldHVybiB0aGlzLnJlY29yZFN0b3JlLmV2ZW50cy5maW5kKHsKICAgICAgICBldmVudGFibGVJZDogdGhpcy5pZCwKICAgICAgICBraW5kOiAncG9sbF9jcmVhdGVkJwogICAgICB9KVswXTsKICAgIH0KCiAgICBsYXRlc3RTdGFuY2VzKCkgewogICAgICBsZXQgb3JkZXIgPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6ICctY3JlYXRlZEF0JzsKICAgICAgbGV0IGxpbWl0ID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgPyBhcmd1bWVudHNbMV0gOiB1bmRlZmluZWQ7CiAgICAgIHJldHVybiBfc2xpY2UoX3NvcnRCeSh0aGlzLnJlY29yZFN0b3JlLnN0YW5jZXMuZmluZCh7CiAgICAgICAgcG9sbElkOiB0aGlzLmlkLAogICAgICAgIGxhdGVzdDogdHJ1ZSwKICAgICAgICByZXZva2VkQXQ6IG51bGwKICAgICAgfSksIG9yZGVyKSwgMCwgbGltaXQpOwogICAgfQoKICAgIGxhdGVzdENhc3RTdGFuY2VzKCkgewogICAgICByZXR1cm4gdGhpcy5yZWNvcmRTdG9yZS5zdGFuY2VzLmNvbGxlY3Rpb24uY2hhaW4oKS5maW5kKHsKICAgICAgICBwb2xsSWQ6IHRoaXMuaWQsCiAgICAgICAgbGF0ZXN0OiB0cnVlLAogICAgICAgIHJldm9rZWRBdDogbnVsbCwKICAgICAgICBjYXN0QXQ6IHsKICAgICAgICAgICRuZTogbnVsbAogICAgICAgIH0KICAgICAgfSkuZGF0YSgpOwogICAgfQoKICAgIGlzVm90YWJsZSgpIHsKICAgICAgcmV0dXJuICF0aGlzLmRpc2NhcmRlZEF0ICYmIHRoaXMuY2xvc2luZ0F0ICYmIHRoaXMuY2xvc2VkQXQgPT0gbnVsbDsKICAgIH0KCiAgICBpc0Nsb3NlZCgpIHsKICAgICAgcmV0dXJuIHRoaXMuY2xvc2VkQXQgIT0gbnVsbDsKICAgIH0KCiAgICBjbG9zZSgpIHsKICAgICAgYm91bmRNZXRob2RDaGVjayh0aGlzLCBQb2xsTW9kZWwpOwogICAgICB0aGlzLnByb2Nlc3NpbmcgPSB0cnVlOwogICAgICByZXR1cm4gdGhpcy5yZW1vdGUucG9zdE1lbWJlcih0aGlzLmtleSwgJ2Nsb3NlJykuZmluYWxseSgoKSA9PiB7CiAgICAgICAgcmV0dXJuIHRoaXMucHJvY2Vzc2luZyA9IGZhbHNlOwogICAgICB9KTsKICAgIH0KCiAgICByZW9wZW4oKSB7CiAgICAgIGJvdW5kTWV0aG9kQ2hlY2sodGhpcywgUG9sbE1vZGVsKTsKICAgICAgdGhpcy5wcm9jZXNzaW5nID0gdHJ1ZTsKICAgICAgcmV0dXJuIHRoaXMucmVtb3RlLnBvc3RNZW1iZXIodGhpcy5rZXksICdyZW9wZW4nLCB7CiAgICAgICAgcG9sbDogewogICAgICAgICAgY2xvc2luZ19hdDogdGhpcy5jbG9zaW5nQXQKICAgICAgICB9CiAgICAgIH0pLmZpbmFsbHkoKCkgPT4gewogICAgICAgIHJldHVybiB0aGlzLnByb2Nlc3NpbmcgPSBmYWxzZTsKICAgICAgfSk7CiAgICB9CgogICAgYWRkVG9UaHJlYWQoZGlzY3Vzc2lvbklkKSB7CiAgICAgIGJvdW5kTWV0aG9kQ2hlY2sodGhpcywgUG9sbE1vZGVsKTsKICAgICAgdGhpcy5wcm9jZXNzaW5nID0gdHJ1ZTsKICAgICAgcmV0dXJuIHRoaXMucmVtb3RlLnBhdGNoTWVtYmVyKHRoaXMua2V5T3JJZCgpLCAnYWRkX3RvX3RocmVhZCcsIHsKICAgICAgICBkaXNjdXNzaW9uX2lkOiBkaXNjdXNzaW9uSWQKICAgICAgfSkuZmluYWxseSgoKSA9PiB7CiAgICAgICAgcmV0dXJuIHRoaXMucHJvY2Vzc2luZyA9IGZhbHNlOwogICAgICB9KTsKICAgIH0KCiAgICBub3RpZnlBY3Rpb24oKSB7CiAgICAgIGlmICh0aGlzLmlzTmV3KCkpIHsKICAgICAgICByZXR1cm4gJ3B1Ymxpc2gnOwogICAgICB9IGVsc2UgewogICAgICAgIHJldHVybiAnZWRpdCc7CiAgICAgIH0KICAgIH0KCiAgICB0cmFuc2xhdGVkUG9sbFR5cGUoKSB7CiAgICAgIHJldHVybiBJMThuLnQoYHBvbGxfdHlwZXMuJHt0aGlzLnBvbGxUeXBlfWApOwogICAgfQoKICAgIHRyYW5zbGF0ZWRQb2xsVHlwZUNhcHMoKSB7CiAgICAgIHJldHVybiBJMThuLnQoYGRlY2lzaW9uX3Rvb2xzX2NhcmQuJHt0aGlzLnBvbGxUeXBlfV90aXRsZWApOwogICAgfQoKICAgIGFkZE9wdGlvbihvcHRpb24pIHsKICAgICAgYm91bmRNZXRob2RDaGVjayh0aGlzLCBQb2xsTW9kZWwpOwoKICAgICAgaWYgKHRoaXMucG9sbE9wdGlvbk5hbWVzLmluY2x1ZGVzKG9wdGlvbikgfHwgIW9wdGlvbikgewogICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgfQoKICAgICAgdGhpcy5wb2xsT3B0aW9uTmFtZXMucHVzaChvcHRpb24pOwoKICAgICAgaWYgKHRoaXMucG9sbFR5cGUgPT09ICJtZWV0aW5nIikgewogICAgICAgIHRoaXMucG9sbE9wdGlvbk5hbWVzLnNvcnQoKTsKICAgICAgfQoKICAgICAgcmV0dXJuIG9wdGlvbjsKICAgIH0KCiAgICBoYXNWYXJpYWJsZVNjb3JlKCkgewogICAgICByZXR1cm4gdGhpcy5kZWZhdWx0ZWQoJ21pblNjb3JlJykgIT09IHRoaXMuZGVmYXVsdGVkKCdtYXhTY29yZScpOwogICAgfQoKICAgIHNpbmdsZUNob2ljZSgpIHsKICAgICAgdmFyIHJlZjsKICAgICAgcmV0dXJuIHRoaXMuZGVmYXVsdGVkKCdtaW5pbXVtU3RhbmNlQ2hvaWNlcycpID09PSAocmVmID0gdGhpcy5kZWZhdWx0ZWQoJ21heGltdW1TdGFuY2VDaG9pY2VzJykpICYmIHJlZiA9PT0gMTsKICAgIH0KCiAgICBoYXNPcHRpb25JY29uKCkgewogICAgICByZXR1cm4gdGhpcy5jb25maWcoKS5oYXNfb3B0aW9uX2ljb247CiAgICB9CgogICAgZGF0ZXNBc09wdGlvbnMoKSB7CiAgICAgIHJldHVybiB0aGlzLnBvbGxPcHRpb25OYW1lRm9ybWF0ID09PSAnaXNvODYwMSc7CiAgICB9CgogICAgcmVtb3ZlT3JwaGFuT3B0aW9ucygpIHsKICAgICAgcmV0dXJuIHRoaXMucG9sbE9wdGlvbnMoKS5mb3JFYWNoKG9wdGlvbiA9PiB7CiAgICAgICAgaWYgKCF0aGlzLnBvbGxPcHRpb25OYW1lcy5pbmNsdWRlcyhvcHRpb24ubmFtZSkpIHsKICAgICAgICAgIHJldHVybiBvcHRpb24ucmVtb3ZlKCk7CiAgICAgICAgfQogICAgICB9KTsKICAgIH0KCiAgfQoKICA7CiAgUG9sbE1vZGVsLnNpbmd1bGFyID0gJ3BvbGwnOwogIFBvbGxNb2RlbC5wbHVyYWwgPSAncG9sbHMnOwogIFBvbGxNb2RlbC51bmlxdWVJbmRpY2VzID0gWydpZCcsICdrZXknXTsKICBQb2xsTW9kZWwuaW5kaWNlcyA9IFsnZGlzY3Vzc2lvbklkJywgJ2F1dGhvcklkJywgJ2dyb3VwSWQnXTsKICByZXR1cm4gUG9sbE1vZGVsOwp9LmNhbGwodGhpcyk7"},{"version":3,"sources":["/home/gustavo/Documents/tese/loomio/vue/src/shared/models/poll_model.coffee"],"names":[],"mappings":"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","sourcesContent":["import BaseModel        from '@/shared/record_store/base_model'\nimport AppConfig        from '@/shared/services/app_config'\nimport Session          from '@/shared/services/session'\nimport HasDocuments     from '@/shared/mixins/has_documents'\nimport HasTranslations  from '@/shared/mixins/has_translations'\nimport EventBus         from '@/shared/services/event_bus'\nimport I18n             from '@/i18n'\nimport NullGroupModel   from '@/shared/models/null_group_model'\nimport { addDays, startOfHour, differenceInHours, addHours } from 'date-fns'\nimport { snakeCase, camelCase, compact, head, orderBy, sortBy, map, includes, difference, invokeMap, each, max, flatten, slice, uniq, isEqual, shuffle } from 'lodash'\n\nexport default class PollModel extends BaseModel\n  @singular: 'poll'\n  @plural: 'polls'\n  @uniqueIndices: ['id', 'key']\n  @indices: ['discussionId', 'authorId', 'groupId']\n\n  afterConstruction: ->\n    HasDocuments.apply @, showTitle: true\n    HasTranslations.apply @\n\n  config: ->\n    AppConfig.pollTypes[@pollType]\n\n  i18n: ->\n    AppConfig.pollTypes[@pollType].i18n\n\n  pollTypeKey: ->\n    \"poll_types.#{@pollType}\"\n\n  poll: -> @\n\n  defaultValues: ->\n    discussionId: null\n    title: ''\n    titlePlaceholder: null\n    closingAt: null\n    customize: false\n    details: ''\n    detailsFormat: 'html'\n    decidedVotersCount: 0\n    defaultDurationInDays: null\n    specifiedVotersOnly: false\n    pollOptionNames: []\n    pollType: 'proposal'\n    chartColumn: null\n    chartType: null\n    minScore: null\n    maxScore: null\n    minimumStanceChoices: null\n    maximumStanceChoices: null\n    dotsPerPerson: null\n    canRespondMaybe: true\n    meetingDuration: null\n    limitReasonLength: true\n    stanceReasonRequired: 'optional'\n    reasonPrompt: null\n    files: []\n    imageFiles: []\n    attachments: []\n    linkPreviews: []\n    notifyOnClosingSoon: 'undecided_voters'\n    results: []\n    pollOptionIds: []\n    pollOptionNameFormat: null\n    recipientMessage: null\n    recipientAudience: null\n    recipientUserIds: []\n    recipientChatbotIds: []\n    recipientEmails: []\n    notifyRecipients: true\n    shuffleOptions: false\n    tags: []\n    hideResults: 'off'\n    stanceCounts: []\n\n  clonePoll: ->\n    clone = @clone()\n    clone.id = null\n    clone.key = null\n    clone.sourceTemplateId = @id\n    clone.authorId = Session.user().id\n    clone.groupId = null\n    clone.discussionId = null\n\n    clone.template = false\n    clone.closingAt = startOfHour(addDays(new Date(), @defaultDurationInDays || 7))\n\n    if @pollOptionsAttributes\n      clone.pollOptionsAttributes = @pollOptionsAttributes\n    else\n      clone.pollOptionsAttributes = @pollOptions().map (o) =>\n          name: o.name\n          meaning: o.meaning\n          prompt: o.prompt\n          icon: o.icon\n\n    clone.closedAt = null\n    clone.createdAt = null\n    clone.updatedAt = null\n    clone.decidedVotersCount = null\n    clone.undecidedVotersCount = null\n    clone\n\n  clonePollOptions: ->\n    @pollOptions().map (o) =>\n      id: o.id\n      name: o.name\n      meaning: o.meaning\n      prompt: o.prompt\n      icon: o.icon\n\n  defaulted: (attr) ->\n    if @[attr] == null\n      AppConfig.pollTypes[@pollType].defaults[snakeCase(attr)]\n    else\n      @[attr]\n\n  audienceValues: ->\n    name: @group().name\n\n  relationships: ->\n    @belongsTo 'author', from: 'users'\n    @belongsTo 'discussion'\n    @belongsTo 'group'\n    @hasMany   'stances'\n    @hasMany   'versions'\n\n  pieSlices: ->\n    slices = []\n    if @pollType == 'count'\n      agree = @results.find((r) => r.icon == 'agree')\n      if agree.score < @agreeTarget\n        pct = (parseFloat(agree.score) / parseFloat(@agreeTarget)) * 100\n        slices.push\n          value: pct\n          color: agree.color\n        slices.push\n          value: 100 - pct\n          color: \"#ddd\"\n      else\n        slices.push\n          value: 100\n          color: agree.color\n    else\n      slices = @results.filter((r) => r[@chartColumn]).map (r) =>\n        value: r[@chartColumn]\n        color: r.color\n    slices\n\n  pollOptions: ->\n    options = (@recordStore.pollOptions.collection.chain().find(pollId: @id, id: {$in: @pollOptionIds}).data())\n    orderBy(options, 'priority')\n\n  pollOptionsForVoting: ->\n    if @shuffleOptions\n      shuffle(@pollOptions())\n    else\n      @pollOptions()\n\n  bestNamedId: ->\n    ((@id && @) || (@discusionId && @discussion()) || (@groupId && @group()) || {namedId: ->}).namedId()\n\n  voters: ->\n    @latestStances().map (stance) -> stance.participant()\n\n  members: ->\n    ((@group() && @group().members()) || []).concat(@voters())\n\n  participantIds: ->\n    compact flatten(\n      [@authorId],\n      map(@stances(), 'participantId')\n    )\n\n  adminsInclude: (user) ->\n    stance = @stanceFor(user)\n    (@authorId == user.id && !@groupId) ||\n    (@authorId == user.id && (@groupId && @group().membersInclude(user))) ||\n    (@authorId == user.id && (@discussionId && @discussion().membersInclude(user))) ||\n    (stance && stance.admin) || \n    (@discussionId && @discussion().adminsInclude(user)) || \n    @group().adminsInclude(user)\n\n  votersInclude: (user) ->\n    if specifiedVotersOnly\n      @stanceFor(user)\n    else\n      @membersInclude(user)\n\n  membersInclude: (user) ->\n    @stanceFor(user) || (@discussionId && @discussion().membersInclude(user)) || @group().membersInclude(user)\n\n  stanceFor: (user) ->\n    if user.id == AppConfig.currentUserId\n      @myStance() \n    else\n      head orderBy(@recordStore.stances.find(pollId: @id, participantId: user.id, latest: true, revokedAt: null), 'createdAt', 'desc')\n\n  myStance: ->\n    @recordStore.stances.find(id: @myStanceId, revokedAt: null)[0]\n\n  iHaveVoted: ->\n    @myStanceId && @myStance() && @myStance().castAt\n\n  showResults: ->\n    !!@closingAt &&\n    switch @hideResults\n      when \"until_closed\"\n        @closedAt\n      when \"until_vote\"\n        @closedAt || @iHaveVoted()\n      else\n        true\n\n  optionsDiffer: (options) ->\n    !isEqual(sortBy(@pollOptionNames), sortBy(map(options, 'name')))\n\n  iCanVote: ->\n    @isVotable() && (@myStance() || (!@specifiedVotersOnly && @membersInclude(Session.user())))\n\n  isBlank: ->\n    @details == '' or @details == null or @details == '<p></p>'\n\n  authorName: ->\n    @author().nameWithTitle(@group())\n\n  reactions: ->\n    @recordStore.reactions.find(reactableId: @id, reactableType: \"Poll\")\n\n  decidedVoterIds: ->\n    uniq flatten @results.map((o) -> o.voter_ids)\n\n  # who's voted?\n  decidedVoters: ->\n    @recordStore.users.find(@decidedVoterIds())\n\n  outcome: ->\n    @recordStore.outcomes.find(pollId: @id, latest: true)[0]\n\n  createdEvent: ->\n    @recordStore.events.find(eventableId: @id, kind: 'poll_created')[0]\n\n  latestStances: (order = '-createdAt', limit) ->\n    slice(sortBy(@recordStore.stances.find(pollId: @id, latest: true, revokedAt: null), order), 0, limit)\n\n  latestCastStances: ->\n    @recordStore.stances.collection.chain().find(\n      pollId: @id\n      latest: true\n      revokedAt: null\n      castAt: {$ne: null}\n    ).data()\n\n  isVotable: ->\n    !@discardedAt && @closingAt && !@closedAt?\n\n  isClosed: ->\n    @closedAt?\n\n  close: =>\n    @processing = true\n    @remote.postMember(@key, 'close')\n    .finally => @processing = false\n\n  reopen: =>\n    @processing = true\n    @remote.postMember(@key, 'reopen', poll: {closing_at: @closingAt})\n    .finally => @processing = false\n\n  addToThread: (discussionId) =>\n    @processing = true\n    @remote.patchMember(@keyOrId(), 'add_to_thread', { discussion_id: discussionId })\n    .finally => @processing = false\n\n  notifyAction: ->\n    if @isNew()\n      'publish'\n    else\n      'edit'\n\n  translatedPollType: ->\n    I18n.t(\"poll_types.#{@pollType}\")\n\n  translatedPollTypeCaps: ->\n    I18n.t(\"decision_tools_card.#{@pollType}_title\")\n\n  addOption: (option) =>\n    return false if @pollOptionNames.includes(option) or !option\n    @pollOptionNames.push option\n    @pollOptionNames.sort() if @pollType == \"meeting\"\n    option\n\n  hasVariableScore: -> \n    @defaulted('minScore') != @defaulted('maxScore')\n\n  singleChoice: ->\n    @defaulted('minimumStanceChoices') == @defaulted('maximumStanceChoices') == 1\n\n  hasOptionIcon: -> \n    @config().has_option_icon\n\n  datesAsOptions: ->\n    @pollOptionNameFormat == 'iso8601'\n\n  removeOrphanOptions: ->\n    @pollOptions().forEach (option) =>\n      option.remove() unless @pollOptionNames.includes(option.name)\n"],"sourceRoot":""}]}