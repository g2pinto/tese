{"remainingRequest":"/home/gustavo/Documents/tese/loomio/vue/node_modules/babel-loader/lib/index.js!/home/gustavo/Documents/tese/loomio/vue/node_modules/vue-cli-plugin-coffee/node_modules/coffee-loader/dist/cjs.js!/home/gustavo/Documents/tese/loomio/vue/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!/home/gustavo/Documents/tese/loomio/vue/src/components/tasks/page.vue?vue&type=script&lang=coffee&","dependencies":[{"path":"/home/gustavo/Documents/tese/loomio/vue/src/components/tasks/page.vue","mtime":1706724415804},{"path":"/home/gustavo/Documents/tese/loomio/vue/.babelrc","mtime":1706724415792},{"path":"/home/gustavo/Documents/tese/loomio/vue/node_modules/vue-cli-plugin-coffee/node_modules/cache-loader/dist/cjs.js","mtime":1706724497848},{"path":"/home/gustavo/Documents/tese/loomio/vue/node_modules/babel-loader/lib/index.js","mtime":1706724500796},{"path":"/home/gustavo/Documents/tese/loomio/vue/node_modules/vue-cli-plugin-coffee/node_modules/coffee-loader/dist/cjs.js","mtime":1706724497848},{"path":"/home/gustavo/Documents/tese/loomio/vue/node_modules/@vue/vue-loader-v15/lib/index.js","mtime":1706724499784}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9ncm91cEJ5IGZyb20gImxvZGFzaC9ncm91cEJ5IjsKaW1wb3J0IEFwcENvbmZpZyBmcm9tICdAL3NoYXJlZC9zZXJ2aWNlcy9hcHBfY29uZmlnJzsKaW1wb3J0IFJlY29yZHMgZnJvbSAnQC9zaGFyZWQvc2VydmljZXMvcmVjb3Jkcyc7CmltcG9ydCBTZXNzaW9uIGZyb20gJ0Avc2hhcmVkL3NlcnZpY2VzL3Nlc3Npb24nOwppbXBvcnQgRmxhc2ggZnJvbSAnQC9zaGFyZWQvc2VydmljZXMvZmxhc2gnOwppbXBvcnQgRXZlbnRCdXMgZnJvbSAnQC9zaGFyZWQvc2VydmljZXMvZXZlbnRfYnVzJzsKaW1wb3J0IEFiaWxpdHlTZXJ2aWNlIGZyb20gJ0Avc2hhcmVkL3NlcnZpY2VzL2FiaWxpdHlfc2VydmljZSc7CmV4cG9ydCBkZWZhdWx0IHsKICBkYXRhOiBmdW5jdGlvbiAoKSB7CiAgICByZXR1cm4gewogICAgICByZWNvcmRzOiB7fSwKICAgICAgdGFza3NCeVJlY29yZEtleToge30sCiAgICAgIGxvYWRpbmc6IHRydWUKICAgIH07CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiAoKSB7CiAgICByZXR1cm4gUmVjb3Jkcy50YXNrcy5yZW1vdGUuZmV0Y2goJy8nKS50aGVuKGRhdGEgPT4gewogICAgICB2YXIgaWRzLCB0YXNrczsKICAgICAgaWRzID0gZGF0YVsndGFza3MnXS5tYXAoZnVuY3Rpb24gKHQpIHsKICAgICAgICByZXR1cm4gdC5pZDsKICAgICAgfSk7CiAgICAgIHRhc2tzID0gUmVjb3Jkcy50YXNrcy5maW5kKGlkcykuZmlsdGVyKGZ1bmN0aW9uICh0KSB7CiAgICAgICAgcmV0dXJuIHQucmVjb3JkKCkgIT0gbnVsbDsKICAgICAgfSk7CiAgICAgIHRhc2tzLmZvckVhY2godCA9PiB7CiAgICAgICAgdmFyIHJlY29yZEtleTsKICAgICAgICByZWNvcmRLZXkgPSB0LnJlY29yZFR5cGUgKyB0LnJlY29yZElkOwoKICAgICAgICBpZiAodGhpcy5yZWNvcmRzW3JlY29yZEtleV0gPT0gbnVsbCkgewogICAgICAgICAgcmV0dXJuIHRoaXMucmVjb3Jkc1tyZWNvcmRLZXldID0gdC5yZWNvcmQoKTsKICAgICAgICB9CiAgICAgIH0pOwogICAgICByZXR1cm4gdGhpcy50YXNrc0J5UmVjb3JkS2V5ID0gX2dyb3VwQnkodGFza3MsIGZ1bmN0aW9uICh0KSB7CiAgICAgICAgcmV0dXJuIHQucmVjb3JkVHlwZSArIHQucmVjb3JkSWQ7CiAgICAgIH0pOwogICAgfSkuZmluYWxseSgoKSA9PiB7CiAgICAgIHJldHVybiB0aGlzLmxvYWRpbmcgPSBmYWxzZTsKICAgIH0pOwogIH0sCiAgbWV0aG9kczogewogICAgdGFza1VybEZvcjogZnVuY3Rpb24gKHJlY29yZCkgewogICAgICBpZiAocmVjb3JkLmlzQSgnZGlzY3Vzc2lvbicpKSB7CiAgICAgICAgcmV0dXJuIHRoaXMudXJsRm9yKHJlY29yZCkgKyAnLzAnOwogICAgICB9IGVsc2UgewogICAgICAgIHJldHVybiB0aGlzLnVybEZvcihyZWNvcmQpOwogICAgICB9CiAgICB9LAogICAgdG9nZ2xlRG9uZTogZnVuY3Rpb24gKHRhc2spIHsKICAgICAgcmV0dXJuIHRhc2sudG9nZ2xlRG9uZSgpLnRoZW4oZnVuY3Rpb24gKCkgewogICAgICAgIGlmICh0YXNrLmRvbmUpIHsKICAgICAgICAgIHJldHVybiBGbGFzaC5zdWNjZXNzKCd0YXNrcy50YXNrX3VwZGF0ZWRfZG9uZScpOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICByZXR1cm4gRmxhc2guc3VjY2VzcygndGFza3MudGFza191cGRhdGVkX25vdF9kb25lJyk7CiAgICAgICAgfQogICAgICB9KTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["/home/gustavo/Documents/tese/loomio/vue/src/components/tasks/page.vue"],"names":[],"mappings":";AACA,OAAA,SAAA,MAAA,8BAAA;AACA,OAAA,OAAA,MAAA,2BAAA;AACA,OAAA,OAAA,MAAA,2BAAA;AACA,OAAA,KAAA,MAAA,yBAAA;AACA,OAAA,QAAA,MAAA,6BAAA;AACA,OAAA,cAAA,MAAA,mCAAA;AAIA,eACE;AAAA,EAAA,IAAA,EAAM,YAAA;WACJ;AAAA,MAAA,OAAA,EAAA,EAAA;AACA,MAAA,gBAAA,EADA,EAAA;AAEA,MAAA,OAAA,EAAS;AAFT,K;AADF,GAAA;AAKA,EAAA,OAAA,EAAS,YAAA;WACP,OAAO,CAAC,KAAR,CAAc,MAAd,CAAA,KAAA,CAAA,GAAA,EAAA,IAAA,CAAqC,IAAA,IAAA;AACzC,UAAA,GAAA,EAAA,KAAA;AAAM,MAAA,GAAA,GAAM,IAAI,CAAA,OAAA,CAAJ,CAAA,GAAA,CAAkB,UAAA,CAAA,EAAA;eAAO,CAAC,CAAC,E;AAA3B,OAAA,CAAN;AACA,MAAA,KAAA,GAAQ,OAAO,CAAC,KAAR,CAAA,IAAA,CAAA,GAAA,EAAA,MAAA,CAA+B,UAAA,CAAA,EAAA;eAAO,CAAA,CAAA,MAAA,MAAA,I;AAAtC,OAAA,CAAR;AACA,MAAA,KAAK,CAAL,OAAA,CAAc,CAAA,IAAA;AACpB,YAAA,SAAA;AAAQ,QAAA,SAAA,GAAY,CAAC,CAAD,UAAA,GAAe,CAAC,CAAC,QAA7B;;AACA,YAAI,KAAA,OAAA,CAAA,SAAA,KAAJ,IAAA,EAAA;iBACE,KAAC,OAAD,CAAA,SAAA,IAAsB,CAAC,CADzB,MACwB,E;;AAH1B,OAAA;aAIA,KAAA,gBAAA,GAAoB,SAAA,KAAA,EAAe,UAAA,CAAA,EAAA;eAAO,CAAC,CAAD,UAAA,GAAe,CAAC,CAAC,Q;AAAvC,OAAA,C;AAPtB,KAAA,EAAA,OAAA,CAQS,MAAA;aACP,KAAA,OAAA,GAAW,K;AATb,KAAA,C;AANF,GAAA;AAiBA,EAAA,OAAA,EACE;AAAA,IAAA,UAAA,EAAY,UAAA,MAAA,EAAA;AACV,UAAG,MAAM,CAAN,GAAA,CAAH,YAAG,CAAH,EAAA;eACE,KAAA,MAAA,CAAA,MAAA,IADF,I;AAAA,OAAA,MAAA;eAGE,KAAA,MAAA,CAHF,MAGE,C;;AAJJ,KAAA;AAMA,IAAA,UAAA,EAAY,UAAA,IAAA,EAAA;aACV,IAAI,CAAJ,UAAA,GAAA,IAAA,CAAuB,YAAA;AACrB,YAAG,IAAI,CAAP,IAAA,EAAA;iBACE,KAAK,CAAL,OAAA,CADF,yBACE,C;AADF,SAAA,MAAA;iBAGE,KAAK,CAAL,OAAA,CAHF,6BAGE,C;;AAJJ,OAAA,C;AADU;AANZ;AAlBF,CADF","sourcesContent":["\nimport AppConfig          from '@/shared/services/app_config'\nimport Records            from '@/shared/services/records'\nimport Session            from '@/shared/services/session'\nimport Flash              from '@/shared/services/flash'\nimport EventBus           from '@/shared/services/event_bus'\nimport AbilityService     from '@/shared/services/ability_service'\n\nimport {groupBy} from 'lodash'\n\nexport default\n  data: ->\n    records: {}\n    tasksByRecordKey: {}\n    loading: true\n\n  mounted: ->\n    Records.tasks.remote.fetch('/').then (data) =>\n      ids = data['tasks'].map (t) -> t.id\n      tasks = Records.tasks.find(ids).filter (t) -> t.record()?\n      tasks.forEach (t) =>\n        recordKey = t.recordType + t.recordId\n        if !@records[recordKey]?\n          @records[recordKey] = t.record()\n      @tasksByRecordKey = groupBy tasks, (t) -> t.recordType + t.recordId\n    .finally =>\n      @loading = false\n\n  methods:\n    taskUrlFor: (record) ->\n      if record.isA('discussion')\n        @urlFor(record)+'/0'\n      else\n        @urlFor(record)\n\n    toggleDone: (task) ->\n      task.toggleDone().then ->\n        if task.done\n          Flash.success 'tasks.task_updated_done'\n        else\n          Flash.success 'tasks.task_updated_not_done'\n\n"],"sourceRoot":""}]}