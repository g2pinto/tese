{"remainingRequest":"/home/gustavo/Documents/tese/loomio/vue/node_modules/babel-loader/lib/index.js!/home/gustavo/Documents/tese/loomio/vue/node_modules/vue-cli-plugin-coffee/node_modules/coffee-loader/dist/cjs.js!/home/gustavo/Documents/tese/loomio/vue/src/shared/interfaces/group_records_interface.coffee","dependencies":[{"path":"/home/gustavo/Documents/tese/loomio/vue/src/shared/interfaces/group_records_interface.coffee","mtime":1706724415808},{"path":"/home/gustavo/Documents/tese/loomio/vue/.babelrc","mtime":1706724415792},{"path":"/home/gustavo/Documents/tese/loomio/vue/node_modules/vue-cli-plugin-coffee/node_modules/cache-loader/dist/cjs.js","mtime":1706724497848},{"path":"/home/gustavo/Documents/tese/loomio/vue/node_modules/babel-loader/lib/index.js","mtime":1706724500796},{"path":"/home/gustavo/Documents/tese/loomio/vue/node_modules/vue-cli-plugin-coffee/node_modules/coffee-loader/dist/cjs.js","mtime":1706724497848}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9oZWFkIGZyb20gImxvZGFzaC9oZWFkIjsKdmFyIEdyb3VwUmVjb3Jkc0ludGVyZmFjZTsKaW1wb3J0IEJhc2VSZWNvcmRzSW50ZXJmYWNlIGZyb20gJ0Avc2hhcmVkL3JlY29yZF9zdG9yZS9iYXNlX3JlY29yZHNfaW50ZXJmYWNlJzsKaW1wb3J0IEdyb3VwTW9kZWwgZnJvbSAnQC9zaGFyZWQvbW9kZWxzL2dyb3VwX21vZGVsJzsKaW1wb3J0IFNlc3Npb24gZnJvbSAnQC9zaGFyZWQvc2VydmljZXMvc2Vzc2lvbic7CmltcG9ydCBFdmVudEJ1cyBmcm9tICdAL3NoYXJlZC9zZXJ2aWNlcy9ldmVudF9idXMnOwppbXBvcnQgTnVsbEdyb3VwTW9kZWwgZnJvbSAnQC9zaGFyZWQvbW9kZWxzL251bGxfZ3JvdXBfbW9kZWwnOwpleHBvcnQgZGVmYXVsdCBHcm91cFJlY29yZHNJbnRlcmZhY2UgPSBmdW5jdGlvbiAoKSB7CiAgY2xhc3MgR3JvdXBSZWNvcmRzSW50ZXJmYWNlIGV4dGVuZHMgQmFzZVJlY29yZHNJbnRlcmZhY2UgewogICAgbnVsbE1vZGVsKCkgewogICAgICByZXR1cm4gbmV3IE51bGxHcm91cE1vZGVsKCk7CiAgICB9CgogICAgZnV6enlGaW5kKGlkKSB7CiAgICAgIC8vIGNvdWxkIGJlIGlkIG9yIGtleSBvciBoYW5kbGUKICAgICAgcmV0dXJuIHRoaXMuZmluZChpZCkgfHwgX2hlYWQodGhpcy5maW5kKHsKICAgICAgICBoYW5kbGU6IGAke2lkfWAudG9Mb3dlckNhc2UoKQogICAgICB9KSk7CiAgICB9CgogICAgZmluZE9yRmV0Y2goaWQpIHsKICAgICAgbGV0IG9wdGlvbnMgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6IHt9OwogICAgICB2YXIgcmVjb3JkOwogICAgICByZWNvcmQgPSB0aGlzLmZ1enp5RmluZChpZCk7CgogICAgICBpZiAocmVjb3JkKSB7CiAgICAgICAgdGhpcy5yZW1vdGUuZmV0Y2hCeUlkKGlkLCBvcHRpb25zKTsKICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHJlY29yZCk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgcmV0dXJuIHRoaXMucmVtb3RlLmZldGNoQnlJZChpZCwgb3B0aW9ucykudGhlbigoKSA9PiB7CiAgICAgICAgICByZXR1cm4gdGhpcy5mdXp6eUZpbmQoaWQpOwogICAgICAgIH0pOwogICAgICB9CiAgICB9CgogICAgZmV0Y2hCeVBhcmVudChwYXJlbnRHcm91cCkgewogICAgICByZXR1cm4gdGhpcy5mZXRjaCh7CiAgICAgICAgcGF0aDogYCR7cGFyZW50R3JvdXAuaWR9L3N1Ymdyb3Vwc2AKICAgICAgfSk7CiAgICB9CgogICAgZmV0Y2hFeHBsb3JlR3JvdXBzKHF1ZXJ5KSB7CiAgICAgIGxldCBvcHRpb25zID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiB7fTsKICAgICAgb3B0aW9uc1sncSddID0gcXVlcnk7CiAgICAgIHJldHVybiB0aGlzLmZldGNoKHsKICAgICAgICBwYXJhbXM6IG9wdGlvbnMKICAgICAgfSk7CiAgICB9CgogICAgZ2V0RXhwbG9yZVJlc3VsdHNDb3VudChxdWVyeSkgewogICAgICBsZXQgb3B0aW9ucyA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDoge307CiAgICAgIG9wdGlvbnNbJ3EnXSA9IHF1ZXJ5OwogICAgICByZXR1cm4gdGhpcy5mZXRjaCh7CiAgICAgICAgcGF0aDogJ2NvdW50X2V4cGxvcmVfcmVzdWx0cycsCiAgICAgICAgcGFyYW1zOiBvcHRpb25zCiAgICAgIH0pOwogICAgfQoKICAgIGdldEhhbmRsZShfcmVmKSB7CiAgICAgIGxldCB7CiAgICAgICAgbmFtZSwKICAgICAgICBwYXJlbnRIYW5kbGUKICAgICAgfSA9IF9yZWY7CiAgICAgIHJldHVybiB0aGlzLmZldGNoKHsKICAgICAgICBwYXRoOiAnc3VnZ2VzdF9oYW5kbGUnLAogICAgICAgIHBhcmFtczogewogICAgICAgICAgbmFtZTogbmFtZSwKICAgICAgICAgIHBhcmVudF9oYW5kbGU6IHBhcmVudEhhbmRsZQogICAgICAgIH0KICAgICAgfSk7CiAgICB9CgogIH0KCiAgOwogIEdyb3VwUmVjb3Jkc0ludGVyZmFjZS5wcm90b3R5cGUubW9kZWwgPSBHcm91cE1vZGVsOwogIHJldHVybiBHcm91cFJlY29yZHNJbnRlcmZhY2U7Cn0uY2FsbCh0aGlzKTs="},{"version":3,"sources":["/home/gustavo/Documents/tese/loomio/vue/src/shared/interfaces/group_records_interface.coffee"],"names":[],"mappings":";AAAA,IAAA,qBAAA;AAAA,OAAA,oBAAA,MAAA,8CAAA;AACA,OAAA,UAAA,MAAA,6BAAA;AACA,OAAA,OAAA,MAAA,2BAAA;AACA,OAAA,QAAA,MAAA,6BAAA;AAEA,OAAA,cAAA,MAAA,kCAAA;AAGA,eAAqB,qBAAA,GAAA,YAAA;AAAN,QAAA,qBAAA,SAAoC,oBAApC,CAAA;AAGb,IAAA,SAAW,GAAA;aAAG,IAAA,cAAA,E;AAAH;;AAEX,IAAA,SAAW,CAAA,EAAA,EAAA;;aAET,KAAA,IAAA,CAAA,EAAA,KAAa,MAAK,KAAA,IAAA,CAAM;AAAA,QAAA,MAAA,EAAQ,GAAA,EAAA,EAAA,CAAA,WAAA;AAAR,OAAN,CAAL,C;AAFJ;;AAIX,IAAA,WAAa,CAAA,EAAA,EAAA;AAAA,UAAK,OAAL,uEAAA,EAAA;AACf,UAAA,MAAA;AAAI,MAAA,MAAA,GAAS,KAAA,SAAA,CAAA,EAAA,CAAT;;AACA,UAAA,MAAA,EAAA;AACE,aAAC,MAAD,CAAA,SAAA,CAAA,EAAA,EAAA,OAAA;eACA,OAAO,CAAP,OAAA,CAFF,MAEE,C;AAFF,OAAA,MAAA;eAIE,KAAC,MAAD,CAAA,SAAA,CAAA,EAAA,EAAA,OAAA,EAAA,IAAA,CACM,MAAA;iBAAG,KAAA,SAAA,CAAA,EAAA,C;AALX,SAIE,C;;AANS;;AASb,IAAA,aAAe,CAAA,WAAA,EAAA;aACb,KAAA,KAAA,CACE;AAAA,QAAA,IAAA,EAAM,GAAG,WAAW,CAAd,EAAA;AAAN,OADF,C;AADa;;AAIf,IAAA,kBAAoB,CAAA,KAAA,EAAA;AAAA,UAAQ,OAAR,uEAAA,EAAA;AAClB,MAAA,OAAO,CAAP,GAAO,CAAP,GAAe,KAAf;aACA,KAAA,KAAA,CACE;AAAA,QAAA,MAAA,EAAQ;AAAR,OADF,C;AAFkB;;AAKpB,IAAA,sBAAwB,CAAA,KAAA,EAAA;AAAA,UAAQ,OAAR,uEAAA,EAAA;AACtB,MAAA,OAAO,CAAP,GAAO,CAAP,GAAe,KAAf;aACA,KAAA,KAAA,CACE;AAAA,QAAA,IAAA,EAAA,uBAAA;AACA,QAAA,MAAA,EAAQ;AADR,OADF,C;AAFsB;;AAMxB,IAAA,SAAW,OAAA;AAAA,UAAC;AAAA,QAAA,IAAA;AAAD,QAAA;AAAC,OAAD;aACT,KAAA,KAAA,CACE;AAAA,QAAA,IAAA,EAAA,gBAAA;AACA,QAAA,MAAA,EAAQ;AAAC,UAAA,IAAA,EAAD,IAAA;AAAa,UAAA,aAAA,EAAe;AAA5B;AADR,OADF,C;AADS;;AAjCE;;AAAA;kCACb,K,GAAO,U;;CADY,C,IAAA,C,IAAA,CAArB","sourcesContent":["import BaseRecordsInterface from '@/shared/record_store/base_records_interface'\nimport GroupModel           from '@/shared/models/group_model'\nimport Session              from '@/shared/services/session'\nimport EventBus             from '@/shared/services/event_bus'\nimport {uniq, concat, compact, map, includes, head} from 'lodash'\nimport NullGroupModel   from '@/shared/models/null_group_model'\n\n\nexport default class GroupRecordsInterface extends BaseRecordsInterface\n  model: GroupModel\n\n  nullModel: -> new NullGroupModel()\n\n  fuzzyFind: (id) ->\n    # could be id or key or handle\n    @find(id) || head(@find(handle: \"#{id}\".toLowerCase()))\n\n  findOrFetch: (id, options = {}) ->\n    record = @fuzzyFind(id)\n    if record\n      @remote.fetchById(id, options)\n      Promise.resolve(record)\n    else\n      @remote.fetchById(id, options)\n      .then => @fuzzyFind(id)\n\n  fetchByParent: (parentGroup) ->\n    @fetch\n      path: \"#{parentGroup.id}/subgroups\"\n\n  fetchExploreGroups: (query, options = {}) ->\n    options['q'] = query\n    @fetch\n      params: options\n\n  getExploreResultsCount: (query, options = {}) ->\n    options['q'] = query\n    @fetch\n      path: 'count_explore_results'\n      params: options\n\n  getHandle: ({name, parentHandle}) ->\n    @fetch\n      path: 'suggest_handle'\n      params: {name: name, parent_handle: parentHandle}\n"],"sourceRoot":""}]}