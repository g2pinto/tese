{"remainingRequest":"/home/gustavo/Documents/tese/loomio/vue/node_modules/babel-loader/lib/index.js!/home/gustavo/Documents/tese/loomio/vue/node_modules/vue-cli-plugin-coffee/node_modules/coffee-loader/dist/cjs.js!/home/gustavo/Documents/tese/loomio/vue/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!/home/gustavo/Documents/tese/loomio/vue/src/components/thread/choose_template.vue?vue&type=script&lang=coffee&","dependencies":[{"path":"/home/gustavo/Documents/tese/loomio/vue/src/components/thread/choose_template.vue","mtime":1706724415804},{"path":"/home/gustavo/Documents/tese/loomio/vue/.babelrc","mtime":1706724415792},{"path":"/home/gustavo/Documents/tese/loomio/vue/node_modules/vue-cli-plugin-coffee/node_modules/cache-loader/dist/cjs.js","mtime":1706724497848},{"path":"/home/gustavo/Documents/tese/loomio/vue/node_modules/babel-loader/lib/index.js","mtime":1706724500796},{"path":"/home/gustavo/Documents/tese/loomio/vue/node_modules/vue-cli-plugin-coffee/node_modules/coffee-loader/dist/cjs.js","mtime":1706724497848},{"path":"/home/gustavo/Documents/tese/loomio/vue/node_modules/@vue/vue-loader-v15/lib/index.js","mtime":1706724499784}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IFJlY29yZHMgZnJvbSAnQC9zaGFyZWQvc2VydmljZXMvcmVjb3Jkcyc7CmltcG9ydCBTZXNzaW9uIGZyb20gJ0Avc2hhcmVkL3NlcnZpY2VzL3Nlc3Npb24nOwppbXBvcnQgTG1vVXJsU2VydmljZSBmcm9tICdAL3NoYXJlZC9zZXJ2aWNlcy9sbW9fdXJsX3NlcnZpY2UnOwppbXBvcnQgRXZlbnRCdXMgZnJvbSAnQC9zaGFyZWQvc2VydmljZXMvZXZlbnRfYnVzJzsKaW1wb3J0IEFiaWxpdHlTZXJ2aWNlIGZyb20gJ0Avc2hhcmVkL3NlcnZpY2VzL2FiaWxpdHlfc2VydmljZSc7CmV4cG9ydCBkZWZhdWx0IHsKICBwcm9wczogewogICAgZ3JvdXBJZDogTnVtYmVyLAogICAgZGlzY3Vzc2lvbjogT2JqZWN0CiAgfSwKICBkYXRhOiBmdW5jdGlvbiAoKSB7CiAgICByZXR1cm4gewogICAgICB0ZW1wbGF0ZXM6IFtdCiAgICB9OwogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gKCkgewogICAgUmVjb3Jkcy5kaXNjdXNzaW9ucy5mZXRjaCh7CiAgICAgIHBhcmFtczogewogICAgICAgIGdyb3VwX2lkOiB0aGlzLmdyb3VwSWQsCiAgICAgICAgZmlsdGVyOiAndGVtcGxhdGVzJywKICAgICAgICBleGNsdWRlX3R5cGVzOiAndXNlciBwb2xsJywKICAgICAgICBwZXI6IDUwCiAgICAgIH0KICAgIH0pOwogICAgcmV0dXJuIHRoaXMud2F0Y2hSZWNvcmRzKHsKICAgICAga2V5OiBgbmV3RGlzY3Vzc2lvbkluR3JvdXAke3RoaXMuZ3JvdXBJZH1gLAogICAgICBjb2xsZWN0aW9uczogWydkaXNjdXNzaW9ucyddLAogICAgICBxdWVyeTogKCkgPT4gewogICAgICAgIHJldHVybiB0aGlzLnRlbXBsYXRlcyA9IFJlY29yZHMuZGlzY3Vzc2lvbnMuY29sbGVjdGlvbi5jaGFpbigpLmZpbmQoewogICAgICAgICAgZ3JvdXBJZDogdGhpcy5ncm91cElkLAogICAgICAgICAgdGVtcGxhdGU6IHRydWUKICAgICAgICB9KS5kYXRhKCk7CiAgICAgIH0KICAgIH0pOwogIH0KfTs="},{"version":3,"sources":["/home/gustavo/Documents/tese/loomio/vue/src/components/thread/choose_template.vue"],"names":[],"mappings":"AACA,OAAA,OAAA,MAAA,2BAAA;AACA,OAAA,OAAA,MAAA,2BAAA;AACA,OAAA,aAAA,MAAA,mCAAA;AACA,OAAA,QAAA,MAAA,6BAAA;AACA,OAAA,cAAA,MAAA,mCAAA;AAEA,eACE;AAAA,EAAA,KAAA,EACE;AAAA,IAAA,OAAA,EAAA,MAAA;AACA,IAAA,UAAA,EAAY;AADZ,GADF;AAIA,EAAA,IAAA,EAAM,YAAA;WACJ;AAAA,MAAA,SAAA,EAAW;AAAX,K;AALF,GAAA;AAOA,EAAA,OAAA,EAAS,YAAA;AACP,IAAA,OAAO,CAAC,WAAR,CAAA,KAAA,CACE;AAAA,MAAA,MAAA,EACE;AAAA,QAAA,QAAA,EAAU,KAAV,OAAA;AACA,QAAA,MAAA,EADA,WAAA;AAEA,QAAA,aAAA,EAFA,WAAA;AAGA,QAAA,GAAA,EAAK;AAHL;AADF,KADF;WAOA,KAAA,YAAA,CACE;AAAA,MAAA,GAAA,EAAK,uBAAuB,KAAvB,OAAL,EAAA;AACA,MAAA,WAAA,EAAa,CADb,aACa,CADb;AAEA,MAAA,KAAA,EAAO,MAAA;eACL,KAAA,SAAA,GAAa,OAAO,CAAC,WAAR,CAAoB,UAApB,CAAA,KAAA,GAAA,IAAA,CACX;AAAA,UAAA,OAAA,EAAS,KAAT,OAAA;AACA,UAAA,QAAA,EAAU;AADV,SADW,EAAA,IAAA,E;AADR;AAFP,KADF,C;AARO;AAPT,CADF","sourcesContent":["\nimport Records       from '@/shared/services/records'\nimport Session       from '@/shared/services/session'\nimport LmoUrlService from '@/shared/services/lmo_url_service'\nimport EventBus      from '@/shared/services/event_bus'\nimport AbilityService from '@/shared/services/ability_service'\n\nexport default\n  props:\n    groupId: Number\n    discussion: Object\n\n  data: ->\n    templates: []\n\n  mounted: ->\n    Records.discussions.fetch\n      params:\n        group_id: @groupId\n        filter: 'templates'\n        exclude_types: 'user poll'\n        per: 50\n\n    @watchRecords\n      key: \"newDiscussionInGroup#{@groupId}\"\n      collections: ['discussions']\n      query: =>\n        @templates = Records.discussions.collection.chain().find(\n          groupId: @groupId,\n          template: true).data()\n\n"],"sourceRoot":""}]}