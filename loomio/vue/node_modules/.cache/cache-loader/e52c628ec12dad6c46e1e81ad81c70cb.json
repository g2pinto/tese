{"remainingRequest":"/home/gustavo/Documents/tese/loomio/vue/node_modules/babel-loader/lib/index.js!/home/gustavo/Documents/tese/loomio/vue/node_modules/vue-cli-plugin-coffee/node_modules/coffee-loader/dist/cjs.js!/home/gustavo/Documents/tese/loomio/vue/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!/home/gustavo/Documents/tese/loomio/vue/src/components/group/polls_panel.vue?vue&type=script&lang=coffee&","dependencies":[{"path":"/home/gustavo/Documents/tese/loomio/vue/src/components/group/polls_panel.vue","mtime":1706724415800},{"path":"/home/gustavo/Documents/tese/loomio/vue/.babelrc","mtime":1706724415792},{"path":"/home/gustavo/Documents/tese/loomio/vue/node_modules/vue-cli-plugin-coffee/node_modules/cache-loader/dist/cjs.js","mtime":1706724497848},{"path":"/home/gustavo/Documents/tese/loomio/vue/node_modules/babel-loader/lib/index.js","mtime":1706724500796},{"path":"/home/gustavo/Documents/tese/loomio/vue/node_modules/vue-cli-plugin-coffee/node_modules/coffee-loader/dist/cjs.js","mtime":1706724497848},{"path":"/home/gustavo/Documents/tese/loomio/vue/node_modules/@vue/vue-loader-v15/lib/index.js","mtime":1706724499784}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF91bmlxIGZyb20gImxvZGFzaC91bmlxIjsKaW1wb3J0IF9pbnRlcnNlY3Rpb24gZnJvbSAibG9kYXNoL2ludGVyc2VjdGlvbiI7CmltcG9ydCBfZXZlcnkgZnJvbSAibG9kYXNoL2V2ZXJ5IjsKaW1wb3J0IF9zb21lIGZyb20gImxvZGFzaC9zb21lIjsKaW1wb3J0IF9kZWJvdW5jZSBmcm9tICJsb2Rhc2gvZGVib3VuY2UiOwppbXBvcnQgQXBwQ29uZmlnIGZyb20gJ0Avc2hhcmVkL3NlcnZpY2VzL2FwcF9jb25maWcnOwppbXBvcnQgQWJpbGl0eVNlcnZpY2UgZnJvbSAnQC9zaGFyZWQvc2VydmljZXMvYWJpbGl0eV9zZXJ2aWNlJzsKaW1wb3J0IFJlY29yZHMgZnJvbSAnQC9zaGFyZWQvc2VydmljZXMvcmVjb3Jkcyc7CmltcG9ydCBQYWdlTG9hZGVyIGZyb20gJ0Avc2hhcmVkL3NlcnZpY2VzL3BhZ2VfbG9hZGVyJzsKaW1wb3J0IEV2ZW50QnVzIGZyb20gJ0Avc2hhcmVkL3NlcnZpY2VzL2V2ZW50X2J1cyc7CmltcG9ydCBTZXNzaW9uIGZyb20gJ0Avc2hhcmVkL3NlcnZpY2VzL3Nlc3Npb24nOwpleHBvcnQgZGVmYXVsdCB7CiAgZGF0YTogZnVuY3Rpb24gKCkgewogICAgcmV0dXJuIHsKICAgICAgZ3JvdXA6IG51bGwsCiAgICAgIHBvbGxzOiBbXSwKICAgICAgbG9hZGVyOiBudWxsLAogICAgICBwb2xsVHlwZXM6IEFwcENvbmZpZy5wb2xsVHlwZXMsCiAgICAgIHBlcjogMjUKICAgIH07CiAgfSwKICBjcmVhdGVkOiBmdW5jdGlvbiAoKSB7CiAgICB0aGlzLm9uUXVlcnlJbnB1dCA9IF9kZWJvdW5jZSh2YWwgPT4gewogICAgICByZXR1cm4gdGhpcy4kcm91dGVyLnJlcGxhY2UodGhpcy5tZXJnZVF1ZXJ5KHsKICAgICAgICBxOiB2YWwKICAgICAgfSkpOwogICAgfSwgNTAwKTsKICAgIHRoaXMuZ3JvdXAgPSBSZWNvcmRzLmdyb3Vwcy5maW5kKHRoaXMuJHJvdXRlLnBhcmFtcy5rZXkpOwogICAgdGhpcy5pbml0TG9hZGVyKCk7CiAgICB0aGlzLndhdGNoUmVjb3Jkcyh7CiAgICAgIGNvbGxlY3Rpb25zOiBbJ3BvbGxzJywgJ2dyb3VwcycsICdtZW1iZXJzaGlwcyddLAogICAgICBxdWVyeTogKCkgPT4gewogICAgICAgIHJldHVybiB0aGlzLmZpbmRSZWNvcmRzKCk7CiAgICAgIH0KICAgIH0pOwogICAgcmV0dXJuIHRoaXMubG9hZGVyLmZldGNoKHRoaXMucGFnZSkudGhlbigoKSA9PiB7CiAgICAgIHJldHVybiBFdmVudEJ1cy4kZW1pdCgnY3VycmVudENvbXBvbmVudCcsIHsKICAgICAgICBwYWdlOiAnZ3JvdXBQYWdlJywKICAgICAgICB0aXRsZTogdGhpcy5ncm91cC5uYW1lLAogICAgICAgIGdyb3VwOiB0aGlzLmdyb3VwCiAgICAgIH0pOwogICAgfSk7CiAgfSwKICBtZXRob2RzOiB7CiAgICBpbml0TG9hZGVyOiBmdW5jdGlvbiAoKSB7CiAgICAgIHJldHVybiB0aGlzLmxvYWRlciA9IG5ldyBQYWdlTG9hZGVyKHsKICAgICAgICBwYXRoOiAncG9sbHMnLAogICAgICAgIG9yZGVyOiAnY3JlYXRlZEF0JywKICAgICAgICBwYXJhbXM6IHsKICAgICAgICAgIGV4Y2x1ZGVfdHlwZXM6ICdncm91cCcsCiAgICAgICAgICBncm91cF9rZXk6IHRoaXMuJHJvdXRlLnBhcmFtcy5rZXksCiAgICAgICAgICBzdGF0dXM6IHRoaXMuJHJvdXRlLnF1ZXJ5LnN0YXR1cywKICAgICAgICAgIHBvbGxfdHlwZTogdGhpcy4kcm91dGUucXVlcnkucG9sbF90eXBlLAogICAgICAgICAgcXVlcnk6IHRoaXMuJHJvdXRlLnF1ZXJ5LnEsCiAgICAgICAgICBzdWJncm91cHM6IHRoaXMuJHJvdXRlLnF1ZXJ5LnN1Ymdyb3VwcywKICAgICAgICAgIHBlcjogdGhpcy5wZXIKICAgICAgICB9CiAgICAgIH0pOwogICAgfSwKICAgIG9wZW5TZWxlY3RQb2xsVHlwZU1vZGFsOiBmdW5jdGlvbiAoKSB7CiAgICAgIHJldHVybiBFdmVudEJ1cy4kZW1pdCgnb3Blbk1vZGFsJywgewogICAgICAgIGNvbXBvbmVudDogJ1BvbGxDb21tb25TdGFydEZvcm0nLAogICAgICAgIHByb3BzOiB7CiAgICAgICAgICBncm91cDogdGhpcy5ncm91cCwKICAgICAgICAgIGlzTW9kYWw6IHRydWUKICAgICAgICB9CiAgICAgIH0pOwogICAgfSwKICAgIGZpbmRSZWNvcmRzOiBmdW5jdGlvbiAoKSB7CiAgICAgIHZhciBjaGFpbiwgZ3JvdXBJZHM7CgogICAgICBncm91cElkcyA9IGZ1bmN0aW9uICgpIHsKICAgICAgICBzd2l0Y2ggKHRoaXMuJHJvdXRlLnF1ZXJ5LnN1Ymdyb3VwcyB8fCAnbWluZScpIHsKICAgICAgICAgIGNhc2UgJ2FsbCc6CiAgICAgICAgICAgIHJldHVybiB0aGlzLmdyb3VwLm9yZ2FuaXNhdGlvbklkcygpOwoKICAgICAgICAgIGNhc2UgJ25vbmUnOgogICAgICAgICAgICByZXR1cm4gW3RoaXMuZ3JvdXAuaWRdOwoKICAgICAgICAgIGNhc2UgJ21pbmUnOgogICAgICAgICAgICByZXR1cm4gX3VuaXEoW3RoaXMuZ3JvdXAuaWRdLmNvbmNhdChfaW50ZXJzZWN0aW9uKHRoaXMuZ3JvdXAub3JnYW5pc2F0aW9uSWRzKCksIFNlc3Npb24udXNlcigpLmdyb3VwSWRzKCkpKSk7CiAgICAgICAgfQogICAgICB9LmNhbGwodGhpcyk7CgogICAgICBjaGFpbiA9IFJlY29yZHMucG9sbHMuY29sbGVjdGlvbi5jaGFpbigpOwogICAgICBjaGFpbiA9IGNoYWluLmZpbmQoewogICAgICAgIGdyb3VwSWQ6IHsKICAgICAgICAgICRpbjogZ3JvdXBJZHMKICAgICAgICB9CiAgICAgIH0pOwogICAgICBjaGFpbiA9IGNoYWluLmZpbmQoewogICAgICAgIGRpc2NhcmRlZEF0OiBudWxsCiAgICAgIH0pOwoKICAgICAgc3dpdGNoICh0aGlzLiRyb3V0ZS5xdWVyeS5zdGF0dXMpIHsKICAgICAgICBjYXNlICdhY3RpdmUnOgogICAgICAgICAgY2hhaW4gPSBjaGFpbi5maW5kKHsKICAgICAgICAgICAgJ2Nsb3NlZEF0JzogbnVsbAogICAgICAgICAgfSk7CiAgICAgICAgICBicmVhazsKCiAgICAgICAgY2FzZSAnY2xvc2VkJzoKICAgICAgICAgIGNoYWluID0gY2hhaW4uZmluZCh7CiAgICAgICAgICAgICdjbG9zZWRBdCc6IHsKICAgICAgICAgICAgICAkbmU6IG51bGwKICAgICAgICAgICAgfQogICAgICAgICAgfSk7CiAgICAgICAgICBicmVhazsKCiAgICAgICAgY2FzZSAndm90ZSc6CiAgICAgICAgICBjaGFpbiA9IGNoYWluLmZpbmQoewogICAgICAgICAgICAnY2xvc2VkQXQnOiBudWxsCiAgICAgICAgICB9KS53aGVyZShmdW5jdGlvbiAocCkgewogICAgICAgICAgICByZXR1cm4gcC5pQ2FuVm90ZSgpICYmICFwLmlIYXZlVm90ZWQoKTsKICAgICAgICAgIH0pOwogICAgICB9CgogICAgICBpZiAodGhpcy4kcm91dGUucXVlcnkucG9sbF90eXBlKSB7CiAgICAgICAgY2hhaW4gPSBjaGFpbi5maW5kKHsKICAgICAgICAgICdwb2xsVHlwZSc6IHRoaXMuJHJvdXRlLnF1ZXJ5LnBvbGxfdHlwZQogICAgICAgIH0pOwogICAgICB9CgogICAgICBpZiAodGhpcy4kcm91dGUucXVlcnkucSkgewogICAgICAgIGNoYWluID0gY2hhaW4ud2hlcmUocG9sbCA9PiB7CiAgICAgICAgICByZXR1cm4gX3NvbWUoW3BvbGwudGl0bGUsIHBvbGwuZGV0YWlsc10sIGZpZWxkID0+IHsKICAgICAgICAgICAgcmV0dXJuIF9ldmVyeSh0aGlzLiRyb3V0ZS5xdWVyeS5xLnNwbGl0KCcgJyksIGZ1bmN0aW9uIChmcmFnKSB7CiAgICAgICAgICAgICAgcmV0dXJuIFJlZ0V4cChmcmFnLCAiaSIpLnRlc3QoZmllbGQpOwogICAgICAgICAgICB9KTsKICAgICAgICAgIH0pOwogICAgICAgIH0pOwogICAgICB9CgogICAgICBpZiAodGhpcy5sb2FkZXIucGFnZVdpbmRvd1t0aGlzLnBhZ2VdKSB7CiAgICAgICAgaWYgKHRoaXMucGFnZSA9PT0gMSkgewogICAgICAgICAgY2hhaW4gPSBjaGFpbi5maW5kKHsKICAgICAgICAgICAgY3JlYXRlZEF0OiB7CiAgICAgICAgICAgICAgJGd0ZTogdGhpcy5sb2FkZXIucGFnZVdpbmRvd1t0aGlzLnBhZ2VdWzBdCiAgICAgICAgICAgIH0KICAgICAgICAgIH0pOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBjaGFpbiA9IGNoYWluLmZpbmQoewogICAgICAgICAgICBjcmVhdGVkQXQ6IHsKICAgICAgICAgICAgICAkamJldHdlZW46IHRoaXMubG9hZGVyLnBhZ2VXaW5kb3dbdGhpcy5wYWdlXQogICAgICAgICAgICB9CiAgICAgICAgICB9KTsKICAgICAgICB9CgogICAgICAgIHJldHVybiB0aGlzLnBvbGxzID0gY2hhaW4uc2ltcGxlc29ydCgnY3JlYXRlZEF0JywgdHJ1ZSkuZGF0YSgpOwogICAgICB9IGVsc2UgewogICAgICAgIHJldHVybiB0aGlzLnBvbGxzID0gW107CiAgICAgIH0KICAgIH0KICB9LAogIHdhdGNoOiB7CiAgICAnJHJvdXRlLnF1ZXJ5LnEnOiBmdW5jdGlvbiAoKSB7CiAgICAgIHJldHVybiB0aGlzLmluaXRMb2FkZXIoKS5mZXRjaCh0aGlzLnBhZ2UpOwogICAgfSwKICAgICckcm91dGUucXVlcnkuc3RhdHVzJzogZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gdGhpcy5pbml0TG9hZGVyKCkuZmV0Y2godGhpcy5wYWdlKTsKICAgIH0sCiAgICAnJHJvdXRlLnF1ZXJ5LnBvbGxfdHlwZSc6IGZ1bmN0aW9uICgpIHsKICAgICAgcmV0dXJuIHRoaXMuaW5pdExvYWRlcigpLmZldGNoKHRoaXMucGFnZSk7CiAgICB9LAogICAgJyRyb3V0ZS5xdWVyeS5zdWJncm91cHMnOiBmdW5jdGlvbiAoKSB7CiAgICAgIHJldHVybiB0aGlzLmluaXRMb2FkZXIoKS5mZXRjaCh0aGlzLnBhZ2UpOwogICAgfSwKICAgICckcm91dGUucXVlcnkucGFnZSc6IGZ1bmN0aW9uICgpIHsKICAgICAgcmV0dXJuIHRoaXMubG9hZGVyLmZldGNoKHRoaXMucGFnZSk7CiAgICB9CiAgfSwKICBjb21wdXRlZDogewogICAgdG90YWxQYWdlczogZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gTWF0aC5jZWlsKHBhcnNlRmxvYXQodGhpcy5sb2FkZXIudG90YWwpIC8gcGFyc2VGbG9hdCh0aGlzLnBlcikpOwogICAgfSwKICAgIGNhblN0YXJ0UG9sbDogZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gQWJpbGl0eVNlcnZpY2UuY2FuU3RhcnRQb2xsKHRoaXMuZ3JvdXApOwogICAgfSwKICAgIHBhZ2U6IHsKICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7CiAgICAgICAgcmV0dXJuIHBhcnNlSW50KHRoaXMuJHJvdXRlLnF1ZXJ5LnBhZ2UpIHx8IDE7CiAgICAgIH0sCiAgICAgIHNldDogZnVuY3Rpb24gKHZhbCkgewogICAgICAgIHJldHVybiB0aGlzLiRyb3V0ZXIucmVwbGFjZSh7CiAgICAgICAgICBxdWVyeTogT2JqZWN0LmFzc2lnbih7fSwgdGhpcy4kcm91dGUucXVlcnksIHsKICAgICAgICAgICAgcGFnZTogdmFsCiAgICAgICAgICB9KQogICAgICAgIH0pOwogICAgICB9CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["/home/gustavo/Documents/tese/loomio/vue/src/components/group/polls_panel.vue"],"names":[],"mappings":"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","sourcesContent":["\nimport AppConfig from '@/shared/services/app_config'\nimport AbilityService from '@/shared/services/ability_service'\nimport Records from '@/shared/services/records'\nimport PageLoader from '@/shared/services/page_loader'\nimport EventBus       from '@/shared/services/event_bus'\nimport Session       from '@/shared/services/session'\nimport { debounce, some, every, compact, omit, values, keys, intersection, uniq } from 'lodash'\n\nexport default\n  data: ->\n    group: null\n    polls: []\n    loader: null\n    pollTypes: AppConfig.pollTypes\n    per: 25\n\n  created: ->\n    @onQueryInput = debounce (val) =>\n      @$router.replace(@mergeQuery(q: val))\n    , 500\n\n    @group = Records.groups.find(@$route.params.key)\n\n    @initLoader()\n\n    @watchRecords\n      collections: ['polls', 'groups', 'memberships']\n      query: => @findRecords()\n\n    @loader.fetch(@page).then =>\n      EventBus.$emit 'currentComponent',\n        page: 'groupPage'\n        title: @group.name\n        group: @group\n\n  methods:\n    initLoader: ->\n      @loader = new PageLoader\n        path: 'polls'\n        order: 'createdAt'\n        params:\n          exclude_types: 'group'\n          group_key: @$route.params.key\n          status: @$route.query.status\n          poll_type: @$route.query.poll_type\n          query: @$route.query.q\n          subgroups: @$route.query.subgroups\n          per: @per\n\n    openSelectPollTypeModal: ->\n      EventBus.$emit 'openModal',\n                     component: 'PollCommonStartForm'\n                     props:\n                       group: @group\n                       isModal: true\n\n    findRecords: ->\n      groupIds = switch (@$route.query.subgroups || 'mine')\n        when 'all' then @group.organisationIds()\n        when 'none' then [@group.id]\n        when 'mine' then uniq([@group.id].concat(intersection(@group.organisationIds(), Session.user().groupIds())))\n\n      chain = Records.polls.collection.chain()\n      chain = chain.find(groupId: {$in: groupIds})\n      chain = chain.find(discardedAt: null)\n\n      switch @$route.query.status\n        when 'active'\n          chain = chain.find({'closedAt': null})\n        when 'closed'\n          chain = chain.find({'closedAt': {$ne: null}})\n        when 'vote'\n          chain = chain.find({'closedAt': null}).where((p) -> p.iCanVote() && !p.iHaveVoted())\n\n      if @$route.query.poll_type\n        chain = chain.find({'pollType': @$route.query.poll_type})\n\n      if @$route.query.q\n        chain = chain.where (poll) =>\n          some [poll.title, poll.details], (field) =>\n            every @$route.query.q.split(' '), (frag) -> RegExp(frag, \"i\").test(field)\n\n      if @loader.pageWindow[@page]\n        if @page == 1\n          chain = chain.find(createdAt: {$gte: @loader.pageWindow[@page][0]})\n        else\n          chain = chain.find(createdAt: {$jbetween: @loader.pageWindow[@page]})\n        @polls = chain.simplesort('createdAt', true).data()\n      else\n        @polls = []\n\n  watch:\n    '$route.query.q': ->\n      @initLoader().fetch(@page)\n    '$route.query.status': ->\n      @initLoader().fetch(@page)\n    '$route.query.poll_type': ->\n      @initLoader().fetch(@page)\n    '$route.query.subgroups': ->\n      @initLoader().fetch(@page)\n    '$route.query.page': ->\n      @loader.fetch(@page)\n\n  computed:\n    totalPages: ->\n      Math.ceil(parseFloat(@loader.total) / parseFloat(@per))\n    canStartPoll: -> AbilityService.canStartPoll(@group)\n    page:\n      get: -> parseInt(@$route.query.page) || 1\n      set: (val) ->\n        @$router.replace({query: Object.assign({}, @$route.query, {page: val})}) \n"],"sourceRoot":""}]}