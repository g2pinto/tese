{"remainingRequest":"/home/gustavo/Documents/tese/loomio/vue/node_modules/babel-loader/lib/index.js!/home/gustavo/Documents/tese/loomio/vue/node_modules/vue-cli-plugin-coffee/node_modules/coffee-loader/dist/cjs.js!/home/gustavo/Documents/tese/loomio/vue/src/shared/models/discussion_model.coffee","dependencies":[{"path":"/home/gustavo/Documents/tese/loomio/vue/src/shared/models/discussion_model.coffee","mtime":1706724415808},{"path":"/home/gustavo/Documents/tese/loomio/vue/.babelrc","mtime":1706724415792},{"path":"/home/gustavo/Documents/tese/loomio/vue/node_modules/vue-cli-plugin-coffee/node_modules/cache-loader/dist/cjs.js","mtime":1706724497848},{"path":"/home/gustavo/Documents/tese/loomio/vue/node_modules/babel-loader/lib/index.js","mtime":1706724500796},{"path":"/home/gustavo/Documents/tese/loomio/vue/node_modules/vue-cli-plugin-coffee/node_modules/coffee-loader/dist/cjs.js","mtime":1706724497848}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/gustavo/Documents/tese/loomio/vue/src/shared/models/discussion_model.coffee"],"names":[],"mappings":"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","sourcesContent":["import BaseModel        from '@/shared/record_store/base_model'\nimport AppConfig        from '@/shared/services/app_config'\nimport Session          from '@/shared/services/session'\nimport RangeSet         from '@/shared/services/range_set'\nimport HasDocuments     from '@/shared/mixins/has_documents'\nimport HasTranslations  from '@/shared/mixins/has_translations'\nimport { isAfter } from 'date-fns'\nimport dateIsEqual from 'date-fns/isEqual'\nimport { map, compact, flatten, isEqual, isEmpty, filter, some, head, last, sortBy, find, min, max, isArray, throttle, without } from 'lodash'\nimport I18n from '@/i18n'\n\nexport default class DiscussionModel extends BaseModel\n  @singular: 'discussion'\n  @plural: 'discussions'\n  @uniqueIndices: ['id', 'key']\n  @indices: ['groupId', 'authorId']\n\n  afterConstruction: ->\n    @private = @privateDefaultValue() if @isNew()\n    HasDocuments.apply @, showTitle: true\n    HasTranslations.apply @\n\n  defaultValues: ->\n    id: null\n    key: null\n    private: true\n    lastItemAt: null\n    title: ''\n    description: ''\n    descriptionFormat: 'html'\n    forkedEventIds: []\n    ranges: []\n    readRanges: []\n    newestFirst: false\n    files: []\n    imageFiles: []\n    attachments: []\n    linkPreviews: []\n    tags: []\n    recipientMessage: null\n    recipientAudience: null\n    recipientUserIds: []\n    recipientChatbotIds: []\n    recipientEmails: []\n    notifyRecipients: true\n    groupId: null\n    usersNotifiedCount: null\n    discussionReaderUserId: null\n    pinnedAt: null\n    template: false\n\n  cloneTemplate: ->\n    clone = @clone()\n    clone.id = null\n    clone.key = null\n    clone.title = I18n.t('templates.copy_of_title', {title: clone.title})\n    clone.sourceTemplateId = @id\n    clone.authorId = Session.user().id\n    clone.pinnedAt = null\n    clone.forkedEventIds = []\n    clone.groupId = null\n    clone.closedAt = null\n    clone.createdAt = null\n    clone.updatedAt = null\n    clone.template = false\n    clone\n\n  audienceValues: ->\n    name: @group().name\n\n  privateDefaultValue: =>\n    @group().discussionPrivacyOptions != 'public_only'\n\n  relationships: ->\n    @hasMany 'polls', sortBy: 'createdAt', sortDesc: true, find: {discardedAt: null}\n    @belongsTo 'group'\n    @belongsTo 'author', from: 'users'\n    @hasMany 'discussionReaders'\n\n    # @belongsTo 'createdEvent', from: 'events'\n    # @belongsTo 'forkedEvent', from: 'events'\n\n  discussion: -> @\n  \n  sourceTemplate: ->\n    @recordStore.discussions.find(@sourceTemplateId)\n\n  tags: ->\n    @recordStore.tags.collection.chain().find(id: {$in: @tagIds}).simplesort('priority').data()\n\n  members: ->\n    @recordStore.users.find(@group().memberIds().concat(map(@discussionReaders(), 'userId')))\n\n  membersInclude: (user) ->\n    (@inviterId && !@revokedAt && Session.user().id == user.id) ||\n    @group().membersInclude(user)\n\n  adminsInclude: (user) ->\n    @authorId == user.id ||\n    (@inviterId && @admin && !@revokedAt && AppConfig.currentUserId == user.id) ||\n    @group().adminsInclude(user)\n\n  # known current participants for quick mentioning\n  participantIds: ->\n    compact flatten(\n      map(@recordStore.comments.find(discussionId: @id), 'authorId'),\n      map(@recordStore.polls.find(discussionId: @id), (p) -> p.participantIds()),\n      [@authorId]\n    )\n\n  bestNamedId: ->\n    ((@id && @) || (@groupId && @group()) || {namedId: ->}).namedId()\n\n  createdEvent: ->\n    res = @recordStore.events.find(kind: 'new_discussion', eventableId: @id)\n    res[0] unless isEmpty(res)\n\n  forkedEvent: ->\n    res = @recordStore.events.find(kind: 'discussion_forked', eventableId: @id)\n    res[0] unless isEmpty(res)\n\n  reactions: ->\n    @recordStore.reactions.find(reactableId: @id, reactableType: \"Discussion\")\n\n  translationOptions: ->\n    title: @title\n    groupName: @groupName()\n\n  authorName: ->\n    @author().nameWithTitle(@group())\n\n  isBlank: ->\n    @description == '' or @description == null or @description == '<p></p>'\n\n  groupName: ->\n    (@group() || {}).name\n\n  activePolls: ->\n    filter @polls(), (poll) ->\n      poll.isVotable()\n\n  hasActivePoll: ->\n    some @activePolls()\n\n  hasDecision: ->\n    @hasActivePoll()\n\n  closedPolls: ->\n    filter @polls(), (poll) ->\n      !poll.isVotable()\n\n  activePoll: ->\n    head @activePolls()\n\n  isUnread: ->\n    !@isDismissed() and (!@lastReadAt? or @unreadItemsCount() > 0)\n\n  isDismissed: ->\n    @discussionReaderId? and @dismissedAt? and\n    (dateIsEqual(@dismissedAt, @lastActivityAt) or isAfter(@dismissedAt, @lastActivityAt))\n\n  hasUnreadActivity: ->\n    @isUnread() && @unreadItemsCount() > 0\n\n  membership: ->\n    @recordStore.memberships.find(userId: AppConfig.currentUserId, groupId: @groupId)[0]\n\n  volume: -> @discussionReaderVolume\n\n  saveVolume: (volume, applyToAll = false) =>\n    @processing = true\n    if applyToAll\n      @membership().saveVolume(volume).finally => @processing = false\n    else\n      @discussionReaderVolume = volume if volume?\n      @remote.patchMember(@keyOrId(), 'set_volume', { volume: @discussionReaderVolume }).finally =>\n        @processing = false\n\n  isMuted: ->\n    @volume() == 'mute'\n\n  markAsSeen: ->\n    return if @lastReadAt\n    @remote.patchMember @keyOrId(), 'mark_as_seen'\n    @update(lastReadAt: new Date)\n\n  markAsRead: (id) ->\n    return if @hasRead(id)\n    @readRanges.push([id,id])\n    @readRanges = RangeSet.reduce(@readRanges)\n    @updateReadRanges()\n\n  update: (attributes) ->\n    if isArray(@readRanges) && isArray(attributes.readRanges) && !isEqual(attributes.readRanges, @readRanges)\n      attributes.readRanges = RangeSet.reduce(@readRanges.concat(attributes.readRanges))\n    @baseUpdate(attributes)\n    @readRanges = RangeSet.intersectRanges(@readRanges, @ranges)\n\n  updateReadRanges: throttle ->\n    @remote.patchMember @keyOrId(), 'mark_as_read', ranges: RangeSet.serialize(@readRanges)\n  , 2000\n\n  hasRead: (id) ->\n    RangeSet.includesValue(@readRanges, id)\n\n  unreadItemsCount: ->\n    @itemsCount - @readItemsCount()\n\n  readItemsCount: ->\n    RangeSet.length(@readRanges)\n\n  firstSequenceId: ->\n    (head(@ranges) || [])[0]\n\n  lastSequenceId: ->\n    (last(@ranges) || [])[1]\n\n  lastReadSequenceId: ->\n    (last(@readRanges) || [])[1]\n\n  firstUnreadSequenceId: ->\n    (@unreadRanges()[0] || [])[0]\n\n  readSequenceIds: ->\n    RangeSet.rangesToArray(@readRanges)\n\n  unreadRanges: ->\n    RangeSet.subtractRanges(@ranges, @readRanges)\n\n  unreadSequenceIds: ->\n    RangeSet.rangesToArray(@unreadRanges())\n\n  dismiss: ->\n    @update(dismissedAt: new Date)\n    @processing = true\n    @remote.patchMember(@keyOrId(), 'dismiss').finally => @processing = false\n\n  recall: ->\n    @update(dismissedAt: null)\n    @processing = true\n    @remote.patchMember(@keyOrId(), 'recall').finally => @processing = false\n\n  move: =>\n    @processing = true\n    @remote.patchMember(@keyOrId(), 'move', { group_id: @groupId }).finally => @processing = false\n\n  savePin: =>\n    @processing = true\n    @remote.patchMember(@keyOrId(), 'pin').finally => @processing = false\n\n  saveUnpin: =>\n    @processing = true\n    @remote.patchMember(@keyOrId(), 'unpin').finally => @processing = false\n\n  close: =>\n    @processing = true\n    @remote.patchMember(@keyOrId(), 'close').finally => @processing = false\n\n  reopen: =>\n    @processing = true\n    @remote.patchMember(@keyOrId(), 'reopen').finally => @processing = false\n\n  fork: =>\n    @processing = true\n    @remote.post('fork', @serialize()).finally => @processing = false\n\n  moveComments: =>\n    @processing = true\n    @remote.patchMember(@keyOrId(), 'move_comments', { forked_event_ids: @forkedEventIds }).finally => @processing = false\n\n  fetchUsersNotifiedCount: ->\n    @recordStore.fetch\n      path: 'announcements/users_notified_count'\n      params:\n        discussion_id: @id\n    .then (data) =>\n      @usersNotifiedCount = data.count\n\n  forkedEvents: ->\n    sortBy(@recordStore.events.find(@forkedEventIds), 'sequenceId')\n\n  forkTarget: ->\n    @forkedEvents()[0].model() if some @forkedEvents()\n"],"sourceRoot":""}]}