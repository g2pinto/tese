{"remainingRequest":"/home/gustavo/Documents/tese/loomio/vue/node_modules/babel-loader/lib/index.js!/home/gustavo/Documents/tese/loomio/vue/node_modules/vue-cli-plugin-coffee/node_modules/coffee-loader/dist/cjs.js!/home/gustavo/Documents/tese/loomio/vue/src/shared/record_store/base_records_interface.coffee","dependencies":[{"path":"/home/gustavo/Documents/tese/loomio/vue/src/shared/record_store/base_records_interface.coffee","mtime":1706724415812},{"path":"/home/gustavo/Documents/tese/loomio/vue/.babelrc","mtime":1706724415792},{"path":"/home/gustavo/Documents/tese/loomio/vue/node_modules/vue-cli-plugin-coffee/node_modules/cache-loader/dist/cjs.js","mtime":1706724497848},{"path":"/home/gustavo/Documents/tese/loomio/vue/node_modules/babel-loader/lib/index.js","mtime":1706724500796},{"path":"/home/gustavo/Documents/tese/loomio/vue/node_modules/vue-cli-plugin-coffee/node_modules/coffee-loader/dist/cjs.js","mtime":1706724497848}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF91bmlxIGZyb20gImxvZGFzaC91bmlxIjsKaW1wb3J0IF9kaWZmZXJlbmNlIGZyb20gImxvZGFzaC9kaWZmZXJlbmNlIjsKaW1wb3J0IF9kZWJvdW5jZSBmcm9tICJsb2Rhc2gvZGVib3VuY2UiOwppbXBvcnQgX2lzQXJyYXkgZnJvbSAibG9kYXNoL2lzQXJyYXkiOwppbXBvcnQgX2lzU3RyaW5nIGZyb20gImxvZGFzaC9pc1N0cmluZyI7CmltcG9ydCBfaXNOdW1iZXIgZnJvbSAibG9kYXNoL2lzTnVtYmVyIjsKaW1wb3J0IF9rZXlzIGZyb20gImxvZGFzaC9rZXlzIjsKaW1wb3J0IF9lYWNoIGZyb20gImxvZGFzaC9lYWNoIjsKdmFyIEJhc2VSZWNvcmRzSW50ZXJmYWNlOwppbXBvcnQgUmVzdGZ1bENsaWVudCBmcm9tICcuL3Jlc3RmdWxfY2xpZW50JzsKaW1wb3J0IHV0aWxzIGZyb20gJ0Avc2hhcmVkL3JlY29yZF9zdG9yZS91dGlscyc7CmltcG9ydCBWdWUgZnJvbSAndnVlJzsKZXhwb3J0IGRlZmF1bHQgQmFzZVJlY29yZHNJbnRlcmZhY2UgPSBmdW5jdGlvbiAoKSB7CiAgY2xhc3MgQmFzZVJlY29yZHNJbnRlcmZhY2UgewogICAgYWRkTWlzc2luZyhpZCkgewogICAgICB0aGlzLm1pc3NpbmdJZHMucHVzaChpZCk7CiAgICAgIHJldHVybiB0aGlzLmZldGNoTWlzc2luZygpOwogICAgfQoKICAgIGZldGNoQW55TWlzc2luZ0J5SWQoYWxsSWRzKSB7CiAgICAgIHZhciBwcmVzZW50SWRzOwogICAgICBwcmVzZW50SWRzID0gdGhpcy5jb2xsZWN0aW9uLmNoYWluKCkuZmluZCh7CiAgICAgICAgaWQ6IHsKICAgICAgICAgICRpbjogYWxsSWRzCiAgICAgICAgfQogICAgICB9KS5kYXRhKCkubWFwKGZ1bmN0aW9uIChyKSB7CiAgICAgICAgcmV0dXJuIHIuaWQ7CiAgICAgIH0pOwogICAgICB0aGlzLm1pc3NpbmdJZHMgPSBfdW5pcSh0aGlzLm1pc3NpbmdJZHMuY29uY2F0KF9kaWZmZXJlbmNlKGFsbElkcywgcHJlc2VudElkcykpKTsKICAgICAgcmV0dXJuIHRoaXMuZmV0Y2hNaXNzaW5nKCk7CiAgICB9CgogICAgbnVsbE1vZGVsKCkgewogICAgICByZXR1cm4gbnVsbDsKICAgIH0KCiAgICBjb25zdHJ1Y3RvcihyZWNvcmRTdG9yZSkgewogICAgICB0aGlzLmJhc2VDb25zdHJ1Y3RvcihyZWNvcmRTdG9yZSk7CiAgICB9CgogICAgYmFzZUNvbnN0cnVjdG9yKHJlY29yZFN0b3JlKSB7CiAgICAgIHRoaXMucmVjb3JkU3RvcmUgPSByZWNvcmRTdG9yZTsKICAgICAgdGhpcy5jb2xsZWN0aW9uID0gdGhpcy5yZWNvcmRTdG9yZS5kYi5hZGRDb2xsZWN0aW9uKHRoaXMuY29sbGVjdGlvbk5hbWUgfHwgdGhpcy5tb2RlbC5wbHVyYWwsIHsKICAgICAgICBpbmRpY2VzOiB0aGlzLm1vZGVsLmluZGljZXMKICAgICAgfSk7CgogICAgICBfZWFjaCh0aGlzLm1vZGVsLnVuaXF1ZUluZGljZXMsIG5hbWUgPT4gewogICAgICAgIHJldHVybiB0aGlzLmNvbGxlY3Rpb24uZW5zdXJlVW5pcXVlSW5kZXgobmFtZSk7CiAgICAgIH0pOwoKICAgICAgdGhpcy5yZW1vdGUgPSBuZXcgUmVzdGZ1bENsaWVudCh0aGlzLmFwaUVuZFBvaW50IHx8IHRoaXMubW9kZWwucGx1cmFsKTsKCiAgICAgIHRoaXMucmVtb3RlLm9uU3VjY2VzcyA9IGRhdGEgPT4gewogICAgICAgIHRoaXMucmVjb3JkU3RvcmUuaW1wb3J0SlNPTihkYXRhKTsKICAgICAgICByZXR1cm4gZGF0YTsKICAgICAgfTsKCiAgICAgIHJldHVybiB0aGlzLnJlbW90ZS5vblVwbG9hZFN1Y2Nlc3MgPSBkYXRhID0+IHsKICAgICAgICB0aGlzLnJlY29yZFN0b3JlLmltcG9ydEpTT04oZGF0YSk7CiAgICAgICAgcmV0dXJuIGRhdGE7CiAgICAgIH07CiAgICB9CgogICAgYWxsKCkgewogICAgICByZXR1cm4gdGhpcy5jb2xsZWN0aW9uLmRhdGE7CiAgICB9CgogICAgYnVpbGQoKSB7CiAgICAgIGxldCBhdHRyaWJ1dGVzID0gYXJndW1lbnRzLmxlbmd0aCA+IDAgJiYgYXJndW1lbnRzWzBdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMF0gOiB7fTsKICAgICAgdmFyIHJlY29yZDsKICAgICAgcmVjb3JkID0gbmV3IHRoaXMubW9kZWwodGhpcywgYXR0cmlidXRlcyk7CiAgICAgIHJldHVybiBWdWUub2JzZXJ2YWJsZShyZWNvcmQpOwogICAgfQoKICAgIGNyZWF0ZSgpIHsKICAgICAgbGV0IGF0dHJpYnV0ZXMgPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6IHt9OwogICAgICB2YXIgcmVjb3JkOwogICAgICByZWNvcmQgPSB0aGlzLmJ1aWxkKGF0dHJpYnV0ZXMpOwogICAgICB0aGlzLmNvbGxlY3Rpb24uaW5zZXJ0KHJlY29yZCk7CiAgICAgIHJldHVybiByZWNvcmQ7CiAgICB9CgogICAgZmV0Y2goYXJncykgewogICAgICByZXR1cm4gdGhpcy5yZW1vdGUuZmV0Y2goYXJncyk7CiAgICB9CgogICAgaW1wb3J0UmVjb3JkKGF0dHJpYnV0ZXMpIHsKICAgICAgdmFyIHJlY29yZDsKCiAgICAgIGlmIChhdHRyaWJ1dGVzLmtleSAhPSBudWxsKSB7CiAgICAgICAgcmVjb3JkID0gdGhpcy5maW5kKGF0dHJpYnV0ZXMua2V5KTsKICAgICAgfQoKICAgICAgaWYgKGF0dHJpYnV0ZXMuaWQgIT0gbnVsbCAmJiByZWNvcmQgPT0gbnVsbCkgewogICAgICAgIHJlY29yZCA9IHRoaXMuZmluZChhdHRyaWJ1dGVzLmlkKTsKICAgICAgfQoKICAgICAgaWYgKHJlY29yZCkgewogICAgICAgIHJlY29yZC51cGRhdGUoYXR0cmlidXRlcyk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgcmVjb3JkID0gdGhpcy5jcmVhdGUoYXR0cmlidXRlcyk7CiAgICAgIH0KCiAgICAgIHJldHVybiByZWNvcmQ7CiAgICB9CgogICAgZmluZE9yRmV0Y2hCeUlkKGlkKSB7CiAgICAgIGxldCBwYXJhbXMgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6IHt9OwogICAgICB2YXIgcmVjb3JkOwogICAgICByZWNvcmQgPSB0aGlzLmZpbmQoaWQpOwoKICAgICAgaWYgKHJlY29yZCkgewogICAgICAgIHRoaXMucmVtb3RlLmZldGNoQnlJZChpZCwgcGFyYW1zKTsKICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHJlY29yZCk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgcmV0dXJuIHRoaXMucmVtb3RlLmZldGNoQnlJZChpZCwgcGFyYW1zKS50aGVuKGRhdGEgPT4gewogICAgICAgICAgcmV0dXJuIHRoaXMuZmluZChpZCk7CiAgICAgICAgfSk7CiAgICAgIH0KICAgIH0KCiAgICBmaW5kKHEpIHsKICAgICAgdmFyIGNoYWluOwoKICAgICAgaWYgKHEgPT09IG51bGwgfHwgcSA9PT0gdm9pZCAwKSB7CiAgICAgICAgcmV0dXJuIHZvaWQgMDsKICAgICAgfSBlbHNlIGlmIChfaXNOdW1iZXIocSkpIHsKICAgICAgICByZXR1cm4gdGhpcy5maW5kQnlJZChxKTsKICAgICAgfSBlbHNlIGlmIChfaXNTdHJpbmcocSkpIHsKICAgICAgICByZXR1cm4gdGhpcy5maW5kQnlLZXkocSk7CiAgICAgIH0gZWxzZSBpZiAoX2lzQXJyYXkocSkpIHsKICAgICAgICBpZiAocS5sZW5ndGggPT09IDApIHsKICAgICAgICAgIHJldHVybiBbXTsKICAgICAgICB9IGVsc2UgaWYgKF9pc1N0cmluZyhxWzBdKSkgewogICAgICAgICAgcmV0dXJuIHRoaXMuZmluZEJ5S2V5cyhxKTsKICAgICAgICB9IGVsc2UgaWYgKF9pc051bWJlcihxWzBdKSkgewogICAgICAgICAgcmV0dXJuIHRoaXMuZmluZEJ5SWRzKHEpOwogICAgICAgIH0KICAgICAgfSBlbHNlIHsKICAgICAgICBjaGFpbiA9IHRoaXMuY29sbGVjdGlvbi5jaGFpbigpOwoKICAgICAgICBfZWFjaChfa2V5cyhxKSwgZnVuY3Rpb24gKGtleSkgewogICAgICAgICAgY2hhaW4uZmluZCh7CiAgICAgICAgICAgIFtgJHtrZXl9YF06IHFba2V5XQogICAgICAgICAgfSk7CiAgICAgICAgICByZXR1cm4gdHJ1ZTsKICAgICAgICB9KTsKCiAgICAgICAgcmV0dXJuIGNoYWluLmRhdGEoKTsKICAgICAgfQogICAgfQoKICAgIGZpbmRPck51bGwocSkgewogICAgICB2YXIgcmVzOwogICAgICByZXMgPSB0aGlzLmZpbmQocSk7CgogICAgICBpZiAoX2lzQXJyYXkocmVzKSAmJiByZXMubGVuZ3RoID09PSAwKSB7CiAgICAgICAgcmV0dXJuIG51bGw7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgcmV0dXJuIHJlczsKICAgICAgfQogICAgfQoKICAgIGZpbmRCeUlkKGlkKSB7CiAgICAgIHJldHVybiB0aGlzLmNvbGxlY3Rpb24uYnkoJ2lkJywgaWQpOwogICAgfQoKICAgIGZpbmRCeUtleShrZXkpIHsKICAgICAgaWYgKHRoaXMuY29sbGVjdGlvbi5jb25zdHJhaW50cy51bmlxdWVbJ2tleSddICE9IG51bGwpIHsKICAgICAgICByZXR1cm4gdGhpcy5jb2xsZWN0aW9uLmJ5KCdrZXknLCBrZXkpOwogICAgICB9IGVsc2UgewogICAgICAgIHJldHVybiB0aGlzLmNvbGxlY3Rpb24uZmluZE9uZSh7CiAgICAgICAgICBrZXk6IGtleQogICAgICAgIH0pOwogICAgICB9CiAgICB9CgogICAgZmluZEJ5SWRzKGlkcykgewogICAgICByZXR1cm4gdGhpcy5jb2xsZWN0aW9uLmZpbmQoewogICAgICAgIGlkOiB7CiAgICAgICAgICAnJGluJzogaWRzCiAgICAgICAgfQogICAgICB9KTsKICAgIH0KCiAgICBmaW5kQnlLZXlzKGtleXMpIHsKICAgICAgcmV0dXJuIHRoaXMuY29sbGVjdGlvbi5maW5kKHsKICAgICAgICBrZXk6IHsKICAgICAgICAgICckaW4nOiBrZXlzCiAgICAgICAgfQogICAgICB9KTsKICAgIH0KCiAgfQoKICA7CiAgQmFzZVJlY29yZHNJbnRlcmZhY2UucHJvdG90eXBlLnZpZXdzID0gW107CiAgQmFzZVJlY29yZHNJbnRlcmZhY2UucHJvdG90eXBlLm1vZGVsID0gJ3VuZGVmaW5lZE1vZGVsJzsKICBCYXNlUmVjb3Jkc0ludGVyZmFjZS5wcm90b3R5cGUubWlzc2luZ0lkcyA9IFtdOwogIEJhc2VSZWNvcmRzSW50ZXJmYWNlLnByb3RvdHlwZS5mZXRjaGVkSWRzID0gW107CiAgQmFzZVJlY29yZHNJbnRlcmZhY2UucHJvdG90eXBlLmZldGNoTWlzc2luZyA9IF9kZWJvdW5jZShmdW5jdGlvbiAoKSB7CiAgICB2YXIgeGlkczsKICAgIHhpZHMgPSBfZGlmZmVyZW5jZSh0aGlzLm1pc3NpbmdJZHMsIHRoaXMuZmV0Y2hlZElkcykuam9pbigneCcpOwoKICAgIGlmICh4aWRzLmxlbmd0aCA9PT0gMCkgewogICAgICByZXR1cm47CiAgICB9CgogICAgdGhpcy5mZXRjaCh7CiAgICAgIHBhdGg6ICcnLAogICAgICBwYXJhbXM6IHsKICAgICAgICB4aWRzOiB4aWRzCiAgICAgIH0KICAgIH0pOwogICAgdGhpcy5mZXRjaGVkSWRzID0gX3VuaXEodGhpcy5mZXRjaGVkSWRzLmNvbmNhdCh0aGlzLm1pc3NpbmdJZHMpKTsKICAgIHJldHVybiB0aGlzLm1pc3NpbmdJZHMgPSBbXTsKICB9LCA1MDApOyAvLyBvdmVycmlkZSB0aGlzIGlmIHlvdXIgYXBpRW5kUG9pbnQgaXMgbm90IHRoZSBtb2RlbC5wbHVyYWwKCiAgQmFzZVJlY29yZHNJbnRlcmZhY2UucHJvdG90eXBlLmFwaUVuZFBvaW50ID0gbnVsbDsKICByZXR1cm4gQmFzZVJlY29yZHNJbnRlcmZhY2U7Cn0uY2FsbCh0aGlzKTs="},{"version":3,"sources":["/home/gustavo/Documents/tese/loomio/vue/src/shared/record_store/base_records_interface.coffee"],"names":[],"mappings":"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","sourcesContent":["import RestfulClient from './restful_client'\nimport utils         from '@/shared/record_store/utils'\nimport {pick, each, merge, keys, isNumber, isString, isArray, debounce, difference, uniq} from 'lodash'\nimport Vue           from 'vue'\n\nexport default class BaseRecordsInterface\n  views: []\n  model: 'undefinedModel'\n\n  missingIds: []\n  fetchedIds: []\n\n  fetchMissing: debounce ->\n    xids = difference(@missingIds, @fetchedIds).join('x')\n    return if xids.length == 0\n\n    @fetch\n      path: ''\n      params:\n        xids: xids\n\n    @fetchedIds = uniq @fetchedIds.concat(@missingIds)\n    @missingIds = []\n  , 500\n\n  addMissing: (id) ->\n    @missingIds.push(id)\n    @fetchMissing()\n\n  fetchAnyMissingById: (allIds) ->\n    presentIds = @collection.chain().find(id: {$in: allIds}).data().map((r) -> r.id)\n    @missingIds = uniq @missingIds.concat(difference(allIds, presentIds))\n    @fetchMissing()\n\n  nullModel: -> null\n  # override this if your apiEndPoint is not the model.plural\n  apiEndPoint: null\n\n  constructor: (recordStore) ->\n    @baseConstructor recordStore\n\n  baseConstructor: (recordStore) ->\n    @recordStore = recordStore\n    @collection = @recordStore.db.addCollection((@collectionName || @model.plural), {indices: @model.indices})\n    each @model.uniqueIndices, (name) =>\n      @collection.ensureUniqueIndex(name)\n\n    @remote = new RestfulClient(@apiEndPoint or @model.plural)\n\n    @remote.onSuccess = (data) =>\n      @recordStore.importJSON(data)\n      data\n\n    @remote.onUploadSuccess = (data) =>\n      @recordStore.importJSON(data)\n      data\n\n  all: ->\n    @collection.data\n\n  build: (attributes = {}) ->\n    record = new @model @, attributes\n    Vue.observable(record)\n\n  create: (attributes = {}) ->\n    record = @build(attributes)\n    @collection.insert(record)\n    record\n\n  fetch: (args) ->\n    @remote.fetch(args)\n\n  importRecord: (attributes) ->\n    record = @find(attributes.key) if attributes.key?\n    record = @find(attributes.id) if attributes.id? and !record?\n    if record\n      record.update(attributes)\n    else\n      record = @create(attributes)\n    record\n\n  findOrFetchById: (id, params = {}) ->\n    record = @find(id)\n    if record\n      @remote.fetchById(id, params)\n      Promise.resolve(record)\n    else\n      @remote.fetchById(id, params).then (data) =>\n        @find(id)\n\n  find: (q) ->\n    if q == null or q == undefined\n      undefined\n    else if isNumber(q)\n      @findById(q)\n    else if isString(q)\n      @findByKey(q)\n    else if isArray(q)\n      if q.length == 0\n        []\n      else if isString(q[0])\n        @findByKeys(q)\n      else if isNumber(q[0])\n        @findByIds(q)\n    else\n      chain = @collection.chain()\n      each keys(q), (key) ->\n        chain.find(\"#{key}\": q[key])\n        true\n      chain.data()\n\n  findOrNull: (q) ->\n    res = @find(q)\n    if isArray(res) and res.length == 0\n      null\n    else\n      res\n\n  findById: (id) ->\n    @collection.by('id', id)\n\n  findByKey: (key) ->\n    if @collection.constraints.unique['key']?\n      @collection.by('key', key)\n    else\n      @collection.findOne(key: key)\n\n  findByIds: (ids) ->\n    @collection.find(id: {'$in': ids})\n\n  findByKeys: (keys) ->\n    @collection.find(key: {'$in': keys})\n"],"sourceRoot":""}]}