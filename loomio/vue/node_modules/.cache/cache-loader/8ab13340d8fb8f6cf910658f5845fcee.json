{"remainingRequest":"/home/gustavo/Documents/tese/loomio/vue/node_modules/babel-loader/lib/index.js!/home/gustavo/Documents/tese/loomio/vue/node_modules/vue-cli-plugin-coffee/node_modules/coffee-loader/dist/cjs.js!/home/gustavo/Documents/tese/loomio/vue/src/shared/models/comment_model.coffee","dependencies":[{"path":"/home/gustavo/Documents/tese/loomio/vue/src/shared/models/comment_model.coffee","mtime":1706724415808},{"path":"/home/gustavo/Documents/tese/loomio/vue/.babelrc","mtime":1706724415792},{"path":"/home/gustavo/Documents/tese/loomio/vue/node_modules/vue-cli-plugin-coffee/node_modules/cache-loader/dist/cjs.js","mtime":1706724497848},{"path":"/home/gustavo/Documents/tese/loomio/vue/node_modules/babel-loader/lib/index.js","mtime":1706724500796},{"path":"/home/gustavo/Documents/tese/loomio/vue/node_modules/vue-cli-plugin-coffee/node_modules/coffee-loader/dist/cjs.js","mtime":1706724497848}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9pbnZva2VNYXAgZnJvbSAibG9kYXNoL2ludm9rZU1hcCI7CmltcG9ydCBfbWFwIGZyb20gImxvZGFzaC9tYXAiOwppbXBvcnQgX2NhcGl0YWxpemUgZnJvbSAibG9kYXNoL2NhcGl0YWxpemUiOwp2YXIgQ29tbWVudE1vZGVsOwppbXBvcnQgQmFzZU1vZGVsIGZyb20gJ0Avc2hhcmVkL3JlY29yZF9zdG9yZS9iYXNlX21vZGVsJzsKaW1wb3J0IEFwcENvbmZpZyBmcm9tICdAL3NoYXJlZC9zZXJ2aWNlcy9hcHBfY29uZmlnJzsKaW1wb3J0IEhhc0RvY3VtZW50cyBmcm9tICdAL3NoYXJlZC9taXhpbnMvaGFzX2RvY3VtZW50cyc7CmltcG9ydCBSZWNvcmRTdG9yZSBmcm9tICdAL3NoYXJlZC9yZWNvcmRfc3RvcmUvcmVjb3JkX3N0b3JlJzsKaW1wb3J0IEhhc1RyYW5zbGF0aW9ucyBmcm9tICdAL3NoYXJlZC9taXhpbnMvaGFzX3RyYW5zbGF0aW9ucyc7CmV4cG9ydCBkZWZhdWx0IENvbW1lbnRNb2RlbCA9IGZ1bmN0aW9uICgpIHsKICBjbGFzcyBDb21tZW50TW9kZWwgZXh0ZW5kcyBCYXNlTW9kZWwgewogICAgYWZ0ZXJDb25zdHJ1Y3Rpb24oKSB7CiAgICAgIEhhc0RvY3VtZW50cy5hcHBseSh0aGlzKTsKICAgICAgcmV0dXJuIEhhc1RyYW5zbGF0aW9ucy5hcHBseSh0aGlzKTsKICAgIH0KCiAgICBkZWZhdWx0VmFsdWVzKCkgewogICAgICByZXR1cm4gewogICAgICAgIGRpc2N1c3Npb25JZDogbnVsbCwKICAgICAgICBmaWxlczogW10sCiAgICAgICAgaW1hZ2VGaWxlczogW10sCiAgICAgICAgYXR0YWNobWVudHM6IFtdLAogICAgICAgIGxpbmtQcmV2aWV3czogW10sCiAgICAgICAgYm9keTogJycsCiAgICAgICAgYm9keUZvcm1hdDogJ2h0bWwnLAogICAgICAgIG1lbnRpb25lZFVzZXJuYW1lczogW10KICAgICAgfTsKICAgIH0KCiAgICByZWxhdGlvbnNoaXBzKCkgewogICAgICB0aGlzLmJlbG9uZ3NUbygnYXV0aG9yJywgewogICAgICAgIGZyb206ICd1c2VycycKICAgICAgfSk7CiAgICAgIHJldHVybiB0aGlzLmJlbG9uZ3NUbygnZGlzY3Vzc2lvbicpOwogICAgfQoKICAgIGNyZWF0ZWRFdmVudCgpIHsKICAgICAgcmV0dXJuIHRoaXMucmVjb3JkU3RvcmUuZXZlbnRzLmZpbmQoewogICAgICAgIGtpbmQ6ICJuZXdfY29tbWVudCIsCiAgICAgICAgZXZlbnRhYmxlSWQ6IHRoaXMuaWQKICAgICAgfSlbMF07CiAgICB9CgogICAgcmVhY3Rpb25zKCkgewogICAgICByZXR1cm4gdGhpcy5yZWNvcmRTdG9yZS5yZWFjdGlvbnMuZmluZCh7CiAgICAgICAgcmVhY3RhYmxlSWQ6IHRoaXMuaWQsCiAgICAgICAgcmVhY3RhYmxlVHlwZTogX2NhcGl0YWxpemUodGhpcy5jb25zdHJ1Y3Rvci5zaW5ndWxhcikKICAgICAgfSk7CiAgICB9CgogICAgZ3JvdXAoKSB7CiAgICAgIHJldHVybiB0aGlzLmRpc2N1c3Npb24oKS5ncm91cCgpOwogICAgfQoKICAgIG1lbWJlcklkcygpIHsKICAgICAgcmV0dXJuIHRoaXMuZGlzY3Vzc2lvbigpLm1lbWJlcklkcygpOwogICAgfSAvLyBpc01vc3RSZWNlbnQ6IC0+CiAgICAvLyAgIGxhc3QoQGRpc2N1c3Npb24oKS5jb21tZW50cygpKSA9PSBACgoKICAgIHBhcnRpY2lwYW50SWRzKCkgewogICAgICByZXR1cm4gdGhpcy5kaXNjdXNzaW9uKCkucGFydGljaXBhbnRJZHMoKTsKICAgIH0KCiAgICBpc1JlcGx5KCkgewogICAgICByZXR1cm4gdGhpcy5wYXJlbnRJZCAhPSBudWxsOwogICAgfQoKICAgIGlzQmxhbmsoKSB7CiAgICAgIHJldHVybiB0aGlzLmJvZHkgPT09ICcnIHx8IHRoaXMuYm9keSA9PT0gbnVsbCB8fCB0aGlzLmJvZHkgPT09ICc8cD48L3A+JzsKICAgIH0KCiAgICBwYXJlbnQoKSB7CiAgICAgIHJldHVybiB0aGlzLnJlY29yZFN0b3JlW3RoaXMucmVjb3JkU3RvcmUuZXZlbnRUeXBlTWFwW3RoaXMucGFyZW50VHlwZV1dLmZpbmQodGhpcy5wYXJlbnRJZCk7CiAgICB9CgogICAgcmVhY3RvcnMoKSB7CiAgICAgIHJldHVybiB0aGlzLnJlY29yZFN0b3JlLnVzZXJzLmZpbmQoX21hcCh0aGlzLnJlYWN0aW9ucygpLCAndXNlcklkJykpOwogICAgfQoKICAgIGF1dGhvck5hbWUoKSB7CiAgICAgIGlmICh0aGlzLmF1dGhvcigpKSB7CiAgICAgICAgcmV0dXJuIHRoaXMuYXV0aG9yKCkubmFtZVdpdGhUaXRsZSh0aGlzLmRpc2N1c3Npb24oKS5ncm91cCgpKTsKICAgICAgfQogICAgfQoKICAgIGF1dGhvclVzZXJuYW1lKCkgewogICAgICByZXR1cm4gdGhpcy5hdXRob3IoKS51c2VybmFtZTsKICAgIH0KCiAgICBhdXRob3JBdmF0YXIoKSB7CiAgICAgIHJldHVybiB0aGlzLmF1dGhvcigpLmF2YXRhck9ySW5pdGlhbHMoKTsKICAgIH0KCiAgICBiZWZvcmVEZXN0cm95KCkgewogICAgICByZXR1cm4gX2ludm9rZU1hcCh0aGlzLnJlY29yZFN0b3JlLmV2ZW50cy5maW5kKHsKICAgICAgICBraW5kOiAnbmV3X2NvbW1lbnQnLAogICAgICAgIGV2ZW50YWJsZUlkOiB0aGlzLmlkCiAgICAgIH0pLCAncmVtb3ZlJyk7CiAgICB9CgogIH0KCiAgOwogIENvbW1lbnRNb2RlbC5zaW5ndWxhciA9ICdjb21tZW50JzsKICBDb21tZW50TW9kZWwucGx1cmFsID0gJ2NvbW1lbnRzJzsKICBDb21tZW50TW9kZWwuaW5kaWNlcyA9IFsnZGlzY3Vzc2lvbklkJywgJ2F1dGhvcklkJ107CiAgQ29tbWVudE1vZGVsLnVuaXF1ZUluZGljZXMgPSBbJ2lkJ107CiAgcmV0dXJuIENvbW1lbnRNb2RlbDsKfS5jYWxsKHRoaXMpOw=="},{"version":3,"sources":["/home/gustavo/Documents/tese/loomio/vue/src/shared/models/comment_model.coffee"],"names":[],"mappings":"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","sourcesContent":["import BaseModel       from '@/shared/record_store/base_model'\nimport AppConfig       from '@/shared/services/app_config'\nimport HasDocuments    from '@/shared/mixins/has_documents'\nimport RecordStore    from '@/shared/record_store/record_store'\nimport HasTranslations from '@/shared/mixins/has_translations'\nimport {capitalize, map, last, invokeMap} from 'lodash'\n\nexport default class CommentModel extends BaseModel\n  @singular: 'comment'\n  @plural: 'comments'\n  @indices: ['discussionId', 'authorId']\n  @uniqueIndices: ['id']\n\n  afterConstruction: ->\n    HasDocuments.apply @\n    HasTranslations.apply @\n\n  defaultValues: ->\n    discussionId: null\n    files: []\n    imageFiles: []\n    attachments: []\n    linkPreviews: []\n    body: ''\n    bodyFormat: 'html'\n    mentionedUsernames: []\n\n  relationships: ->\n    @belongsTo 'author', from: 'users'\n    @belongsTo 'discussion'\n\n  createdEvent: ->\n    @recordStore.events.find(kind: \"new_comment\", eventableId: @id)[0]\n\n  reactions: ->\n    @recordStore.reactions.find\n      reactableId: @id\n      reactableType: capitalize(@constructor.singular)\n\n  group: ->\n    @discussion().group()\n\n  memberIds: ->\n    @discussion().memberIds()\n\n  # isMostRecent: ->\n  #   last(@discussion().comments()) == @\n  participantIds: ->\n    @discussion().participantIds()\n\n  isReply: ->\n    @parentId?\n\n  isBlank: ->\n    @body == '' or @body == null or @body == '<p></p>'\n\n  parent: ->\n    @recordStore[@recordStore.eventTypeMap[@parentType]].find(@parentId)\n\n  reactors: ->\n    @recordStore.users.find(map(@reactions(), 'userId'))\n\n  authorName: ->\n    @author().nameWithTitle(@discussion().group()) if @author()\n\n  authorUsername: ->\n    @author().username\n\n  authorAvatar: ->\n    @author().avatarOrInitials()\n\n  beforeDestroy: ->\n    invokeMap @recordStore.events.find(kind: 'new_comment', eventableId: @id), 'remove'\n"],"sourceRoot":""}]}