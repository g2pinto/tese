{"remainingRequest":"/home/gustavo/Documents/tese/loomio/vue/node_modules/babel-loader/lib/index.js!/home/gustavo/Documents/tese/loomio/vue/node_modules/vue-cli-plugin-coffee/node_modules/coffee-loader/dist/cjs.js!/home/gustavo/Documents/tese/loomio/vue/src/shared/record_store/restful_client.coffee","dependencies":[{"path":"/home/gustavo/Documents/tese/loomio/vue/src/shared/record_store/restful_client.coffee","mtime":1706724415812},{"path":"/home/gustavo/Documents/tese/loomio/vue/.babelrc","mtime":1706724415792},{"path":"/home/gustavo/Documents/tese/loomio/vue/node_modules/vue-cli-plugin-coffee/node_modules/cache-loader/dist/cjs.js","mtime":1706724497848},{"path":"/home/gustavo/Documents/tese/loomio/vue/node_modules/babel-loader/lib/index.js","mtime":1706724500796},{"path":"/home/gustavo/Documents/tese/loomio/vue/node_modules/vue-cli-plugin-coffee/node_modules/coffee-loader/dist/cjs.js","mtime":1706724497848}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/gustavo/Documents/tese/loomio/vue/src/shared/record_store/restful_client.coffee"],"names":[],"mappings":"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","sourcesContent":["import { encodeParams } from '@/shared/helpers/encode_params'\nimport { omitBy, snakeCase, compact, isString, defaults, pickBy, isNil, identity } from 'lodash'\n\ngetCSRF = ->\n  decodeURIComponent document.cookie.match('(^|;)\\\\s*' + 'csrftoken' + '\\\\s*=\\\\s*([^;]+)')?.pop() || ''\n\nexport default class RestfulClient\n  defaultParams: {}\n  currentUpload: null\n  apiPrefix: \"/api/v1\"\n\n  onPrepare: (request)  -> request\n  onCleanup: (response) -> response\n  onResponse: (response) =>\n    if response.ok\n      response.json().then @onSuccess\n    else\n      @onFailure(response)\n\n  onSuccess: (data) -> data\n\n  onFailure: (response) ->\n    if response.json\n      response.json().then (data) ->\n        data.status = response.status\n        data.statusText = response.statusText\n        data.ok = response.ok\n        throw data\n    else\n      throw response\n\n\n  onUploadSuccess: (response) -> response\n\n  constructor: (resourcePlural = null) ->\n    @defaultParams.unsubscribe_token = new URLSearchParams(location.search).get('unsubscribe_token')\n    @defaultParams.membership_token = new URLSearchParams(location.search).get('membership_token')\n    @defaultParams.stance_token = new URLSearchParams(location.search).get('stance_token')\n    @defaultParams.discussion_reader_token = new URLSearchParams(location.search).get('discussion_reader_token')\n    @defaultParams = omitBy(@defaultParams, isNil)\n    @processing = []\n    @resourcePlural = snakeCase(resourcePlural) if resourcePlural\n\n  buildUrl: (path, params) ->\n    path = compact([@apiPrefix, @resourcePlural, path]).join('/')\n    return path unless params?\n    path + \"?\" + encodeParams(params)\n\n  memberPath: (id, action) ->\n    compact([id, action]).join('/')\n\n  fetchById: (id, params = {}) ->\n    @getMember(id, '', params)\n\n  fetch: ({params, path}) ->\n    @get(path or '', params)\n\n  post: (path, params) ->\n    @request @buildUrl(path), 'POST', @paramsFor(params)\n\n  patch: (path, params) ->\n    @request @buildUrl(path), 'PATCH', @paramsFor(params)\n\n  delete: (path, params) ->\n    @request @buildUrl(path), 'DELETE', @paramsFor(params)\n\n  # NB: get requests place their params into the query string, rather than the request body\n  get: (path, params) ->\n    @request @buildUrl(path, @paramsFor(params)), 'GET'\n\n  request: (path, method, body = {}) ->\n    opts =\n      method: method\n      credentials: 'same-origin'\n      headers: \n        'Content-Type': 'application/json'\n        'X-CSRF-TOKEN': getCSRF()\n      body: JSON.stringify(body)\n    delete opts.body if method == 'GET'\n    @onPrepare()\n    fetch(path, opts)\n    .then(@onResponse, @onFailure)\n    .finally(@onCleanup)\n\n  postMember: (keyOrId, action, params) ->\n    @post(@memberPath(keyOrId, action), params)\n\n  patchMember: (keyOrId, action, params) ->\n    @patch(@memberPath(keyOrId, action), params)\n\n  getMember: (keyOrId, action = '', params) ->\n    @get(@memberPath(keyOrId, action), params)\n\n  create: (params) ->\n    @post('', params)\n\n  update: (id, params) ->\n    @patch(id, params)\n\n  destroy: (id, params) ->\n    @delete(id, params)\n\n  discard: (id, params) ->\n    @delete(id+'/discard', params)\n\n  undiscard: (id, params) ->\n    @post(id+'/undiscard', params)\n\n  upload: (path, file, options = {}, onProgress) ->\n    return unless file\n    new Promise (resolve, reject) =>\n      data = new FormData()\n      data.append(options.fileField     || 'file',     file)\n      data.append(options.filenameField || 'filename', file.name.replace(/[^a-z0-9_\\-\\.]/gi, '_'))\n\n      @currentUpload = new XMLHttpRequest()\n      @currentUpload.open('POST', @buildUrl(path), true)\n      @currentUpload.setRequestHeader('X-CSRF-TOKEN', getCSRF())\n      @currentUpload.responseType = 'json'\n      @currentUpload.addEventListener 'load', =>\n        if (@currentUpload.status >= 200 && @currentUpload.status < 300)\n          @currentUpload.response = JSON.parse(@currentUpload.response) if isString(@currentUpload.response)\n          @onUploadSuccess(@currentUpload.response)\n          resolve(@currentUpload.response)\n          @currentUpload = null\n      @currentUpload.upload.addEventListener('progress', onProgress) if onProgress\n      @currentUpload.addEventListener('error', reject)\n      @currentUpload.addEventListener('abort', reject)\n      @currentUpload.send(data)\n\n  abort: ->\n    @currentUpload.abort() if @currentUpload\n\n  paramsFor: (params) ->\n    defaults({}, @defaultParams, pickBy(params, (v) -> !isNil(v)))\n"],"sourceRoot":""}]}