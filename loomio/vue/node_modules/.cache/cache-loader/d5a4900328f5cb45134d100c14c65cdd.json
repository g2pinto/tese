{"remainingRequest":"/home/gustavo/Documents/tese/loomio/vue/node_modules/babel-loader/lib/index.js!/home/gustavo/Documents/tese/loomio/vue/node_modules/vue-cli-plugin-coffee/node_modules/coffee-loader/dist/cjs.js!/home/gustavo/Documents/tese/loomio/vue/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!/home/gustavo/Documents/tese/loomio/vue/src/components/user/page.vue?vue&type=script&lang=coffee&","dependencies":[{"path":"/home/gustavo/Documents/tese/loomio/vue/src/components/user/page.vue","mtime":1706724415808},{"path":"/home/gustavo/Documents/tese/loomio/vue/.babelrc","mtime":1706724415792},{"path":"/home/gustavo/Documents/tese/loomio/vue/node_modules/vue-cli-plugin-coffee/node_modules/cache-loader/dist/cjs.js","mtime":1706724497848},{"path":"/home/gustavo/Documents/tese/loomio/vue/node_modules/babel-loader/lib/index.js","mtime":1706724500796},{"path":"/home/gustavo/Documents/tese/loomio/vue/node_modules/vue-cli-plugin-coffee/node_modules/coffee-loader/dist/cjs.js","mtime":1706724497848},{"path":"/home/gustavo/Documents/tese/loomio/vue/node_modules/@vue/vue-loader-v15/lib/index.js","mtime":1706724499784}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9pc0VtcHR5IGZyb20gImxvZGFzaC9pc0VtcHR5IjsKaW1wb3J0IFJlY29yZHMgZnJvbSAnQC9zaGFyZWQvc2VydmljZXMvcmVjb3Jkcyc7CmltcG9ydCBFdmVudEJ1cyBmcm9tICdAL3NoYXJlZC9zZXJ2aWNlcy9ldmVudF9idXMnOwppbXBvcnQgQWJpbGl0eVNlcnZpY2UgZnJvbSAnQC9zaGFyZWQvc2VydmljZXMvYWJpbGl0eV9zZXJ2aWNlJzsKaW1wb3J0IHsgYXBwcm94aW1hdGUgfSBmcm9tICdAL3NoYXJlZC9oZWxwZXJzL2Zvcm1hdF90aW1lJzsKZXhwb3J0IGRlZmF1bHQgewogIGRhdGE6IGZ1bmN0aW9uICgpIHsKICAgIHJldHVybiB7CiAgICAgIHVzZXI6IHt9LAogICAgICBpc01lbWJlcnNoaXBzRmV0Y2hpbmdEb25lOiBmYWxzZSwKICAgICAgZ3JvdXBzOiBbXSwKICAgICAgY2FuQ29udGFjdFVzZXI6IGZhbHNlLAogICAgICBsb2FkaW5nR3JvdXBzRm9yRXhlY3V0aW5nOiBmYWxzZQogICAgfTsKICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uICgpIHsKICAgIHRoaXMuaW5pdCgpOwogICAgRXZlbnRCdXMuJGVtaXQoJ2N1cnJlbnRDb21wb25lbnQnLCB7CiAgICAgIHBhZ2U6ICd1c2VyUGFnZScKICAgIH0pOwogICAgcmV0dXJuIFJlY29yZHMudXNlcnMuZmluZE9yRmV0Y2hCeUlkKHRoaXMuJHJvdXRlLnBhcmFtcy5rZXkpLnRoZW4odGhpcy5pbml0LCBmdW5jdGlvbiAoZXJyb3IpIHsKICAgICAgcmV0dXJuIEV2ZW50QnVzLiRlbWl0KCdwYWdlRXJyb3InLCBlcnJvcik7CiAgICB9KTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGFwcHJveGltYXRlOiBhcHByb3hpbWF0ZSwKICAgIGluaXQ6IGZ1bmN0aW9uICgpIHsKICAgICAgaWYgKHRoaXMudXNlciA9IChSZWNvcmRzLnVzZXJzLmZpbmQodGhpcy4kcm91dGUucGFyYW1zLmtleSkgfHwgUmVjb3Jkcy51c2Vycy5maW5kKHsKICAgICAgICB1c2VybmFtZTogdGhpcy4kcm91dGUucGFyYW1zLmtleQogICAgICB9KSlbMF0pIHsKICAgICAgICBSZWNvcmRzLnJlbW90ZS5nZXQoJ3Byb2ZpbGUvY29udGFjdGFibGUnLCB7CiAgICAgICAgICB1c2VyX2lkOiB0aGlzLnVzZXIuaWQKICAgICAgICB9KS50aGVuKCgpID0+IHsKICAgICAgICAgIHJldHVybiB0aGlzLmNhbkNvbnRhY3RVc2VyID0gdHJ1ZTsKICAgICAgICB9KTsKICAgICAgICBFdmVudEJ1cy4kZW1pdCgnY3VycmVudENvbXBvbmVudCcsIHsKICAgICAgICAgIHRpdGxlOiB0aGlzLnVzZXIubmFtZSwKICAgICAgICAgIHBhZ2U6ICd1c2VyUGFnZScKICAgICAgICB9KTsKICAgICAgICB0aGlzLmxvYWRHcm91cHNGb3IodGhpcy51c2VyKTsKICAgICAgICByZXR1cm4gdGhpcy53YXRjaFJlY29yZHMoewogICAgICAgICAga2V5OiB0aGlzLnVzZXIuaWQsCiAgICAgICAgICBjb2xsZWN0aW9uczogWydncm91cHMnLCAnbWVtYmVyc2hpcHMnXSwKICAgICAgICAgIHF1ZXJ5OiBzdG9yZSA9PiB7CiAgICAgICAgICAgIHJldHVybiB0aGlzLmdyb3VwcyA9IHRoaXMudXNlci5ncm91cHMoKTsKICAgICAgICAgIH0KICAgICAgICB9KTsKICAgICAgfQogICAgfSwKICAgIGxvYWRHcm91cHNGb3I6IGZ1bmN0aW9uICh1c2VyKSB7CiAgICAgIHRoaXMubG9hZGluZ0dyb3Vwc0ZvckV4ZWN1dGluZyA9IHRydWU7CiAgICAgIHJldHVybiBSZWNvcmRzLm1lbWJlcnNoaXBzLmZldGNoQnlVc2VyKHVzZXIpLnRoZW4oKCkgPT4gewogICAgICAgIHJldHVybiB0aGlzLmxvYWRpbmdHcm91cHNGb3JFeGVjdXRpbmcgPSBmYWxzZTsKICAgICAgfSk7CiAgICB9CiAgfSwKICBjb21wdXRlZDogewogICAgaXNFbXB0eVVzZXI6IGZ1bmN0aW9uICgpIHsKICAgICAgcmV0dXJuIF9pc0VtcHR5KHRoaXMudXNlcik7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["/home/gustavo/Documents/tese/loomio/vue/src/components/user/page.vue"],"names":[],"mappings":";AACA,OAAA,OAAA,MAAA,2BAAA;AACA,OAAA,QAAA,MAAA,6BAAA;AACA,OAAA,cAAA,MAAA,mCAAA;AAGA,SAAA,WAAA,QAAA,8BAAA;AAEA,eACE;AAAA,EAAA,IAAA,EAAM,YAAA;WACJ;AAAA,MAAA,IAAA,EAAA,EAAA;AACA,MAAA,yBAAA,EADA,KAAA;AAEA,MAAA,MAAA,EAFA,EAAA;AAGA,MAAA,cAAA,EAHA,KAAA;AAIA,MAAA,yBAAA,EAA2B;AAJ3B,K;AADF,GAAA;AAOA,EAAA,OAAA,EAAS,YAAA;AACP,SAAA,IAAA;AACA,IAAA,QAAQ,CAAR,KAAA,CAAA,kBAAA,EAAmC;AAAC,MAAA,IAAA,EAAM;AAAP,KAAnC;WACA,OAAO,CAAC,KAAR,CAAA,eAAA,CAA8B,KAAC,MAAD,CAAQ,MAAR,CAA9B,GAAA,EAAA,IAAA,CAAuD,KAAvD,IAAA,EAA8D,UAAA,KAAA,EAAA;aAC5D,QAAQ,CAAR,KAAA,CAAA,WAAA,EAAA,KAAA,C;AADF,KAAA,C;AAVF,GAAA;AAaA,EAAA,OAAA,EACE;AAAA,IAAA,WAAA,EAAA,WAAA;AACA,IAAA,IAAA,EAAM,YAAA;AACJ,UAAG,KAAA,IAAA,GAAQ,CAAC,OAAO,CAAC,KAAR,CAAA,IAAA,CAAmB,KAAC,MAAD,CAAQ,MAAR,CAAnB,GAAA,KAA0C,OAAO,CAAC,KAAR,CAAA,IAAA,CAAmB;AAAA,QAAA,QAAA,EAAU,KAAC,MAAD,CAAQ,MAAR,CAAe;AAAzB,OAAnB,CAA3C,EAAX,CAAW,CAAX,EAAA;AACE,QAAA,OAAO,CAAC,MAAR,CAAA,GAAA,CAAA,qBAAA,EAA0C;AAAA,UAAA,OAAA,EAAS,KAAC,IAAD,CAAM;AAAf,SAA1C,EAAA,IAAA,CAAkE,MAAA;iBAChE,KAAA,cAAA,GAAkB,I;AADpB,SAAA;AAEA,QAAA,QAAQ,CAAR,KAAA,CAAA,kBAAA,EAAmC;AAAC,UAAA,KAAA,EAAO,KAAC,IAAD,CAAR,IAAA;AAAoB,UAAA,IAAA,EAAM;AAA1B,SAAnC;AACA,aAAA,aAAA,CAAe,KAAf,IAAA;eACA,KAAA,YAAA,CACE;AAAA,UAAA,GAAA,EAAK,KAAC,IAAD,CAAL,EAAA;AACA,UAAA,WAAA,EAAa,CAAA,QAAA,EADb,aACa,CADb;AAEA,UAAA,KAAA,EAAO,KAAA,IAAA;mBACL,KAAA,MAAA,GAAU,KAAC,IAAD,CAAA,MAAA,E;AADL;AAFP,SADF,C;;AAPJ,KAAA;AAaA,IAAA,aAAA,EAAe,UAAA,IAAA,EAAA;AACb,WAAA,yBAAA,GAA6B,IAA7B;aACA,OAAO,CAAC,WAAR,CAAA,WAAA,CAAA,IAAA,EAAA,IAAA,CAA2C,MAAA;eACzC,KAAA,yBAAA,GAA6B,K;AAD/B,OAAA,C;AAFa;AAbf,GAdF;AAgCA,EAAA,QAAA,EACE;AAAA,IAAA,WAAA,EAAa,YAAA;aAAG,SAAQ,KAAR,IAAA,C;AAAH;AAAb;AAjCF,CADF","sourcesContent":["\nimport Records        from '@/shared/services/records'\nimport EventBus       from '@/shared/services/event_bus'\nimport AbilityService from '@/shared/services/ability_service'\n\nimport { isEmpty }     from 'lodash'\nimport { approximate } from '@/shared/helpers/format_time'\n\nexport default\n  data: ->\n    user: {}\n    isMembershipsFetchingDone: false\n    groups: []\n    canContactUser: false\n    loadingGroupsForExecuting: false\n\n  created: ->\n    @init()\n    EventBus.$emit 'currentComponent', {page: 'userPage'}\n    Records.users.findOrFetchById(@$route.params.key).then @init, (error) ->\n      EventBus.$emit 'pageError', error\n\n  methods:\n    approximate: approximate\n    init: ->\n      if @user = (Records.users.find(@$route.params.key) or Records.users.find(username: @$route.params.key))[0]\n        Records.remote.get('profile/contactable', user_id: @user.id).then =>\n          @canContactUser = true\n        EventBus.$emit 'currentComponent', {title: @user.name, page: 'userPage'}\n        @loadGroupsFor(@user)\n        @watchRecords\n          key: @user.id\n          collections: ['groups', 'memberships']\n          query: (store) =>\n            @groups = @user.groups()\n\n    loadGroupsFor: (user) ->\n      @loadingGroupsForExecuting = true\n      Records.memberships.fetchByUser(user).then =>\n        @loadingGroupsForExecuting = false\n\n  computed:\n    isEmptyUser: -> isEmpty @user\n\n"],"sourceRoot":""}]}