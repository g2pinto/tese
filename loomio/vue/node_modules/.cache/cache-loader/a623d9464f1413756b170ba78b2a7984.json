{"remainingRequest":"/home/gustavo/Documents/tese/loomio/vue/node_modules/babel-loader/lib/index.js!/home/gustavo/Documents/tese/loomio/vue/node_modules/vue-cli-plugin-coffee/node_modules/coffee-loader/dist/cjs.js!/home/gustavo/Documents/tese/loomio/vue/src/shared/services/ability_service.coffee","dependencies":[{"path":"/home/gustavo/Documents/tese/loomio/vue/src/shared/services/ability_service.coffee","mtime":1706724415812},{"path":"/home/gustavo/Documents/tese/loomio/vue/.babelrc","mtime":1706724415792},{"path":"/home/gustavo/Documents/tese/loomio/vue/node_modules/vue-cli-plugin-coffee/node_modules/cache-loader/dist/cjs.js","mtime":1706724497848},{"path":"/home/gustavo/Documents/tese/loomio/vue/node_modules/babel-loader/lib/index.js","mtime":1706724500796},{"path":"/home/gustavo/Documents/tese/loomio/vue/node_modules/vue-cli-plugin-coffee/node_modules/coffee-loader/dist/cjs.js","mtime":1706724497848}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/gustavo/Documents/tese/loomio/vue/src/shared/services/ability_service.coffee"],"names":[],"mappings":"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","sourcesContent":["import AppConfig     from '@/shared/services/app_config'\nimport Records       from '@/shared/services/records'\nimport Session       from '@/shared/services/session'\nimport LmoUrlService from '@/shared/services/lmo_url_service'\nimport {intersection} from 'lodash'\n\nuser = -> Session.user()\n\nexport default new class AbilityService\n  isNotEmailVerified: ->\n    Session.isSignedIn() and !Session.user().emailVerified\n\n  isEmailVerified: ->\n    Session.isSignedIn() && Session.user().emailVerified\n\n  isUser: ->\n    AppConfig.currentUserId?\n\n  canContactUser: (user) ->\n    Session.isSignedIn() &&\n    Session.user().id != user.id &&\n    intersection(Session.user().groupIds(), user.groupIds()).length\n\n  canAddComment: (thread) ->\n    thread.membersInclude(Session.user())\n\n  canRespondToComment: (comment) ->\n    !comment.discardedAt &&\n    comment.discussion().membersInclude(Session.user())\n\n  canEdit: (model) ->\n    (model.isA('discussion') && @canEditThread(model)) ||\n    (model.isA('comment') && @canEditComment(model)) ||\n    (model.isA('poll') && @canEditPoll(model)) ||\n    (model.isA('stance') && @canEditStance(model))\n\n  canEditStance: (stance) ->\n    Session.user() == stance.author()\n\n  canEditThread: (thread) ->\n    thread.adminsInclude(Session.user()) or\n    (thread.membersInclude(Session.user()) and\n     (thread.group().membersCanEditDiscussions or thread.author() == Session.user()))\n\n  canCloseThread: (thread) ->\n    !thread.closedAt && @canEditThread(thread)\n\n  canReopenThread: (thread) ->\n    thread.closedAt && @canEditThread(thread)\n\n  canPinThread: (thread) ->\n    !thread.closedAt && !thread.pinnedAt && @canEditThread(thread)\n\n  canUnpinThread: (thread) ->\n    !thread.closedAt && thread.pinnedAt && @canEditThread(thread)\n\n  canExportThread: (thread) ->\n    !thread.discardedAt && thread.membersInclude(Session.user())\n\n  canPinEvent: (event) ->\n    event.depth == 1 &&\n    !event.model().discardedAt &&\n    !event.pinned && @canEditThread(event.discussion())\n\n  canUnpinEvent: (event) ->\n    event.pinned && @canEditThread(event.discussion())\n\n  canMoveThread: (thread) -> @canEditThread(thread)\n\n  canDeleteThread: (thread) ->\n    thread.adminsInclude(Session.user()) or thread.author() == Session.user()\n\n  canChangeGroupVolume: (group) ->\n    group.membersInclude(Session.user())\n\n  canAdminister: (model) ->\n    switch model.constructor.singular\n      when 'group'                     then model.adminsInclude(Session.user())\n      when 'discussion', 'comment'     then model.discussion().adminsInclude(Session.user())\n      when 'outcome', 'stance', 'poll' then model.poll().adminsInclude(Session.user())\n\n  canChangeVolume: (discussion) -> discussion.membersInclude(Session.user())\n\n  canStartThread: (group) ->\n    group.adminsInclude(Session.user()) or\n    (group.membersInclude(Session.user()) and group.membersCanStartDiscussions)\n\n  canAnnounceDiscussion: (discussion) ->\n    return false if discussion.discardedAt\n    if discussion.groupId\n      discussion.group().adminsInclude(Session.user()) or\n      (discussion.group().membersCanAnnounce and discussion.group().membersInclude(Session.user()))\n    else\n      !discussion.id || discussion.adminsInclude(Session.user())\n\n  canNotifyGroup: (model) ->\n    model.adminsInclude(Session.user()) ||\n    (model.membersCanAnnounce && model.membersInclude(Session.user()))\n\n  canAnnounce: (model) ->\n    if model.isA? 'poll'\n      @canAnnouncePoll(model)\n    else\n      @canAnnounceDiscussion(model)\n\n  canAddGuests: (model) ->\n    if model.isA? 'poll'\n      @canAddGuestsPoll(model)\n    else\n      @canAddGuestsDiscussion(model)\n\n  canAddGuestsDiscussion: (discussion) ->\n    if discussion.groupId\n      discussion.group().adminsInclude(Session.user()) ||\n      (discussion.group().membersCanAddGuests && discussion.group().membersInclude(Session.user()))\n    else\n      !discussion.id || discussion.adminsInclude(Session.user())\n\n  canAnnouncePoll: (poll) ->\n    user = Session.user()\n    return false if poll.discardedAt\n    if poll.groupId\n      poll.group().adminsInclude(user) ||\n      (poll.group().membersCanAnnounce && poll.adminsInclude(user)) ||\n      (poll.group().membersCanAnnounce && !poll.specifiedVotersOnly && poll.membersInclude(user))\n    else\n      poll.adminsInclude(user) ||\n      (!poll.specifiedVotersOnly && poll.membersInclude(user))\n\n  canAddMembersPoll: (poll) ->\n    poll.adminsInclude(user())\n\n  canAddGuestsPoll: (poll) ->\n    if poll.groupId\n      poll.group().adminsInclude(Session.user()) ||\n      (poll.group().membersCanAddGuests && poll.group(Session.user()))\n    else\n      poll.adminsInclude(Session.user())\n\n  canAddMembersToGroup: (group) ->\n    group.adminsInclude(Session.user()) or\n    (group.membersInclude(Session.user()) and group.membersCanAddMembers)\n\n  canCreateSubgroups: (group) ->\n    group.isParent() and\n    (group.adminsInclude(Session.user()) or\n    (group.membersInclude(Session.user()) and group.membersCanCreateSubgroups))\n\n  canEditGroup: (group) ->\n    group.adminsInclude(Session.user())\n\n  canLeaveGroup: (group) ->\n    Session.user().membershipFor(group)?\n\n  canArchiveGroup: (group) ->\n    group.adminsInclude(Session.user())\n\n  canEditOwnComment: (comment) ->\n    comment.authorIs(Session.user()) && @canEditComment(comment)\n\n  canEditComment: (comment) ->\n    (comment.discussion().adminsInclude(Session.user()) and comment.group().adminsCanEditUserContent) or\n\n    (comment.authorIs(Session.user()) and\n     comment.group().membersCanEditComments and\n     comment.discussion().membersInclude(Session.user()))\n\n  canDeleteComment: (comment) ->\n    Records.comments.find(parentId: comment.id, parentType: 'Comment').length == 0 &&\n    comment.discardedAt &&\n    (\n      comment.discussion().adminsInclude(Session.user()) ||\n      (comment.group().membersCanDeleteComments && comment.authorIs(Session.user()))\n    )\n\n  canDiscardComment: (comment) ->\n    !comment.discardedAt && (\n      comment.authorIs(Session.user()) ||\n      comment.discussion().adminsInclude(Session.user())\n    )\n\n  canUndiscardComment: (comment) ->\n    comment.discardedAt && (\n      comment.authorIs(Session.user()) ||\n      comment.discussion().adminsInclude(Session.user())\n    )\n\n  canRemoveMembership: (membership) ->\n    membership and\n    (membership.user() == Session.user() or @canAdminister(membership.group()))\n\n  canSetMembershipTitle: (membership) ->\n    Session.user() == membership.user() or @canAdminister(membership.group())\n\n  canResendMembership: (membership) ->\n    membership and !membership.acceptedAt and @canAdminister(membership.group())\n\n  canManageMembershipRequests: (group) ->\n    (group.membersCanAddMembers and group.membersInclude(Session.user())) or group.adminsInclude(Session.user())\n\n  canViewPublicGroups: ->\n    AppConfig.features.app.public_groups\n\n  canStartGroups: ->\n    @isEmailVerified() and (AppConfig.features.app.create_group || Session.user().isAdmin)\n\n  canViewGroup: (group) ->\n    !group.privacyIsSecret() or group.membersInclude(Session.user())\n\n  canViewPrivateContent: (group) ->\n    group.membersInclude(Session.user())\n\n  canJoinGroup: (group) ->\n    return false if group.subscription.plan == 'demo'\n    return false if !@canViewGroup(group) or group.membersInclude(Session.user())\n    group.membershipGrantedUpon == 'request' or group.parentOrSelf().adminsInclude(Session.user())\n\n  canRequestMembership: (group) ->\n    group.membershipGrantedUpon == 'approval' and\n    @canViewGroup(group) and\n    !group.membersInclude(Session.user()) and\n    !@canJoinGroup(group)\n\n  canTranslate: (model) ->\n    return false if model.discardedAt\n    AppConfig.inlineTranslation.isAvailable &&\n    Object.keys(model.translation).length == 0 &&\n    !model.isBlank() &&\n    (model.contentLocale && model.contentLocale != Session.user().locale) ||\n    (!model.contentLocale && model.author().locale != Session.user().locale)\n\n  canStartPoll: (model) ->\n    model.adminsInclude(Session.user()) or\n    (model.membersInclude(Session.user()) and model.group().membersCanRaiseMotions)\n\n  canParticipateInPoll: (poll) ->\n    return false unless poll\n    return false if poll.closedAt\n    poll.myStance() or (!poll.specifiedVotersOnly and poll.membersInclude(Session.user()))\n\n  canMovePoll: (poll) ->\n    !poll.discussionId && poll.adminsInclude(Session.user())\n\n  canEditPoll: (poll) ->\n    poll.adminsInclude(Session.user()) && !poll.closedAt\n\n  canDeletePoll: (poll) ->\n    !poll.discardedAt && poll.adminsInclude(Session.user())\n\n  canExportPoll: (poll) ->\n    !poll.discardedAt && poll.membersInclude(Session.user()) && (poll.closedAt || poll.hideResults != \"until_closed\")\n\n  canAddPollToThread: (poll) ->\n    !poll.discardedAt && !poll.discussionId && poll.adminsInclude(Session.user())\n\n  canSetPollOutcome: (poll) ->\n    !poll.discardedAt && poll.closedAt && poll.adminsInclude(Session.user())\n\n  canClosePoll: (poll) ->\n    !!poll.closingAt && !poll.discardedAt && !poll.closedAt && @canEditPoll(poll)\n\n  canReopenPoll: (poll) ->\n    !poll.discardedAt && poll.closedAt && !poll.anonymous && poll.adminsInclude(Session.user())\n"],"sourceRoot":""}]}