{"remainingRequest":"/home/gustavo/Documents/tese/loomio/vue/node_modules/babel-loader/lib/index.js!/home/gustavo/Documents/tese/loomio/vue/node_modules/vue-cli-plugin-coffee/node_modules/coffee-loader/dist/cjs.js!/home/gustavo/Documents/tese/loomio/vue/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!/home/gustavo/Documents/tese/loomio/vue/src/components/group/discussions_panel.vue?vue&type=script&lang=coffee&","dependencies":[{"path":"/home/gustavo/Documents/tese/loomio/vue/src/components/group/discussions_panel.vue","mtime":1706724415800},{"path":"/home/gustavo/Documents/tese/loomio/vue/.babelrc","mtime":1706724415792},{"path":"/home/gustavo/Documents/tese/loomio/vue/node_modules/vue-cli-plugin-coffee/node_modules/cache-loader/dist/cjs.js","mtime":1706724497848},{"path":"/home/gustavo/Documents/tese/loomio/vue/node_modules/babel-loader/lib/index.js","mtime":1706724500796},{"path":"/home/gustavo/Documents/tese/loomio/vue/node_modules/vue-cli-plugin-coffee/node_modules/coffee-loader/dist/cjs.js","mtime":1706724497848},{"path":"/home/gustavo/Documents/tese/loomio/vue/node_modules/@vue/vue-loader-v15/lib/index.js","mtime":1706724499784}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF91bmlxIGZyb20gImxvZGFzaC91bmlxIjsKaW1wb3J0IF9jb25jYXQgZnJvbSAibG9kYXNoL2NvbmNhdCI7CmltcG9ydCBfZmlsdGVyIGZyb20gImxvZGFzaC9maWx0ZXIiOwppbXBvcnQgX2ludGVyc2VjdGlvbiBmcm9tICJsb2Rhc2gvaW50ZXJzZWN0aW9uIjsKaW1wb3J0IF9vcmRlckJ5IGZyb20gImxvZGFzaC9vcmRlckJ5IjsKaW1wb3J0IF9kZWJvdW5jZSBmcm9tICJsb2Rhc2gvZGVib3VuY2UiOwppbXBvcnQgUmVjb3JkcyBmcm9tICdAL3NoYXJlZC9zZXJ2aWNlcy9yZWNvcmRzJzsKaW1wb3J0IEFiaWxpdHlTZXJ2aWNlIGZyb20gJ0Avc2hhcmVkL3NlcnZpY2VzL2FiaWxpdHlfc2VydmljZSc7CmltcG9ydCBFdmVudEJ1cyBmcm9tICdAL3NoYXJlZC9zZXJ2aWNlcy9ldmVudF9idXMnOwppbXBvcnQgUmVjb3JkTG9hZGVyIGZyb20gJ0Avc2hhcmVkL3NlcnZpY2VzL3JlY29yZF9sb2FkZXInOwppbXBvcnQgUGFnZUxvYWRlciBmcm9tICdAL3NoYXJlZC9zZXJ2aWNlcy9wYWdlX2xvYWRlcic7CmltcG9ydCBTZXNzaW9uIGZyb20gJ0Avc2hhcmVkL3NlcnZpY2VzL3Nlc3Npb24nOwpleHBvcnQgZGVmYXVsdCB7CiAgY3JlYXRlZDogZnVuY3Rpb24gKCkgewogICAgdGhpcy5vblF1ZXJ5SW5wdXQgPSBfZGVib3VuY2UodmFsID0+IHsKICAgICAgcmV0dXJuIHRoaXMuJHJvdXRlci5yZXBsYWNlKHRoaXMubWVyZ2VRdWVyeSh7CiAgICAgICAgcTogdmFsCiAgICAgIH0pKTsKICAgIH0sIDEwMDApOwogICAgdGhpcy5pbml0KCk7CiAgICByZXR1cm4gRXZlbnRCdXMuJG9uKCdzaWduZWRJbicsIHRoaXMuaW5pdCk7CiAgfSwKICBiZWZvcmVEZXN0cm95OiBmdW5jdGlvbiAoKSB7CiAgICByZXR1cm4gRXZlbnRCdXMuJG9mZignc2lnbmVkSW4nLCB0aGlzLmluaXQpOwogIH0sCiAgZGF0YTogZnVuY3Rpb24gKCkgewogICAgcmV0dXJuIHsKICAgICAgZ3JvdXA6IG51bGwsCiAgICAgIGRpc2N1c3Npb25zOiBbXSwKICAgICAgc2VhcmNoUmVzdWx0czogW10sCiAgICAgIGxvYWRlcjogbnVsbCwKICAgICAgc2VhcmNoTG9hZGVyOiBudWxsLAogICAgICBncm91cElkczogW10sCiAgICAgIHBlcjogMjUKICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICByb3V0ZVF1ZXJ5OiBmdW5jdGlvbiAobykgewogICAgICByZXR1cm4gdGhpcy4kcm91dGVyLnJlcGxhY2UodGhpcy5tZXJnZVF1ZXJ5KG8pKTsKICAgIH0sCiAgICBvcGVuU3RhcnREaXNjdXNzaW9uTW9kYWw6IGZ1bmN0aW9uICgpIHsKICAgICAgcmV0dXJuIEV2ZW50QnVzLiRlbWl0KCdvcGVuTW9kYWwnLCB7CiAgICAgICAgY29tcG9uZW50OiAnRGlzY3Vzc2lvbkZvcm0nLAogICAgICAgIHByb3BzOiB7CiAgICAgICAgICBkaXNjdXNzaW9uOiBSZWNvcmRzLmRpc2N1c3Npb25zLmJ1aWxkKHsKICAgICAgICAgICAgZGVzY3JpcHRpb25Gb3JtYXQ6IFNlc3Npb24uZGVmYXVsdEZvcm1hdCgpLAogICAgICAgICAgICBncm91cElkOiB0aGlzLmdyb3VwLmlkCiAgICAgICAgICB9KQogICAgICAgIH0KICAgICAgfSk7CiAgICB9LAogICAgYmVmb3JlRGVzdHJveTogZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gRXZlbnRCdXMuJG9mZignam9pbmVkR3JvdXAnKTsKICAgIH0sCiAgICBpbml0OiBmdW5jdGlvbiAoKSB7CiAgICAgIHJldHVybiBSZWNvcmRzLmdyb3Vwcy5maW5kT3JGZXRjaCh0aGlzLiRyb3V0ZS5wYXJhbXMua2V5KS50aGVuKGdyb3VwID0+IHsKICAgICAgICB0aGlzLmdyb3VwID0gZ3JvdXA7CiAgICAgICAgRXZlbnRCdXMuJGVtaXQoJ2N1cnJlbnRDb21wb25lbnQnLCB7CiAgICAgICAgICBwYWdlOiAnZ3JvdXBQYWdlJywKICAgICAgICAgIHRpdGxlOiB0aGlzLmdyb3VwLm5hbWUsCiAgICAgICAgICBncm91cDogdGhpcy5ncm91cCwKICAgICAgICAgIHNlYXJjaDogewogICAgICAgICAgICBwbGFjZWhvbGRlcjogdGhpcy4kdCgnbmF2YmFyLnNlYXJjaF90aHJlYWRzJywgewogICAgICAgICAgICAgIG5hbWU6IHRoaXMuZ3JvdXAucGFyZW50T3JTZWxmKCkubmFtZQogICAgICAgICAgICB9KQogICAgICAgICAgfQogICAgICAgIH0pOwogICAgICAgIEV2ZW50QnVzLiRvbignam9pbmVkR3JvdXAnLCBncm91cCA9PiB7CiAgICAgICAgICByZXR1cm4gdGhpcy5mZXRjaCgpOwogICAgICAgIH0pOwogICAgICAgIHRoaXMucmVmcmVzaCgpOwogICAgICAgIHJldHVybiB0aGlzLndhdGNoUmVjb3Jkcyh7CiAgICAgICAgICBrZXk6IHRoaXMuZ3JvdXAuaWQsCiAgICAgICAgICBjb2xsZWN0aW9uczogWydkaXNjdXNzaW9ucycsICdncm91cHMnLCAnbWVtYmVyc2hpcHMnXSwKICAgICAgICAgIHF1ZXJ5OiAoKSA9PiB7CiAgICAgICAgICAgIHJldHVybiB0aGlzLnF1ZXJ5KCk7CiAgICAgICAgICB9CiAgICAgICAgfSk7CiAgICAgIH0pOwogICAgfSwKICAgIHJlZnJlc2g6IGZ1bmN0aW9uICgpIHsKICAgICAgdGhpcy5sb2FkZXIgPSBuZXcgUGFnZUxvYWRlcih7CiAgICAgICAgcGF0aDogJ2Rpc2N1c3Npb25zJywKICAgICAgICBvcmRlcjogJ2xhc3RBY3Rpdml0eUF0JywKICAgICAgICBwYXJhbXM6IHsKICAgICAgICAgIGdyb3VwX2lkOiB0aGlzLmdyb3VwLmlkLAogICAgICAgICAgZXhjbHVkZV90eXBlczogJ2dyb3VwIG91dGNvbWUgcG9sbCcsCiAgICAgICAgICBmaWx0ZXI6IHRoaXMuJHJvdXRlLnF1ZXJ5LnQsCiAgICAgICAgICBzdWJncm91cHM6IHRoaXMuJHJvdXRlLnF1ZXJ5LnN1Ymdyb3VwcyB8fCAnbWluZScsCiAgICAgICAgICB0YWdzOiB0aGlzLiRyb3V0ZS5xdWVyeS50YWcsCiAgICAgICAgICBwZXI6IHRoaXMucGVyCiAgICAgICAgfQogICAgICB9KTsKICAgICAgdGhpcy5zZWFyY2hMb2FkZXIgPSBuZXcgUmVjb3JkTG9hZGVyKHsKICAgICAgICBjb2xsZWN0aW9uOiAnc2VhcmNoUmVzdWx0cycsCiAgICAgICAgcGFyYW1zOiB7CiAgICAgICAgICBleGNsdWRlX3R5cGVzOiAnZ3JvdXAgc3RhbmNlIG91dGNvbWUgcG9sbCcsCiAgICAgICAgICBzdWJncm91cHM6IHRoaXMuJHJvdXRlLnF1ZXJ5LnN1Ymdyb3VwcyB8fCAnYWxsJywKICAgICAgICAgIGdyb3VwX2lkOiB0aGlzLmdyb3VwLmlkCiAgICAgICAgfQogICAgICB9KTsKICAgICAgdGhpcy5mZXRjaCgpOwogICAgICByZXR1cm4gdGhpcy5xdWVyeSgpOwogICAgfSwKICAgIHF1ZXJ5OiBmdW5jdGlvbiAoKSB7CiAgICAgIHZhciBjaGFpbiwgdGFnOwoKICAgICAgaWYgKCF0aGlzLmdyb3VwKSB7CiAgICAgICAgcmV0dXJuOwogICAgICB9IC8vIGNvbnNvbGUubG9nICdydW5uaW5nIHF1ZXJ5OiBwYWdlJywgQHBhZ2UsICdsb2FkZXIgcGFnZVdpbmRvd1twYWdlXScsIEBsb2FkZXIucGFnZVdpbmRvd1tAcGFnZV0KCgogICAgICB0aGlzLnB1YmxpY0dyb3VwSWRzID0gdGhpcy5ncm91cC5wdWJsaWNPcmdhbmlzYXRpb25JZHMoKTsKCiAgICAgIHRoaXMuZ3JvdXBJZHMgPSBmdW5jdGlvbiAoKSB7CiAgICAgICAgc3dpdGNoICh0aGlzLiRyb3V0ZS5xdWVyeS5zdWJncm91cHMgfHwgJ21pbmUnKSB7CiAgICAgICAgICBjYXNlICdtaW5lJzoKICAgICAgICAgICAgcmV0dXJuIF91bmlxKF9jb25jYXQoX2ludGVyc2VjdGlvbih0aGlzLmdyb3VwLm9yZ2FuaXNhdGlvbklkcygpLCBTZXNzaW9uLnVzZXIoKS5ncm91cElkcygpKSwgdGhpcy5wdWJsaWNHcm91cElkcywgdGhpcy5ncm91cC5pZCkpOwogICAgICAgICAgLy8gQGdyb3VwLmlkIGlzIHByZXNlbnQgaWYgQGdyb3VwIGlzIGEgc3ViZ3JvdXAgb2YgcGFyZW50Z3JvdXAgdGhhdCBpJ20gYSBtZW1iZXIgb2YsIGFuZCB0aGF0IHBhcmVudCBncm91cCBoYXMgcGFyZW50TWVtYmVyc0NhblNlZURpc2N1c3Npb25zCgogICAgICAgICAgY2FzZSAnYWxsJzoKICAgICAgICAgICAgcmV0dXJuIHRoaXMuZ3JvdXAub3JnYW5pc2F0aW9uSWRzKCk7CgogICAgICAgICAgZGVmYXVsdDoKICAgICAgICAgICAgcmV0dXJuIFt0aGlzLmdyb3VwLmlkXTsKICAgICAgICB9CiAgICAgIH0uY2FsbCh0aGlzKTsgLy8gY29uc29sZS5sb2cgJ3VzZXIgZ3JvdXAgaWRzJywgU2Vzc2lvbi51c2VyKCkuZ3JvdXBJZHMoKQogICAgICAvLyBjb25zb2xlLmxvZyAnb3JnIGlkcycsIEBncm91cC5vcmdhbmlzYXRpb25JZHMoKQogICAgICAvLyBjb25zb2xlLmxvZyAnaW50ZXJzZWN0aW9uIGlkcycsIG9yZGVyQnkgaW50ZXJzZWN0aW9uKEBncm91cC5vcmdhbmlzYXRpb25JZHMoKSwgU2Vzc2lvbi51c2VyKCkuZ3JvdXBJZHMoKSkKICAgICAgLy8gY29uc29sZS5sb2cgJ3JlY29yZHMgZm91bmQnLCBSZWNvcmRzLmRpc2N1c3Npb25zLmNvbGxlY3Rpb24uY2hhaW4oKS5maW5kKGdyb3VwSWQ6IHsnJGluJzogQGdyb3VwLm9yZ2FuaXNhdGlvbklkcygpfSkuZGF0YSgpLmxlbmd0aAoKCiAgICAgIGlmICh0aGlzLiRyb3V0ZS5xdWVyeS5xKSB7CiAgICAgICAgY2hhaW4gPSBSZWNvcmRzLnNlYXJjaFJlc3VsdHMuY29sbGVjdGlvbi5jaGFpbigpOwogICAgICAgIGNoYWluID0gY2hhaW4uZmluZCh7CiAgICAgICAgICBncm91cElkOiB7CiAgICAgICAgICAgICRpbjogdGhpcy5ncm91cC5wYXJlbnRPclNlbGYoKS5vcmdhbmlzYXRpb25JZHMoKQogICAgICAgICAgfQogICAgICAgIH0pOwogICAgICAgIGNoYWluID0gY2hhaW4uZmluZCh7CiAgICAgICAgICBxdWVyeTogdGhpcy4kcm91dGUucXVlcnkucQogICAgICAgIH0pOwogICAgICAgIHJldHVybiB0aGlzLnNlYXJjaFJlc3VsdHMgPSBfb3JkZXJCeShjaGFpbi5kYXRhKCksICdyYW5rJywgJ2Rlc2MnKTsKICAgICAgfSBlbHNlIHsKICAgICAgICBjaGFpbiA9IFJlY29yZHMuZGlzY3Vzc2lvbnMuY29sbGVjdGlvbi5jaGFpbigpOwogICAgICAgIGNoYWluID0gY2hhaW4uZmluZCh7CiAgICAgICAgICBkaXNjYXJkZWRBdDogbnVsbAogICAgICAgIH0pOwogICAgICAgIGNoYWluID0gY2hhaW4uZmluZCh7CiAgICAgICAgICBncm91cElkOiB7CiAgICAgICAgICAgICRpbjogdGhpcy5ncm91cElkcwogICAgICAgICAgfQogICAgICAgIH0pOwoKICAgICAgICBzd2l0Y2ggKHRoaXMuJHJvdXRlLnF1ZXJ5LnQpIHsKICAgICAgICAgIGNhc2UgJ3VucmVhZCc6CiAgICAgICAgICAgIGNoYWluID0gY2hhaW4ud2hlcmUoZnVuY3Rpb24gKGRpc2N1c3Npb24pIHsKICAgICAgICAgICAgICByZXR1cm4gZGlzY3Vzc2lvbi5pc1VucmVhZCgpOwogICAgICAgICAgICB9KTsKICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgY2FzZSAnY2xvc2VkJzoKICAgICAgICAgICAgY2hhaW4gPSBjaGFpbi5maW5kKHsKICAgICAgICAgICAgICBjbG9zZWRBdDogewogICAgICAgICAgICAgICAgJG5lOiBudWxsCiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9KTsKICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgY2FzZSAndGVtcGxhdGVzJzoKICAgICAgICAgICAgY2hhaW4gPSBjaGFpbi5maW5kKHsKICAgICAgICAgICAgICB0ZW1wbGF0ZTogdHJ1ZQogICAgICAgICAgICB9KTsKICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgY2FzZSAnYWxsJzoKICAgICAgICAgICAgdHJ1ZTsgLy8gbm9vcAoKICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgZGVmYXVsdDoKICAgICAgICAgICAgY2hhaW4gPSBjaGFpbi5maW5kKHsKICAgICAgICAgICAgICBjbG9zZWRBdDogbnVsbAogICAgICAgICAgICB9KTsKICAgICAgICB9CgogICAgICAgIGlmICh0aGlzLiRyb3V0ZS5xdWVyeS50YWcpIHsKICAgICAgICAgIHRhZyA9IFJlY29yZHMudGFncy5maW5kKHsKICAgICAgICAgICAgZ3JvdXBJZDogdGhpcy5ncm91cC5wYXJlbnRPclNlbGYoKS5pZCwKICAgICAgICAgICAgbmFtZTogdGhpcy4kcm91dGUucXVlcnkudGFnCiAgICAgICAgICB9KVswXTsKICAgICAgICAgIGNoYWluID0gY2hhaW4uZmluZCh7CiAgICAgICAgICAgIHRhZ0lkczogewogICAgICAgICAgICAgICckY29udGFpbnMnOiB0YWcuaWQKICAgICAgICAgICAgfQogICAgICAgICAgfSk7CiAgICAgICAgfQoKICAgICAgICBpZiAodGhpcy5sb2FkZXIucGFnZVdpbmRvd1t0aGlzLnBhZ2VdKSB7CiAgICAgICAgICBpZiAodGhpcy5wYWdlID09PSAxKSB7CiAgICAgICAgICAgIGNoYWluID0gY2hhaW4uZmluZCh7CiAgICAgICAgICAgICAgbGFzdEFjdGl2aXR5QXQ6IHsKICAgICAgICAgICAgICAgICRndGU6IHRoaXMubG9hZGVyLnBhZ2VXaW5kb3dbdGhpcy5wYWdlXVswXQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSk7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBjaGFpbiA9IGNoYWluLmZpbmQoewogICAgICAgICAgICAgIGxhc3RBY3Rpdml0eUF0OiB7CiAgICAgICAgICAgICAgICAkamJldHdlZW46IHRoaXMubG9hZGVyLnBhZ2VXaW5kb3dbdGhpcy5wYWdlXQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSk7CiAgICAgICAgICB9CgogICAgICAgICAgcmV0dXJuIHRoaXMuZGlzY3Vzc2lvbnMgPSBjaGFpbi5zaW1wbGVzb3J0KCdsYXN0QWN0aXZpdHlBdCcsIHRydWUpLmRhdGEoKTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgcmV0dXJuIHRoaXMuZGlzY3Vzc2lvbnMgPSBbXTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sCiAgICBmZXRjaDogZnVuY3Rpb24gKCkgewogICAgICBpZiAodGhpcy4kcm91dGUucXVlcnkucSkgewogICAgICAgIHJldHVybiB0aGlzLnNlYXJjaExvYWRlci5mZXRjaFJlY29yZHMoewogICAgICAgICAgcTogdGhpcy4kcm91dGUucXVlcnkucSwKICAgICAgICAgIGZyb206IDAKICAgICAgICB9KTsKICAgICAgfSBlbHNlIHsKICAgICAgICByZXR1cm4gdGhpcy5sb2FkZXIuZmV0Y2godGhpcy5wYWdlKS50aGVuKCgpID0+IHsKICAgICAgICAgIHJldHVybiB0aGlzLnF1ZXJ5KCk7CiAgICAgICAgfSk7CiAgICAgIH0KICAgIH0sCiAgICBmaWx0ZXJOYW1lOiBmdW5jdGlvbiAoZmlsdGVyKSB7CiAgICAgIHN3aXRjaCAoZmlsdGVyKSB7CiAgICAgICAgY2FzZSAndW5yZWFkJzoKICAgICAgICAgIHJldHVybiAnZGlzY3Vzc2lvbnNfcGFuZWwudW5yZWFkJzsKCiAgICAgICAgY2FzZSAnYWxsJzoKICAgICAgICAgIHJldHVybiAnZGlzY3Vzc2lvbnNfcGFuZWwuYWxsJzsKCiAgICAgICAgY2FzZSAnY2xvc2VkJzoKICAgICAgICAgIHJldHVybiAnZGlzY3Vzc2lvbnNfcGFuZWwuY2xvc2VkJzsKCiAgICAgICAgY2FzZSAndGVtcGxhdGVzJzoKICAgICAgICAgIHJldHVybiAndGVtcGxhdGVzLnRlbXBsYXRlcyc7CgogICAgICAgIGNhc2UgJ3N1YnNjcmliZWQnOgogICAgICAgICAgcmV0dXJuICdjaGFuZ2Vfdm9sdW1lX2Zvcm0uc2ltcGxlLmxvdWQnOwoKICAgICAgICBkZWZhdWx0OgogICAgICAgICAgcmV0dXJuICdkaXNjdXNzaW9uc19wYW5lbC5vcGVuJzsKICAgICAgfQogICAgfQogIH0sCiAgd2F0Y2g6IHsKICAgICckcm91dGUucGFyYW1zJzogJ2luaXQnLAogICAgJyRyb3V0ZS5xdWVyeSc6ICdyZWZyZXNoJywKICAgICdwYWdlJzogZnVuY3Rpb24gKCkgewogICAgICB0aGlzLmZldGNoKCk7CiAgICAgIHJldHVybiB0aGlzLnF1ZXJ5KCk7CiAgICB9CiAgfSwKICBjb21wdXRlZDogewogICAgcGFnZTogewogICAgICBnZXQ6IGZ1bmN0aW9uICgpIHsKICAgICAgICByZXR1cm4gcGFyc2VJbnQodGhpcy4kcm91dGUucXVlcnkucGFnZSkgfHwgMTsKICAgICAgfSwKICAgICAgc2V0OiBmdW5jdGlvbiAodmFsKSB7CiAgICAgICAgcmV0dXJuIHRoaXMuJHJvdXRlci5yZXBsYWNlKHsKICAgICAgICAgIHF1ZXJ5OiBPYmplY3QuYXNzaWduKHt9LCB0aGlzLiRyb3V0ZS5xdWVyeSwgewogICAgICAgICAgICBwYWdlOiB2YWwKICAgICAgICAgIH0pCiAgICAgICAgfSk7CiAgICAgIH0KICAgIH0sCiAgICB0b3RhbFBhZ2VzOiBmdW5jdGlvbiAoKSB7CiAgICAgIHJldHVybiBNYXRoLmNlaWwocGFyc2VGbG9hdCh0aGlzLmxvYWRlci50b3RhbCkgLyBwYXJzZUZsb2F0KHRoaXMucGVyKSk7CiAgICB9LAogICAgcGlubmVkRGlzY3Vzc2lvbnM6IGZ1bmN0aW9uICgpIHsKICAgICAgcmV0dXJuIF9vcmRlckJ5KHRoaXMuZGlzY3Vzc2lvbnMuZmlsdGVyKGZ1bmN0aW9uIChkaXNjdXNzaW9uKSB7CiAgICAgICAgcmV0dXJuIGRpc2N1c3Npb24ucGlubmVkQXQ7CiAgICAgIH0pLCBbJ3Bpbm5lZEF0J10sIFsnZGVzYyddKTsKICAgIH0sCiAgICByZWd1bGFyRGlzY3Vzc2lvbnM6IGZ1bmN0aW9uICgpIHsKICAgICAgcmV0dXJuIF9vcmRlckJ5KHRoaXMuZGlzY3Vzc2lvbnMuZmlsdGVyKGZ1bmN0aW9uIChkaXNjdXNzaW9uKSB7CiAgICAgICAgcmV0dXJuICFkaXNjdXNzaW9uLnBpbm5lZEF0OwogICAgICB9KSwgWydsYXN0QWN0aXZpdHlBdCddLCBbJ2Rlc2MnXSk7CiAgICB9LAogICAgZ3JvdXBUYWdzOiBmdW5jdGlvbiAoKSB7CiAgICAgIHJldHVybiB0aGlzLmdyb3VwICYmIHRoaXMuZ3JvdXAudGFncygpLmZpbHRlcihmdW5jdGlvbiAodGFnKSB7CiAgICAgICAgcmV0dXJuIHRhZy50YWdnaW5nc0NvdW50ID4gMDsKICAgICAgfSk7CiAgICB9LAogICAgbG9hZGluZzogZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gdGhpcy5sb2FkZXIubG9hZGluZyB8fCB0aGlzLnNlYXJjaExvYWRlci5sb2FkaW5nOwogICAgfSwKICAgIG5vVGhyZWFkczogZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gIXRoaXMubG9hZGluZyAmJiB0aGlzLmRpc2N1c3Npb25zLmxlbmd0aCA9PT0gMDsKICAgIH0sCiAgICBjYW5WaWV3UHJpdmF0ZUNvbnRlbnQ6IGZ1bmN0aW9uICgpIHsKICAgICAgcmV0dXJuIEFiaWxpdHlTZXJ2aWNlLmNhblZpZXdQcml2YXRlQ29udGVudCh0aGlzLmdyb3VwKTsKICAgIH0sCiAgICBjYW5TdGFydFRocmVhZDogZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gQWJpbGl0eVNlcnZpY2UuY2FuU3RhcnRUaHJlYWQodGhpcy5ncm91cCk7CiAgICB9LAogICAgaXNMb2dnZWRJbjogZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gU2Vzc2lvbi5pc1NpZ25lZEluKCk7CiAgICB9LAogICAgdW5yZWFkQ291bnQ6IGZ1bmN0aW9uICgpIHsKICAgICAgcmV0dXJuIF9maWx0ZXIodGhpcy5kaXNjdXNzaW9ucywgZnVuY3Rpb24gKGRpc2N1c3Npb24pIHsKICAgICAgICByZXR1cm4gZGlzY3Vzc2lvbi5pc1VucmVhZCgpOwogICAgICB9KS5sZW5ndGg7CiAgICB9LAogICAgc3VnZ2VzdENsb3NlZFRocmVhZHM6IGZ1bmN0aW9uICgpIHsKICAgICAgcmV0dXJuIFsndW5kZWZpbmVkJywgJ29wZW4nLCAndW5yZWFkJ10uaW5jbHVkZXMoU3RyaW5nKHRoaXMuJHJvdXRlLnF1ZXJ5LnQpKSAmJiB0aGlzLmdyb3VwICYmIHRoaXMuZ3JvdXAuY2xvc2VkRGlzY3Vzc2lvbnNDb3VudDsKICAgIH0KICB9Cn07"},{"version":3,"sources":["/home/gustavo/Documents/tese/loomio/vue/src/components/group/discussions_panel.vue"],"names":[],"mappings":"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","sourcesContent":["\nimport Records            from '@/shared/services/records'\nimport AbilityService     from '@/shared/services/ability_service'\nimport EventBus           from '@/shared/services/event_bus'\nimport RecordLoader       from '@/shared/services/record_loader'\nimport PageLoader         from '@/shared/services/page_loader'\nimport { map, debounce, orderBy, intersection, compact, omit, filter, concat, uniq} from 'lodash'\nimport Session from '@/shared/services/session'\n\nexport default\n  created: ->\n    @onQueryInput = debounce (val) =>\n      @$router.replace(@mergeQuery(q: val))\n    , 1000\n    @init()\n    EventBus.$on 'signedIn', @init\n\n  beforeDestroy: ->\n    EventBus.$off 'signedIn', @init\n\n  data: ->\n    group: null\n    discussions: []\n    searchResults: []\n    loader: null\n    searchLoader: null\n    groupIds: []\n    per: 25\n\n  methods:\n    routeQuery: (o) ->\n      @$router.replace(@mergeQuery(o))\n\n    openStartDiscussionModal: ->\n      EventBus.$emit 'openModal',\n        component: 'DiscussionForm'\n        props:\n          discussion: Records.discussions.build\n            descriptionFormat: Session.defaultFormat()\n            groupId: @group.id\n\n    beforeDestroy: ->\n      EventBus.$off 'joinedGroup'\n\n    init: ->\n      Records.groups.findOrFetch(@$route.params.key).then (group) =>\n        @group = group\n\n        EventBus.$emit 'currentComponent',\n          page: 'groupPage'\n          title: @group.name\n          group: @group\n          search:\n            placeholder: @$t('navbar.search_threads', name: @group.parentOrSelf().name)\n\n        EventBus.$on 'joinedGroup', (group) => @fetch()\n\n        @refresh()\n\n        @watchRecords\n          key: @group.id\n          collections: ['discussions', 'groups', 'memberships']\n          query: => @query()\n\n    refresh: ->\n      @loader = new PageLoader\n        path: 'discussions'\n        order: 'lastActivityAt'\n        params:\n          group_id: @group.id\n          exclude_types: 'group outcome poll'\n          filter: @$route.query.t\n          subgroups: @$route.query.subgroups || 'mine'\n          tags: @$route.query.tag\n          per: @per\n\n      @searchLoader = new RecordLoader\n        collection: 'searchResults'\n        params:\n          exclude_types: 'group stance outcome poll'\n          subgroups: @$route.query.subgroups || 'all'\n          group_id: @group.id\n\n      @fetch()\n      @query()\n\n    query: ->\n      return unless @group\n      # console.log 'running query: page', @page, 'loader pageWindow[page]', @loader.pageWindow[@page]\n      @publicGroupIds = @group.publicOrganisationIds()\n\n      @groupIds = switch (@$route.query.subgroups || 'mine')\n        when 'mine' then uniq(concat(intersection(@group.organisationIds(), Session.user().groupIds()), @publicGroupIds, @group.id)) # @group.id is present if @group is a subgroup of parentgroup that i'm a member of, and that parent group has parentMembersCanSeeDiscussions\n        when 'all' then @group.organisationIds()\n        else [@group.id]\n\n      # console.log 'user group ids', Session.user().groupIds()\n      # console.log 'org ids', @group.organisationIds()\n      # console.log 'intersection ids', orderBy intersection(@group.organisationIds(), Session.user().groupIds())\n      # console.log 'records found', Records.discussions.collection.chain().find(groupId: {'$in': @group.organisationIds()}).data().length\n\n      if @$route.query.q\n        chain = Records.searchResults.collection.chain()\n        chain = chain.find(groupId: {$in: @group.parentOrSelf().organisationIds()})\n        chain = chain.find(query: @$route.query.q)\n        @searchResults = orderBy(chain.data(), 'rank', 'desc')\n      else\n        chain = Records.discussions.collection.chain()\n        chain = chain.find(discardedAt: null)\n        chain = chain.find(groupId: {$in: @groupIds})\n\n        switch @$route.query.t\n          when 'unread'\n            chain = chain.where (discussion) -> discussion.isUnread()\n          when 'closed'\n            chain = chain.find(closedAt: {$ne: null})\n          when 'templates'\n            chain = chain.find(template: true)\n          when 'all'\n            true # noop\n          else\n            chain = chain.find(closedAt: null)\n\n        if @$route.query.tag\n\n          tag = Records.tags.find(groupId: @group.parentOrSelf().id, name: @$route.query.tag)[0]\n          chain = chain.find({tagIds: {'$contains': tag.id}})\n\n        if @loader.pageWindow[@page]\n          if @page == 1\n            chain = chain.find(lastActivityAt: {$gte: @loader.pageWindow[@page][0]})\n          else\n            chain = chain.find(lastActivityAt: {$jbetween: @loader.pageWindow[@page]})\n          @discussions = chain.simplesort('lastActivityAt', true).data()\n        else\n          @discussions = []\n\n    fetch: ->\n      if @$route.query.q\n        @searchLoader.fetchRecords(q: @$route.query.q, from: 0)\n      else\n        @loader.fetch(@page).then( => @query())\n\n    filterName: (filter) ->\n      switch filter\n        when 'unread' then 'discussions_panel.unread'\n        when 'all' then 'discussions_panel.all'\n        when 'closed' then 'discussions_panel.closed'\n        when 'templates' then 'templates.templates'\n        when 'subscribed' then 'change_volume_form.simple.loud'\n        else\n          'discussions_panel.open'\n\n  watch:\n    '$route.params': 'init'\n    '$route.query': 'refresh'\n    'page' : ->\n      @fetch()\n      @query()\n\n  computed:\n    page:\n      get: -> parseInt(@$route.query.page) || 1\n      set: (val) ->\n        @$router.replace({query: Object.assign({}, @$route.query, {page: val})}) \n\n    totalPages: ->\n      Math.ceil(parseFloat(@loader.total) / parseFloat(@per))\n\n    pinnedDiscussions: ->\n      orderBy(@discussions.filter((discussion) -> discussion.pinnedAt), ['pinnedAt'], ['desc'])\n\n    regularDiscussions: ->\n      orderBy(@discussions.filter((discussion) -> !discussion.pinnedAt), ['lastActivityAt'], ['desc'])\n\n    groupTags: ->\n      @group && @group.tags().filter (tag) -> tag.taggingsCount > 0\n\n    loading: ->\n      @loader.loading || @searchLoader.loading\n\n    noThreads: ->\n      !@loading && @discussions.length == 0\n\n    canViewPrivateContent: ->\n      AbilityService.canViewPrivateContent(@group)\n\n    canStartThread: ->\n      AbilityService.canStartThread(@group)\n\n    isLoggedIn: ->\n      Session.isSignedIn()\n\n    unreadCount: ->\n      filter(@discussions, (discussion) -> discussion.isUnread()).length\n\n    suggestClosedThreads: ->\n      ['undefined', 'open', 'unread'].includes(String(@$route.query.t)) && @group && @group.closedDiscussionsCount\n\n"],"sourceRoot":""}]}