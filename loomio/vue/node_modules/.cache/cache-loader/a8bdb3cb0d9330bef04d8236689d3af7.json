{"remainingRequest":"/home/gustavo/Documents/tese/loomio/vue/node_modules/babel-loader/lib/index.js!/home/gustavo/Documents/tese/loomio/vue/node_modules/vue-cli-plugin-coffee/node_modules/coffee-loader/dist/cjs.js!/home/gustavo/Documents/tese/loomio/vue/src/shared/helpers/format_time.coffee","dependencies":[{"path":"/home/gustavo/Documents/tese/loomio/vue/src/shared/helpers/format_time.coffee","mtime":1706724415808},{"path":"/home/gustavo/Documents/tese/loomio/vue/.babelrc","mtime":1706724415792},{"path":"/home/gustavo/Documents/tese/loomio/vue/node_modules/vue-cli-plugin-coffee/node_modules/cache-loader/dist/cjs.js","mtime":1706724497848},{"path":"/home/gustavo/Documents/tese/loomio/vue/node_modules/babel-loader/lib/index.js","mtime":1706724500796},{"path":"/home/gustavo/Documents/tese/loomio/vue/node_modules/vue-cli-plugin-coffee/node_modules/coffee-loader/dist/cjs.js","mtime":1706724497848}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgZGlmZmVyZW5jZUluSG91cnMsIGZvcm1hdERpc3RhbmNlU3RyaWN0LCBpc1NhbWVZZWFyLCBpc1ZhbGlkLCBwYXJzZSB9IGZyb20gJ2RhdGUtZm5zJzsKaW1wb3J0IHsgZm9ybWF0LCB1dGNUb1pvbmVkVGltZSB9IGZyb20gJ2RhdGUtZm5zLXR6JzsKaW1wb3J0IGRlZmF1bHRMb2NhbGUgZnJvbSAnZGF0ZS1mbnMvbG9jYWxlL2VuLVVTJzsKaW1wb3J0IEFwcENvbmZpZyBmcm9tICdAL3NoYXJlZC9zZXJ2aWNlcy9hcHBfY29uZmlnJzsKaW1wb3J0IFNlc3Npb24gZnJvbSAnQC9zaGFyZWQvc2VydmljZXMvc2Vzc2lvbic7CmltcG9ydCBpMThuIGZyb20gJ0AvaTE4bic7CmkxOG4uZGF0ZUxvY2FsZSA9IGRlZmF1bHRMb2NhbGU7CmV4cG9ydCB2YXIgZGF5ID0gZnVuY3Rpb24gKGRhdGUsIHpvbmUpIHsKICBpZiAoIWlzVmFsaWQoZGF0ZSkpIHsKICAgIHRocm93IHsKICAgICAgImludmFsaWQgZGF0ZSI6ICJpbnZhbGlkIGRhdGUiLAogICAgICBkYXRlCiAgICB9OwogIH0KCiAgcmV0dXJuIGZvcm1hdCh1dGNUb1pvbmVkVGltZShkYXRlLCB6b25lKSwgJ0VFRScsIHsKICAgIHRpbWVab25lOiB6b25lLAogICAgbG9jYWxlOiBpMThuLmRhdGVMb2NhbGUKICB9KTsKfTsKZXhwb3J0IHZhciBhcHByb3hpbWF0ZSA9IGZ1bmN0aW9uIChkYXRlKSB7CiAgbGV0IHpvbmUgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6IEFwcENvbmZpZy50aW1lWm9uZTsKICBsZXQgZGF0ZVRpbWVQcmVmID0gYXJndW1lbnRzLmxlbmd0aCA+IDIgJiYgYXJndW1lbnRzWzJdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMl0gOiBTZXNzaW9uLnVzZXIoKS5kYXRlVGltZVByZWY7CiAgdmFyIGxvY2FsRm9ybWF0LCBub3c7CgogIGlmICghaXNWYWxpZChkYXRlKSkgewogICAgdGhyb3cgewogICAgICAiaW52YWxpZCBkYXRlIjogImludmFsaWQgZGF0ZSIsCiAgICAgIGRhdGUKICAgIH07CiAgfQoKICBsb2NhbEZvcm1hdCA9IGZ1bmN0aW9uIChwYXR0ZXJuKSB7CiAgICByZXR1cm4gZm9ybWF0KHV0Y1RvWm9uZWRUaW1lKGRhdGUsIHpvbmUpLCBwYXR0ZXJuLCB7CiAgICAgIHRpbWVab25lOiB6b25lLAogICAgICBsb2NhbGU6IGkxOG4uZGF0ZUxvY2FsZQogICAgfSk7CiAgfTsKCiAgbm93ID0gbmV3IERhdGUoKTsKCiAgaWYgKGRpZmZlcmVuY2VJbkhvdXJzKG5vdywgZGF0ZSkgPCAyNCkgewogICAgcmV0dXJuIGZvcm1hdERpc3RhbmNlU3RyaWN0KGRhdGUsIG5ldyBEYXRlKCksIHsKICAgICAgYWRkU3VmZml4OiB0cnVlLAogICAgICBsb2NhbGU6IGkxOG4uZGF0ZUxvY2FsZQogICAgfSk7CiAgfSBlbHNlIGlmIChpc1NhbWVZZWFyKGRhdGUsIG5vdykpIHsKICAgIHJldHVybiBmb3JtYXQoZGF0ZSwgIk1NTU0gZCIsIHsKICAgICAgbG9jYWxlOiBpMThuLmRhdGVMb2NhbGUKICAgIH0pOwogIH0gZWxzZSB7CiAgICBzd2l0Y2ggKGRhdGVUaW1lUHJlZikgewogICAgICBjYXNlICdkYXlfaXNvJzoKICAgICAgY2FzZSAnaXNvJzoKICAgICAgICByZXR1cm4gbG9jYWxGb3JtYXQoJ3l5eXktTU0tZGQnKTsKCiAgICAgIGNhc2UgJ2FiYnInOgogICAgICBjYXNlICdkYXlfYWJicic6CiAgICAgICAgcmV0dXJuIGxvY2FsRm9ybWF0KCJkIExMTCB5eXl5Iik7CgogICAgICBkZWZhdWx0OgogICAgICAgIHJldHVybiBjb25zb2xlLmVycm9yKCd1bmtub3duIGRhdGUgcHJlZicpOwogICAgfQogIH0KfTsKZXhwb3J0IHZhciBleGFjdCA9IGZ1bmN0aW9uIChkYXRlKSB7CiAgbGV0IHpvbmUgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6IEFwcENvbmZpZy50aW1lWm9uZTsKICBsZXQgZGF0ZVRpbWVQcmVmID0gYXJndW1lbnRzLmxlbmd0aCA+IDIgJiYgYXJndW1lbnRzWzJdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMl0gOiBTZXNzaW9uLnVzZXIoKS5kYXRlVGltZVByZWY7CiAgdmFyIGxvY2FsRm9ybWF0LCBzcGFjZVBhZERheSwgc3BhY2VQYWRIb3VyOwoKICBpZiAoIWlzVmFsaWQoZGF0ZSkpIHsKICAgIHRocm93IHsKICAgICAgImludmFsaWQgZGF0ZSI6ICJpbnZhbGlkIGRhdGUiLAogICAgICBkYXRlCiAgICB9OwogIH0KCiAgc3BhY2VQYWRIb3VyID0gZnVuY3Rpb24gKCkgewogICAgdmFyIHBhZDsKICAgIHBhZCA9IHBhcnNlSW50KGZvcm1hdCh1dGNUb1pvbmVkVGltZShkYXRlLCB6b25lKSwgImgiLCB7CiAgICAgIHRpbWVab25lOiB6b25lLAogICAgICBsb2NhbGU6IGkxOG4uZGF0ZUxvY2FsZQogICAgfSkpIDwgMTA7CgogICAgaWYgKHBhZCkgewogICAgICByZXR1cm4gJyAnOwogICAgfSBlbHNlIHsKICAgICAgcmV0dXJuICcnOwogICAgfQogIH07CgogIHNwYWNlUGFkRGF5ID0gZnVuY3Rpb24gKCkgewogICAgdmFyIHBhZDsKICAgIHBhZCA9IHBhcnNlSW50KGZvcm1hdCh1dGNUb1pvbmVkVGltZShkYXRlLCB6b25lKSwgImQiLCB7CiAgICAgIHRpbWVab25lOiB6b25lLAogICAgICBsb2NhbGU6IGkxOG4uZGF0ZUxvY2FsZQogICAgfSkpIDwgMTA7CgogICAgaWYgKHBhZCkgewogICAgICByZXR1cm4gJyAnOwogICAgfSBlbHNlIHsKICAgICAgcmV0dXJuICcnOwogICAgfQogIH07CgogIGxvY2FsRm9ybWF0ID0gZnVuY3Rpb24gKHBhdHRlcm4pIHsKICAgIHJldHVybiBmb3JtYXQodXRjVG9ab25lZFRpbWUoZGF0ZSwgem9uZSksIHBhdHRlcm4sIHsKICAgICAgdGltZVpvbmU6IHpvbmUsCiAgICAgIGxvY2FsZTogaTE4bi5kYXRlTG9jYWxlCiAgICB9KTsKICB9OwoKICBzd2l0Y2ggKGRhdGVUaW1lUHJlZikgewogICAgY2FzZSAnZGF5X2lzbyc6CiAgICAgIHJldHVybiBsb2NhbEZvcm1hdCgnRSB5eXl5LU1NLWRkIEhIOm1tJyk7CgogICAgY2FzZSAnYWJicic6CiAgICAgIHJldHVybiBsb2NhbEZvcm1hdChgJHtzcGFjZVBhZERheSgpfWQgTExMIHl5eXkgJHtzcGFjZVBhZEhvdXIoKX1oOm1tYWApOwoKICAgIGNhc2UgJ2RheV9hYmJyJzoKICAgICAgcmV0dXJuIGxvY2FsRm9ybWF0KGBFICR7c3BhY2VQYWREYXkoKX1kIExMTCB5eXl5ICR7c3BhY2VQYWRIb3VyKCl9aDptbWFgKTsKCiAgICBjYXNlICdpc28nOgogICAgICByZXR1cm4gbG9jYWxGb3JtYXQoJ3l5eXktTU0tZGQgSEg6bW0nKTsKCiAgICBkZWZhdWx0OgogICAgICByZXR1cm4gY29uc29sZS5lcnJvcigndW5rbm93biBkYXRlIHByZWYnKTsKICB9Cn07CmV4cG9ydCB2YXIgaG91cnNPZkRheSA9IGZ1bmN0aW9uICgpIHsKICByZXR1cm4gWyIwMDowMCIsICIwMTowMCIsICIwMjowMCIsICIwMzowMCIsICIwNDowMCIsICIwNTowMCIsICIwNjowMCIsICIwNzowMCIsICIwODowMCIsICIwOTowMCIsICIxMDowMCIsICIxMTowMCIsICIxMjowMCIsICIxMzowMCIsICIxNDowMCIsICIxNTowMCIsICIxNjowMCIsICIxNzowMCIsICIxODowMCIsICIxOTowMCIsICIyMDowMCIsICIyMTowMCIsICIyMjowMCIsICIyMzowMCIsICIyMzo1OSJdOwp9OwpleHBvcnQgdmFyIHRpbWVsaW5lID0gZnVuY3Rpb24gKGRhdGUpIHsKICByZXR1cm4gZm9ybWF0KGRhdGUsICJ5eXl5LU1NLWRkIik7Cn07CmV4cG9ydCB2YXIgdGltZUZvcm1hdCA9IGZ1bmN0aW9uICgpIHsKICBpZiAoU2Vzc2lvbi51c2VyKCkuZGF0ZVRpbWVQcmVmLmluY2x1ZGVzKCdhYmJyJykpIHsKICAgIHJldHVybiAnaDptbSBhJzsKICB9IGVsc2UgewogICAgcmV0dXJuICdISDptbSc7CiAgfQp9Ow=="},{"version":3,"sources":["/home/gustavo/Documents/tese/loomio/vue/src/shared/helpers/format_time.coffee"],"names":[],"mappings":"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","sourcesContent":["import { differenceInHours, formatDistanceStrict, isSameYear, isValid, parse } from 'date-fns'\nimport { format, utcToZonedTime } from 'date-fns-tz'\nimport defaultLocale from 'date-fns/locale/en-US'\nimport AppConfig from '@/shared/services/app_config'\nimport Session from '@/shared/services/session'\nimport i18n from '@/i18n'\n\ni18n.dateLocale = defaultLocale\n\nexport day = (date, zone) ->\n  throw {\"invalid date\", date} unless isValid(date)\n  format(utcToZonedTime(date, zone), 'EEE', {timeZone: zone, locale: i18n.dateLocale})\n\nexport approximate = (date, zone = AppConfig.timeZone, dateTimePref = Session.user().dateTimePref) ->\n  throw {\"invalid date\", date} unless isValid(date)\n\n  localFormat = (pattern) ->\n    format(utcToZonedTime(date, zone), pattern, {timeZone: zone, locale: i18n.dateLocale})\n\n  now = new Date\n  if differenceInHours(now, date) < 24\n    formatDistanceStrict(date, new Date(), {addSuffix: true, locale: i18n.dateLocale})\n  else if isSameYear(date, now)\n    format(date, \"MMMM d\", {locale: i18n.dateLocale})\n  else\n    switch dateTimePref\n      when 'day_iso', 'iso'\n        localFormat('yyyy-MM-dd')\n      when 'abbr', 'day_abbr'\n        localFormat(\"d LLL yyyy\")\n      else\n        console.error('unknown date pref')\n\n\nexport exact = (date, zone = AppConfig.timeZone, dateTimePref = Session.user().dateTimePref) ->\n  throw {\"invalid date\", date} unless isValid(date)\n\n  spacePadHour = ->\n    pad = parseInt(format(utcToZonedTime(date, zone), \"h\", {timeZone: zone, locale: i18n.dateLocale})) < 10\n    if pad then ' ' else ''\n\n  spacePadDay = ->\n    pad = parseInt(format(utcToZonedTime(date, zone), \"d\", {timeZone: zone, locale: i18n.dateLocale})) < 10\n    if pad then ' ' else ''\n\n  localFormat = (pattern) ->\n    format(utcToZonedTime(date, zone), pattern, {timeZone: zone, locale: i18n.dateLocale})\n\n  switch dateTimePref\n    when 'day_iso'\n      localFormat('E yyyy-MM-dd HH:mm')\n    when 'abbr'\n      localFormat(\"#{spacePadDay()}d LLL yyyy #{spacePadHour()}h:mma\")\n    when 'day_abbr'\n      localFormat(\"E #{spacePadDay()}d LLL yyyy #{spacePadHour()}h:mma\")\n    when 'iso'\n      localFormat('yyyy-MM-dd HH:mm')\n    else\n      console.error('unknown date pref')\n\nexport hoursOfDay = -> \n  [\n    \"00:00\"\n    \"01:00\"\n    \"02:00\"\n    \"03:00\"\n    \"04:00\"\n    \"05:00\"\n    \"06:00\"\n    \"07:00\"\n    \"08:00\"\n    \"09:00\"\n    \"10:00\"\n    \"11:00\"\n    \"12:00\"\n    \"13:00\"\n    \"14:00\"\n    \"15:00\"\n    \"16:00\"\n    \"17:00\"\n    \"18:00\"\n    \"19:00\"\n    \"20:00\"\n    \"21:00\"\n    \"22:00\"\n    \"23:00\"\n    \"23:59\"\n  ]\n\nexport timeline = (date) -> format(date, \"yyyy-MM-dd\")\n\nexport timeFormat = ->\n    if Session.user().dateTimePref.includes('abbr')\n      'h:mm a'\n    else\n      'HH:mm'\n"],"sourceRoot":""}]}