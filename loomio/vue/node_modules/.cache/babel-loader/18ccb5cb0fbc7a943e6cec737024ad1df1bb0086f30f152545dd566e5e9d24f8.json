{"ast":null,"code":"import Image from '@tiptap/extension-image';\nimport { Plugin, PluginKey } from '@tiptap/pm/state';\nimport { Decoration, DecorationSet } from '@tiptap/pm/view';\nimport { Command, Node, nodeInputRule, mergeAttributes } from '@tiptap/core';\nlet count = 0;\nimport FileUploader from '@/shared/services/file_uploader';\nexport const inputRegex = /!\\[(.+|:?)]\\((\\S+)(?:(?:\\s+)[\"'](\\S+)[\"'])?\\)/;\nconst uploadPlaceholderPlugin = new Plugin({\n  state: {\n    key: new PluginKey('uploadPlaceholder'),\n    init() {\n      return DecorationSet.empty;\n    },\n    apply(tr, set) {\n      // Adjust decoration positions to changes made by the transaction\n      set = set.map(tr.mapping, tr.doc);\n      // See if the transaction adds or removes any placeholders\n      let action = tr.getMeta('uploadPlaceholder');\n      if (action && action.add) {\n        let widget = document.createElement(\"progress\");\n        widget.setAttribute(\"id\", action.add.id);\n        widget.setAttribute(\"max\", 100);\n        widget.setAttribute(\"value\", 0);\n        let deco = Decoration.widget(action.add.pos, widget, {\n          id: action.add.id\n        });\n        set = set.add(tr.doc, [deco]);\n      } else if (action && action.remove) {\n        set = set.remove(set.find(null, null, spec => spec.id == action.remove.id));\n      }\n      return set;\n    }\n  },\n  props: {\n    decorations(state) {\n      return this.getState(state);\n    }\n  }\n});\nfunction finduploadPlaceholder(state, id) {\n  let decos = uploadPlaceholderPlugin.getState(state);\n  let found = decos.find(null, null, spec => spec.id == id);\n  return found.length ? found[0].from : null;\n}\nfunction handleUploads({\n  files,\n  view,\n  attachFile,\n  attachImageFile,\n  coordinates\n}) {\n  Array.from(files || []).forEach(file => {\n    if (/image/i.test(file.type)) {\n      insertImage(file, view, coordinates, attachImageFile);\n    } else {\n      attachFile({\n        file\n      });\n    }\n  });\n}\nexport function insertImage(file, view, coordinates, attachImageFile) {\n  const {\n    schema\n  } = view.state;\n  const id = \"image\" + count++;\n  // Replace the selection with a placeholder\n  let tr = view.state.tr;\n  if (!tr.selection.empty) {\n    tr.deleteSelection();\n    tr.setMeta('uploadPlaceholder', {\n      add: {\n        id,\n        pos: tr.selection.from\n      }\n    });\n  } else if (coordinates) {\n    tr.setMeta('uploadPlaceholder', {\n      add: {\n        id,\n        pos: coordinates.pos\n      }\n    });\n  } else {\n    tr.setMeta('uploadPlaceholder', {\n      add: {\n        id,\n        pos: tr.selection.from\n      }\n    });\n  }\n  view.dispatch(tr);\n  attachImageFile({\n    file: file,\n    onProgress: e => {\n      document.getElementById(id).setAttribute(\"value\", parseInt(e.loaded / e.total * 100));\n    },\n    onComplete: blob => {\n      var img = document.createElement('img');\n      img.src = blob.preview_url;\n      img.onload = function () {\n        let pos = finduploadPlaceholder(view.state, id);\n        // If the content around the placeholder has been deleted, drop\n        // the image\n        if (pos == null) return;\n        // Otherwise, insert it at the placeholder's position, and remove\n        // the placeholder\n        view.dispatch(view.state.tr.replaceWith(pos, pos, schema.nodes.image.create({\n          src: blob.preview_url,\n          height: img.naturalHeight,\n          width: img.naturalWidth\n        })).setMeta('uploadPlaceholder', {\n          remove: {\n            id\n          }\n        }));\n      };\n    },\n    onFailure: () => {\n      // On failure, just clean up the placeholder\n      view.dispatch(tr.setMeta('uploadPlaceholder', {\n        remove: {\n          id\n        }\n      }));\n    }\n  });\n}\nexport const CustomImage = Image.extend({\n  addAttributes() {\n    return {\n      src: {\n        default: null\n      },\n      alt: {\n        default: null\n      },\n      title: {\n        default: null\n      },\n      width: {\n        default: null\n      },\n      height: {\n        default: null\n      }\n    };\n  },\n  addInputRules() {\n    return [nodeInputRule({\n      find: inputRegex,\n      type: this.type,\n      getAttributes: match => {\n        const [, alt, src, title, width, height] = match;\n        return {\n          src,\n          alt,\n          title,\n          width,\n          height\n        };\n      }\n    })];\n  },\n  addProseMirrorPlugins() {\n    const attachFile = this.options.attachFile;\n    const attachImageFile = this.options.attachImageFile;\n    return [uploadPlaceholderPlugin, new Plugin({\n      props: {\n        handleDOMEvents: {\n          paste(view, event) {\n            const items = Array.from(event.clipboardData.items);\n            if (items.filter(item => item.getAsFile()).length == 0) {\n              return;\n            }\n            event.preventDefault();\n            const files = items.map(item => new File([item.getAsFile()], event.clipboardData.getData('text/plain') || Date.now(), {\n              lastModified: Date.now(),\n              type: item.type\n            }));\n            const coordinates = null;\n            handleUploads({\n              files,\n              view,\n              attachFile,\n              attachImageFile,\n              coordinates\n            });\n          },\n          drop(view, event) {\n            // first -> upload the file and callback with progress and when it's done\n            // display an uploading image, and when the upload is complete, replace the src with the url.\n            const hasFiles = event.dataTransfer && event.dataTransfer.files && event.dataTransfer.files.length;\n            if (!hasFiles) {\n              return;\n            }\n            event.preventDefault();\n            const coordinates = view.posAtCoords({\n              left: event.clientX,\n              top: event.clientY\n            });\n            handleUploads({\n              files: event.dataTransfer.files,\n              view,\n              attachFile,\n              attachImageFile,\n              coordinates\n            });\n          }\n        }\n      }\n    })];\n  }\n});","map":{"version":3,"names":["Image","Plugin","PluginKey","Decoration","DecorationSet","Command","Node","nodeInputRule","mergeAttributes","count","FileUploader","inputRegex","uploadPlaceholderPlugin","state","key","init","empty","apply","tr","set","map","mapping","doc","action","getMeta","add","widget","document","createElement","setAttribute","id","deco","pos","remove","find","spec","props","decorations","getState","finduploadPlaceholder","decos","found","length","from","handleUploads","files","view","attachFile","attachImageFile","coordinates","Array","forEach","file","test","type","insertImage","schema","selection","deleteSelection","setMeta","dispatch","onProgress","e","getElementById","parseInt","loaded","total","onComplete","blob","img","src","preview_url","onload","replaceWith","nodes","image","create","height","naturalHeight","width","naturalWidth","onFailure","CustomImage","extend","addAttributes","default","alt","title","addInputRules","getAttributes","match","addProseMirrorPlugins","options","handleDOMEvents","paste","event","items","clipboardData","filter","item","getAsFile","preventDefault","File","getData","Date","now","lastModified","drop","hasFiles","dataTransfer","posAtCoords","left","clientX","top","clientY"],"sources":["/home/gustavo/Documents/tese/loomio/vue/src/components/lmo_textarea/extension_image.js"],"sourcesContent":["import Image from '@tiptap/extension-image'\nimport { Plugin, PluginKey } from '@tiptap/pm/state'\nimport {Decoration, DecorationSet} from '@tiptap/pm/view'\nimport {\n  Command,\n  Node,\n  nodeInputRule,\n  mergeAttributes,\n} from '@tiptap/core'\n\nlet count = 0;\nimport FileUploader from '@/shared/services/file_uploader'\n\nexport const inputRegex = /!\\[(.+|:?)]\\((\\S+)(?:(?:\\s+)[\"'](\\S+)[\"'])?\\)/\n\nconst uploadPlaceholderPlugin = new Plugin({\n   state: {\n    key: new PluginKey('uploadPlaceholder'),\n    init() { return DecorationSet.empty },\n    apply(tr, set)  {\n      // Adjust decoration positions to changes made by the transaction\n      set = set.map(tr.mapping, tr.doc)\n      // See if the transaction adds or removes any placeholders\n      let action = tr.getMeta('uploadPlaceholder')\n      if (action && action.add) {\n        let widget = document.createElement(\"progress\")\n        widget.setAttribute(\"id\", action.add.id)\n        widget.setAttribute(\"max\", 100)\n        widget.setAttribute(\"value\", 0)\n        let deco = Decoration.widget(action.add.pos, widget, {id: action.add.id})\n        set = set.add(tr.doc, [deco])\n      } else if (action && action.remove) {\n        set = set.remove(set.find(null, null, spec => spec.id == action.remove.id))\n      }\n      return set\n    }\n  },\n  props: {\n    decorations(state) { return this.getState(state) }\n  }\n})\n\n\nfunction finduploadPlaceholder(state, id) {\n  let decos = uploadPlaceholderPlugin.getState(state)\n  let found = decos.find(null, null, spec => spec.id == id)\n  return found.length ? found[0].from : null\n}\n\nfunction handleUploads({files, view, attachFile, attachImageFile, coordinates}) {\n  Array.from(files || []).forEach(file => {\n    if ((/image/i).test(file.type)) {\n      insertImage(file, view, coordinates, attachImageFile)\n    } else {\n      attachFile({file})\n    }\n  })\n}\n\nexport function insertImage(file, view, coordinates, attachImageFile) {\n  const { schema } = view.state\n\n  const id = \"image\"+(count++)\n  // Replace the selection with a placeholder\n  let tr = view.state.tr\n  if (!tr.selection.empty) {\n    tr.deleteSelection()\n    tr.setMeta('uploadPlaceholder', {add: {id, pos: tr.selection.from}})\n  } else if (coordinates) {\n    tr.setMeta('uploadPlaceholder', {add: {id, pos: coordinates.pos}})\n  } else {\n    tr.setMeta('uploadPlaceholder', {add: {id, pos: tr.selection.from}})\n  }\n  view.dispatch(tr)\n\n  attachImageFile({\n    file: file,\n    onProgress: (e) => {\n      document.getElementById(id).setAttribute(\"value\", parseInt(e.loaded / e.total * 100))\n    },\n    onComplete: (blob) => {\n      var img = document.createElement('img');\n      img.src = blob.preview_url\n      img.onload = function() {\n        let pos = finduploadPlaceholder(view.state, id)\n        // If the content around the placeholder has been deleted, drop\n        // the image\n        if (pos == null) return\n        // Otherwise, insert it at the placeholder's position, and remove\n        // the placeholder\n        view.dispatch(view.state.tr\n         .replaceWith(pos, pos, schema.nodes.image.create({src: blob.preview_url, height: img.naturalHeight, width:img.naturalWidth}))\n         .setMeta('uploadPlaceholder', {remove: {id}}))\n      }\n    },\n    onFailure: () => {\n      // On failure, just clean up the placeholder\n      view.dispatch(tr.setMeta('uploadPlaceholder', {remove: {id}}))\n    }\n  })\n}\n\n\nexport const CustomImage = Image.extend({\n  addAttributes() {\n    return {\n      src: {\n        default: null,\n      },\n      alt: {\n        default: null,\n      },\n      title: {\n        default: null,\n      },\n      width: {\n        default: null,\n      },\n      height: {\n        default: null,\n      },\n    }\n  },\n  addInputRules() {\n    return [\n      nodeInputRule({\n        find: inputRegex,\n        type: this.type,\n        getAttributes: match => {\n          const [, alt, src, title, width, height] = match\n          return { src, alt, title, width, height }\n        }\n      }),\n    ]\n  },\n  addProseMirrorPlugins() {\n    const attachFile = this.options.attachFile\n    const attachImageFile = this.options.attachImageFile\n    return [\n      uploadPlaceholderPlugin,\n      new Plugin({\n        props: {\n          handleDOMEvents: {\n            paste(view, event) {\n              const items = Array.from(event.clipboardData.items)\n\n              if (items.filter(item => item.getAsFile()).length == 0) {\n                return\n              }\n\n              event.preventDefault()\n              const files = items.map(item =>\n                new File([item.getAsFile()],\n                         event.clipboardData.getData('text/plain') || Date.now(),\n                         {lastModified: Date.now(), type: item.type})\n              )\n              const coordinates = null;\n              handleUploads({files, view, attachFile, attachImageFile, coordinates})\n            },\n            drop(view, event) {\n              // first -> upload the file and callback with progress and when it's done\n              // display an uploading image, and when the upload is complete, replace the src with the url.\n              const hasFiles = event.dataTransfer\n              && event.dataTransfer.files\n              && event.dataTransfer.files.length\n\n              if (!hasFiles) {\n                return\n              }\n              event.preventDefault()\n\n              const coordinates = view.posAtCoords({ left: event.clientX, top: event.clientY })\n\n              handleUploads({files: event.dataTransfer.files, view, attachFile, attachImageFile, coordinates})\n            },\n          },\n        },\n      }),\n    ]\n  },\n})\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}