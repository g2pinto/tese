{"ast":null,"code":"import TaskItem from '@tiptap/extension-task-item';\nimport Session from '@/shared/services/session';\nimport { VueNodeViewRenderer } from '@tiptap/vue-2';\nimport TaskItemComponent from './task_item_component.vue';\nexport const CustomTaskItem = TaskItem.extend({\n  addAttributes() {\n    return {\n      uid: {\n        default: Math.floor(Math.random() * 90000000),\n        parseHTML: element => parseInt(element.getAttribute('data-uid')) || Math.floor(Math.random() * 90000000),\n        renderHTML: attributes => ({\n          'data-uid': attributes.uid\n        }),\n        keepOnSplit: false\n      },\n      checked: {\n        default: false,\n        // Take the attribute values\n        parseHTML: element => (element.getAttribute('data-checked') || element.getAttribute('data-done')) === 'true',\n        renderHTML: attributes => ({\n          'data-checked': attributes.checked\n        }),\n        keepOnSplit: false\n      },\n      dueOn: {\n        default: null,\n        parseHTML: element => element.getAttribute('data-due-on'),\n        renderHTML: attributes => ({\n          'data-due-on': attributes.dueOn\n        }),\n        keepOnSplit: false\n      },\n      remind: {\n        default: null,\n        parseHTML: element => element.getAttribute('data-remind'),\n        renderHTML: attributes => ({\n          'data-remind': attributes.remind\n        }),\n        keepOnSplit: false\n      },\n      authorId: {\n        default: Session.user().id,\n        parseHTML: element => parseInt(element.getAttribute('data-author-id')),\n        renderHTML: attributes => ({\n          'data-author-id': attributes.authorId\n        }),\n        keepOnSplit: false\n      }\n    };\n  },\n  parseHTML() {\n    return [{\n      tag: 'li[data-type=\"taskItem\"]',\n      priority: 51\n    }, {\n      tag: 'li[data-type=\"todo_item\"]',\n      priority: 51\n    }];\n  },\n  addNodeView() {\n    return VueNodeViewRenderer(TaskItemComponent);\n  }\n});","map":{"version":3,"names":["TaskItem","Session","VueNodeViewRenderer","TaskItemComponent","CustomTaskItem","extend","addAttributes","uid","default","Math","floor","random","parseHTML","element","parseInt","getAttribute","renderHTML","attributes","keepOnSplit","checked","dueOn","remind","authorId","user","id","tag","priority","addNodeView"],"sources":["/home/gustavo/Documents/tese/loomio/vue/src/components/lmo_textarea/extension_custom_task_item.js"],"sourcesContent":["import TaskItem from '@tiptap/extension-task-item'\nimport Session from '@/shared/services/session'\nimport { VueNodeViewRenderer } from '@tiptap/vue-2'\nimport TaskItemComponent from './task_item_component.vue'\n\nexport const CustomTaskItem = TaskItem.extend({\n  addAttributes() {\n    return {\n      uid: {\n        default: Math.floor(Math.random() * 90000000),\n        parseHTML: element => ( parseInt(element.getAttribute('data-uid')) || Math.floor(Math.random() * 90000000) ),\n        renderHTML: attributes => ({\n          'data-uid': attributes.uid,\n        }),\n        keepOnSplit: false,\n      },\n\n      checked: {\n        default: false,\n        // Take the attribute values\n        parseHTML: element => ( (element.getAttribute('data-checked') || element.getAttribute('data-done')) === 'true' ),\n        renderHTML: attributes => ({\n          'data-checked': attributes.checked,\n        }),\n        keepOnSplit: false,\n      },\n\n      dueOn: {\n        default: null,\n        parseHTML: element => ( element.getAttribute('data-due-on') ),\n        renderHTML: attributes => ({\n          'data-due-on': attributes.dueOn,\n        }),\n        keepOnSplit: false,\n      },\n\n      remind: {\n        default: null,\n        parseHTML: element => ( element.getAttribute('data-remind') ),\n        renderHTML: attributes => ({\n          'data-remind': attributes.remind,\n        }),\n        keepOnSplit: false,\n      },\n\n      authorId: {\n        default: Session.user().id,\n        parseHTML: element => ( parseInt(element.getAttribute('data-author-id')) ),\n        renderHTML: attributes => ({\n          'data-author-id': attributes.authorId,\n        }),\n        keepOnSplit: false,\n      }\n    }\n  },\n  parseHTML() {\n    return [\n      {\n        tag: 'li[data-type=\"taskItem\"]',\n        priority: 51,\n      },\n      {\n        tag: 'li[data-type=\"todo_item\"]',\n        priority: 51,\n      },\n    ]\n  },\n\n  addNodeView() {\n    return VueNodeViewRenderer(TaskItemComponent)\n  },\n})\n"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,6BAA6B;AAClD,OAAOC,OAAO,MAAM,2BAA2B;AAC/C,SAASC,mBAAmB,QAAQ,eAAe;AACnD,OAAOC,iBAAiB,MAAM,2BAA2B;AAEzD,OAAO,MAAMC,cAAc,GAAGJ,QAAQ,CAACK,MAAM,CAAC;EAC5CC,aAAaA,CAAA,EAAG;IACd,OAAO;MACLC,GAAG,EAAE;QACHC,OAAO,EAAEC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,QAAQ,CAAC;QAC7CC,SAAS,EAAEC,OAAO,IAAMC,QAAQ,CAACD,OAAO,CAACE,YAAY,CAAC,UAAU,CAAC,CAAC,IAAIN,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,QAAQ,CAAG;QAC5GK,UAAU,EAAEC,UAAU,KAAK;UACzB,UAAU,EAAEA,UAAU,CAACV;QACzB,CAAC,CAAC;QACFW,WAAW,EAAE;MACf,CAAC;MAEDC,OAAO,EAAE;QACPX,OAAO,EAAE,KAAK;QACd;QACAI,SAAS,EAAEC,OAAO,IAAM,CAACA,OAAO,CAACE,YAAY,CAAC,cAAc,CAAC,IAAIF,OAAO,CAACE,YAAY,CAAC,WAAW,CAAC,MAAM,MAAQ;QAChHC,UAAU,EAAEC,UAAU,KAAK;UACzB,cAAc,EAAEA,UAAU,CAACE;QAC7B,CAAC,CAAC;QACFD,WAAW,EAAE;MACf,CAAC;MAEDE,KAAK,EAAE;QACLZ,OAAO,EAAE,IAAI;QACbI,SAAS,EAAEC,OAAO,IAAMA,OAAO,CAACE,YAAY,CAAC,aAAa,CAAG;QAC7DC,UAAU,EAAEC,UAAU,KAAK;UACzB,aAAa,EAAEA,UAAU,CAACG;QAC5B,CAAC,CAAC;QACFF,WAAW,EAAE;MACf,CAAC;MAEDG,MAAM,EAAE;QACNb,OAAO,EAAE,IAAI;QACbI,SAAS,EAAEC,OAAO,IAAMA,OAAO,CAACE,YAAY,CAAC,aAAa,CAAG;QAC7DC,UAAU,EAAEC,UAAU,KAAK;UACzB,aAAa,EAAEA,UAAU,CAACI;QAC5B,CAAC,CAAC;QACFH,WAAW,EAAE;MACf,CAAC;MAEDI,QAAQ,EAAE;QACRd,OAAO,EAAEP,OAAO,CAACsB,IAAI,CAAC,CAAC,CAACC,EAAE;QAC1BZ,SAAS,EAAEC,OAAO,IAAMC,QAAQ,CAACD,OAAO,CAACE,YAAY,CAAC,gBAAgB,CAAC,CAAG;QAC1EC,UAAU,EAAEC,UAAU,KAAK;UACzB,gBAAgB,EAAEA,UAAU,CAACK;QAC/B,CAAC,CAAC;QACFJ,WAAW,EAAE;MACf;IACF,CAAC;EACH,CAAC;EACDN,SAASA,CAAA,EAAG;IACV,OAAO,CACL;MACEa,GAAG,EAAE,0BAA0B;MAC/BC,QAAQ,EAAE;IACZ,CAAC,EACD;MACED,GAAG,EAAE,2BAA2B;MAChCC,QAAQ,EAAE;IACZ,CAAC,CACF;EACH,CAAC;EAEDC,WAAWA,CAAA,EAAG;IACZ,OAAOzB,mBAAmB,CAACC,iBAAiB,CAAC;EAC/C;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}